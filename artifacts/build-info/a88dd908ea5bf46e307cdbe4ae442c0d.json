{
	"id": "a88dd908ea5bf46e307cdbe4ae442c0d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC777.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC777 {\r\n    /**\r\n     * @dev Emitted when `amount` tokens are created by `operator` and assigned to `to`.\r\n     *\r\n     * Note that some additional user `data` and `operatorData` can be logged in the event.\r\n     */\r\n    event Minted(address indexed operator, address indexed to, uint256 amount, bytes data, bytes operatorData);\r\n\r\n    /**\r\n     * @dev Emitted when `operator` destroys `amount` tokens from `account`.\r\n     *\r\n     * Note that some additional user `data` and `operatorData` can be logged in the event.\r\n     */\r\n    event Burned(address indexed operator, address indexed from, uint256 amount, bytes data, bytes operatorData);\r\n\r\n    /**\r\n     * @dev Emitted when `operator` is made operator for `tokenHolder`.\r\n     */\r\n    event AuthorizedOperator(address indexed operator, address indexed tokenHolder);\r\n\r\n    /**\r\n     * @dev Emitted when `operator` is revoked its operator status for `tokenHolder`.\r\n     */\r\n    event RevokedOperator(address indexed operator, address indexed tokenHolder);\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the smallest part of the token that is not divisible. This\r\n     * means all token operations (creation, movement and destruction) must have\r\n     * amounts that are a multiple of this number.\r\n     *\r\n     * For most token contracts, this value will equal 1.\r\n     */\r\n    function granularity() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by an account (`owner`).\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * If send or receive hooks are registered for the caller and `recipient`,\r\n     * the corresponding functions will be called with `data` and empty\r\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\r\n     *\r\n     * Emits a {Sent} event.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - the caller must have at least `amount` tokens.\r\n     * - `recipient` cannot be the zero address.\r\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\r\n     * interface.\r\n     */\r\n    function send(address recipient, uint256 amount, bytes calldata data) external;\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from the caller's account, reducing the\r\n     * total supply.\r\n     *\r\n     * If a send hook is registered for the caller, the corresponding function\r\n     * will be called with `data` and empty `operatorData`. See {IERC777Sender}.\r\n     *\r\n     * Emits a {Burned} event.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - the caller must have at least `amount` tokens.\r\n     */\r\n    function burn(uint256 amount, bytes calldata data) external;\r\n\r\n    /**\r\n     * @dev Returns true if an account is an operator of `tokenHolder`.\r\n     * Operators can send and burn tokens on behalf of their owners. All\r\n     * accounts are their own operator.\r\n     *\r\n     * See {operatorSend} and {operatorBurn}.\r\n     */\r\n    function isOperatorFor(address operator, address tokenHolder) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Make an account an operator of the caller.\r\n     *\r\n     * See {isOperatorFor}.\r\n     *\r\n     * Emits an {AuthorizedOperator} event.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `operator` cannot be calling address.\r\n     */\r\n    function authorizeOperator(address operator) external;\r\n\r\n    /**\r\n     * @dev Revoke an account's operator status for the caller.\r\n     *\r\n     * See {isOperatorFor} and {defaultOperators}.\r\n     *\r\n     * Emits a {RevokedOperator} event.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `operator` cannot be calling address.\r\n     */\r\n    function revokeOperator(address operator) external;\r\n\r\n    /**\r\n     * @dev Returns the list of default operators. These accounts are operators\r\n     * for all token holders, even if {authorizeOperator} was never called on\r\n     * them.\r\n     *\r\n     * This list is immutable, but individual holders may revoke these via\r\n     * {revokeOperator}, in which case {isOperatorFor} will return false.\r\n     */\r\n    function defaultOperators() external view returns (address[] memory);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\r\n     * be an operator of `sender`.\r\n     *\r\n     * If send or receive hooks are registered for `sender` and `recipient`,\r\n     * the corresponding functions will be called with `data` and\r\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\r\n     *\r\n     * Emits a {Sent} event.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `sender` must have at least `amount` tokens.\r\n     * - the caller must be an operator for `sender`.\r\n     * - `recipient` cannot be the zero address.\r\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\r\n     * interface.\r\n     */\r\n    function operatorSend(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount,\r\n        bytes calldata data,\r\n        bytes calldata operatorData\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\r\n     * The caller must be an operator of `account`.\r\n     *\r\n     * If a send hook is registered for `account`, the corresponding function\r\n     * will be called with `data` and `operatorData`. See {IERC777Sender}.\r\n     *\r\n     * Emits a {Burned} event.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     * - the caller must be an operator for `account`.\r\n     */\r\n    function operatorBurn(address account, uint256 amount, bytes calldata data, bytes calldata operatorData) external;\r\n\r\n    event Sent(\r\n        address indexed operator,\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256 amount,\r\n        bytes data,\r\n        bytes operatorData\r\n    );\r\n}\r\ninterface IERC777Recipient {\r\n    /**\r\n     * @dev Called by an {IERC777} token contract whenever tokens are being\r\n     * moved or created into a registered account (`to`). The type of operation\r\n     * is conveyed by `from` being the zero address or not.\r\n     *\r\n     * This call occurs _after_ the token contract's state is updated, so\r\n     * {IERC777-balanceOf}, etc., can be used to query the post-operation state.\r\n     *\r\n     * This function may revert to prevent the operation from being executed.\r\n     */\r\n    function tokensReceived(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256 amount,\r\n        bytes calldata userData,\r\n        bytes calldata operatorData\r\n    ) external;\r\n}\r\ninterface IERC777Sender {\r\n    /**\r\n     * @dev Called by an {IERC777} token contract whenever a registered holder's\r\n     * (`from`) tokens are about to be moved or destroyed. The type of operation\r\n     * is conveyed by `to` being the zero address or not.\r\n     *\r\n     * This call occurs _before_ the token contract's state is updated, so\r\n     * {IERC777-balanceOf}, etc., can be used to query the pre-operation state.\r\n     *\r\n     * This function may revert to prevent the operation from being executed.\r\n     */\r\n    function tokensToSend(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256 amount,\r\n        bytes calldata userData,\r\n        bytes calldata operatorData\r\n    ) external;\r\n}\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n}\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     *\r\n     * Furthermore, `isContract` will also return true if the target contract within\r\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\r\n     * which only has an effect at the end of a transaction.\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\r\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\r\n     *\r\n     * _Available since v4.8._\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        if (success) {\r\n            if (returndata.length == 0) {\r\n                // only check isContract if the call was successful and the return data is empty\r\n                // otherwise we already know that it was a contract\r\n                require(isContract(target), \"Address: call to non-contract\");\r\n            }\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason or using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert(errorMessage);\r\n        }\r\n    }\r\n}\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\ninterface IERC1820Registry {\r\n    event InterfaceImplementerSet(address indexed account, bytes32 indexed interfaceHash, address indexed implementer);\r\n\r\n    event ManagerChanged(address indexed account, address indexed newManager);\r\n\r\n    /**\r\n     * @dev Sets `newManager` as the manager for `account`. A manager of an\r\n     * account is able to set interface implementers for it.\r\n     *\r\n     * By default, each account is its own manager. Passing a value of `0x0` in\r\n     * `newManager` will reset the manager to this initial state.\r\n     *\r\n     * Emits a {ManagerChanged} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be the current manager for `account`.\r\n     */\r\n    function setManager(address account, address newManager) external;\r\n\r\n    /**\r\n     * @dev Returns the manager for `account`.\r\n     *\r\n     * See {setManager}.\r\n     */\r\n    function getManager(address account) external view returns (address);\r\n\r\n    /**\r\n     * @dev Sets the `implementer` contract as ``account``'s implementer for\r\n     * `interfaceHash`.\r\n     *\r\n     * `account` being the zero address is an alias for the caller's address.\r\n     * The zero address can also be used in `implementer` to remove an old one.\r\n     *\r\n     * See {interfaceHash} to learn how these are created.\r\n     *\r\n     * Emits an {InterfaceImplementerSet} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be the current manager for `account`.\r\n     * - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\r\n     * end in 28 zeroes).\r\n     * - `implementer` must implement {IERC1820Implementer} and return true when\r\n     * queried for support, unless `implementer` is the caller. See\r\n     * {IERC1820Implementer-canImplementInterfaceForAddress}.\r\n     */\r\n    function setInterfaceImplementer(address account, bytes32 _interfaceHash, address implementer) external;\r\n\r\n    /**\r\n     * @dev Returns the implementer of `interfaceHash` for `account`. If no such\r\n     * implementer is registered, returns the zero address.\r\n     *\r\n     * If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\r\n     * zeroes), `account` will be queried for support of it.\r\n     *\r\n     * `account` being the zero address is an alias for the caller's address.\r\n     */\r\n    function getInterfaceImplementer(address account, bytes32 _interfaceHash) external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the interface hash for an `interfaceName`, as defined in the\r\n     * corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\r\n     */\r\n    function interfaceHash(string calldata interfaceName) external pure returns (bytes32);\r\n\r\n    /**\r\n     * @notice Updates the cache with whether the contract implements an ERC165 interface or not.\r\n     * @param account Address of the contract for which to update the cache.\r\n     * @param interfaceId ERC165 interface for which to update the cache.\r\n     */\r\n    function updateERC165Cache(address account, bytes4 interfaceId) external;\r\n\r\n    /**\r\n     * @notice Checks whether a contract implements an ERC165 interface or not.\r\n     * If the result is not cached a direct lookup on the contract address is performed.\r\n     * If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\r\n     * {updateERC165Cache} with the contract address.\r\n     * @param account Address of the contract to check.\r\n     * @param interfaceId ERC165 interface to check.\r\n     * @return True if `account` implements `interfaceId`, false otherwise.\r\n     */\r\n    function implementsERC165Interface(address account, bytes4 interfaceId) external view returns (bool);\r\n\r\n    /**\r\n     * @notice Checks whether a contract implements an ERC165 interface or not without using or updating the cache.\r\n     * @param account Address of the contract to check.\r\n     * @param interfaceId ERC165 interface to check.\r\n     * @return True if `account` implements `interfaceId`, false otherwise.\r\n     */\r\n    function implementsERC165InterfaceNoCache(address account, bytes4 interfaceId) external view returns (bool);\r\n}\r\n\r\ncontract ERC777 is Context, IERC777, IERC20 {\r\n    using Address for address;\r\n\r\n    IERC1820Registry internal constant _ERC1820_REGISTRY = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\r\n\r\n    mapping(address => uint256) private _balances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    bytes32 private constant _TOKENS_SENDER_INTERFACE_HASH = keccak256(\"ERC777TokensSender\");\r\n    bytes32 private constant _TOKENS_RECIPIENT_INTERFACE_HASH = keccak256(\"ERC777TokensRecipient\");\r\n\r\n    // This isn't ever read from - it's only used to respond to the defaultOperators query.\r\n    address[] private _defaultOperatorsArray;\r\n\r\n    // Immutable, but accounts may revoke them (tracked in __revokedDefaultOperators).\r\n    mapping(address => bool) private _defaultOperators;\r\n\r\n    // For each account, a mapping of its operators and revoked default operators.\r\n    mapping(address => mapping(address => bool)) private _operators;\r\n    mapping(address => mapping(address => bool)) private _revokedDefaultOperators;\r\n\r\n    // ERC20-allowances\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    /**\r\n     * @dev `defaultOperators` may be an empty array.\r\n     */\r\n    constructor(string memory name_, string memory symbol_, address[] memory defaultOperators_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n\r\n        _defaultOperatorsArray = defaultOperators_;\r\n        for (uint256 i = 0; i < defaultOperators_.length; i++) {\r\n            _defaultOperators[defaultOperators_[i]] = true;\r\n        }\r\n\r\n        // register interfaces\r\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC777Token\"), address(this));\r\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC20Token\"), address(this));\r\n          \r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC777-name}.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC777-symbol}.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {ERC20-decimals}.\r\n     *\r\n     * Always returns 18, as per the\r\n     * [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility).\r\n     */\r\n    function decimals() public pure virtual returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC777-granularity}.\r\n     *\r\n     * This implementation always returns `1`.\r\n     */\r\n    function granularity() public view virtual override returns (uint256) {\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC777-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by an account (`tokenHolder`).\r\n     */\r\n    function balanceOf(address tokenHolder) public view virtual override(IERC20, IERC777) returns (uint256) {\r\n        return _balances[tokenHolder];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC777-send}.\r\n     *\r\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\r\n     */\r\n    function send(address recipient, uint256 amount, bytes memory data) public virtual override {\r\n        _send(_msgSender(), recipient, amount, data, \"\", true);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\r\n     * interface if it is a contract.\r\n     *\r\n     * Also emits a {Sent} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _send(_msgSender(), recipient, amount, \"\", \"\", false);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC777-burn}.\r\n     *\r\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\r\n     */\r\n    function burn(uint256 amount, bytes memory data) public virtual override {\r\n        _burn(_msgSender(), amount, data, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC777-isOperatorFor}.\r\n     */\r\n    function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {\r\n        return\r\n            operator == tokenHolder ||\r\n            (_defaultOperators[operator] && !_revokedDefaultOperators[tokenHolder][operator]) ||\r\n            _operators[tokenHolder][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC777-authorizeOperator}.\r\n     */\r\n    function authorizeOperator(address operator) public virtual override {\r\n        require(_msgSender() != operator, \"ERC777: authorizing self as operator\");\r\n\r\n        if (_defaultOperators[operator]) {\r\n            delete _revokedDefaultOperators[_msgSender()][operator];\r\n        } else {\r\n            _operators[_msgSender()][operator] = true;\r\n        }\r\n\r\n        emit AuthorizedOperator(operator, _msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC777-revokeOperator}.\r\n     */\r\n    function revokeOperator(address operator) public virtual override {\r\n        require(operator != _msgSender(), \"ERC777: revoking self as operator\");\r\n\r\n        if (_defaultOperators[operator]) {\r\n            _revokedDefaultOperators[_msgSender()][operator] = true;\r\n        } else {\r\n            delete _operators[_msgSender()][operator];\r\n        }\r\n\r\n        emit RevokedOperator(operator, _msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC777-defaultOperators}.\r\n     */\r\n    function defaultOperators() public view virtual override returns (address[] memory) {\r\n        return _defaultOperatorsArray;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC777-operatorSend}.\r\n     *\r\n     * Emits {Sent} and {IERC20-Transfer} events.\r\n     */\r\n    function operatorSend(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount,\r\n        bytes memory data,\r\n        bytes memory operatorData\r\n    ) public virtual override {\r\n        require(isOperatorFor(_msgSender(), sender), \"ERC777: caller is not an operator for holder\");\r\n        _send(sender, recipient, amount, data, operatorData, true);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC777-operatorBurn}.\r\n     *\r\n     * Emits {Burned} and {IERC20-Transfer} events.\r\n     */\r\n    function operatorBurn(\r\n        address account,\r\n        uint256 amount,\r\n        bytes memory data,\r\n        bytes memory operatorData\r\n    ) public virtual override {\r\n        require(isOperatorFor(_msgSender(), account), \"ERC777: caller is not an operator for holder\");\r\n        _burn(account, amount, data, operatorData);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     *\r\n     * Note that operator and allowance concepts are orthogonal: operators may\r\n     * not have allowance, and accounts with allowance may not be operators\r\n     * themselves.\r\n     */\r\n    function allowance(address holder, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[holder][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Note that accounts cannot have allowance issued by their operators.\r\n     */\r\n    function approve(address spender, uint256 value) public virtual override returns (bool) {\r\n        address holder = _msgSender();\r\n        _approve(holder, spender, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Note that operator and allowance concepts are orthogonal: operators cannot\r\n     * call `transferFrom` (unless they have allowance), and accounts with\r\n     * allowance cannot call `operatorSend` (unless they are operators).\r\n     *\r\n     * Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events.\r\n     */\r\n    function transferFrom(address holder, address recipient, uint256 amount) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(holder, spender, amount);\r\n        _send(holder, recipient, amount, \"\", \"\", false);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * If a send hook is registered for `account`, the corresponding function\r\n     * will be called with the caller address as the `operator` and with\r\n     * `userData` and `operatorData`.\r\n     *\r\n     * See {IERC777Sender} and {IERC777Recipient}.\r\n     *\r\n     * Emits {Minted} and {IERC20-Transfer} events.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\r\n     * interface.\r\n     */\r\n    function _mint(address account, uint256 amount, bytes memory userData, bytes memory operatorData) internal virtual {\r\n        _mint(account, amount, userData, operatorData, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * If `requireReceptionAck` is set to true, and if a send hook is\r\n     * registered for `account`, the corresponding function will be called with\r\n     * `operator`, `data` and `operatorData`.\r\n     *\r\n     * See {IERC777Sender} and {IERC777Recipient}.\r\n     *\r\n     * Emits {Minted} and {IERC20-Transfer} events.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\r\n     * interface.\r\n     */\r\n    function _mint(\r\n        address account,\r\n        uint256 amount,\r\n        bytes memory userData,\r\n        bytes memory operatorData,\r\n        bool requireReceptionAck\r\n    ) internal virtual {\r\n        require(account != address(0), \"ERC777: mint to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, address(0), account, amount);\r\n\r\n        // Update state variables\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n\r\n        _callTokensReceived(operator, address(0), account, amount, userData, operatorData, requireReceptionAck);\r\n\r\n        emit Minted(operator, account, amount, userData, operatorData);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Send tokens\r\n     * @param from address token holder address\r\n     * @param to address recipient address\r\n     * @param amount uint256 amount of tokens to transfer\r\n     * @param userData bytes extra information provided by the token holder (if any)\r\n     * @param operatorData bytes extra information provided by the operator (if any)\r\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\r\n     */\r\n    function _send(\r\n        address from,\r\n        address to,\r\n        uint256 amount,\r\n        bytes memory userData,\r\n        bytes memory operatorData,\r\n        bool requireReceptionAck\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC777: transfer from the zero address\");\r\n        require(to != address(0), \"ERC777: transfer to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _callTokensToSend(operator, from, to, amount, userData, operatorData);\r\n\r\n        _move(operator, from, to, amount, userData, operatorData);\r\n\r\n        _callTokensReceived(operator, from, to, amount, userData, operatorData, requireReceptionAck);\r\n    }\r\n\r\n    /**\r\n     * @dev Burn tokens\r\n     * @param from address token holder address\r\n     * @param amount uint256 amount of tokens to burn\r\n     * @param data bytes extra information provided by the token holder\r\n     * @param operatorData bytes extra information provided by the operator (if any)\r\n     */\r\n    function _burn(address from, uint256 amount, bytes memory data, bytes memory operatorData) internal virtual {\r\n        require(from != address(0), \"ERC777: burn from the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _callTokensToSend(operator, from, address(0), amount, data, operatorData);\r\n\r\n        _beforeTokenTransfer(operator, from, address(0), amount);\r\n\r\n        // Update state variables\r\n        uint256 fromBalance = _balances[from];\r\n        require(fromBalance >= amount, \"ERC777: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Burned(operator, from, amount, data, operatorData);\r\n        emit Transfer(from, address(0), amount);\r\n    }\r\n\r\n    function _move(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256 amount,\r\n        bytes memory userData,\r\n        bytes memory operatorData\r\n    ) private {\r\n        _beforeTokenTransfer(operator, from, to, amount);\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(fromBalance >= amount, \"ERC777: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n        }\r\n        _balances[to] += amount;\r\n\r\n        emit Sent(operator, from, to, amount, userData, operatorData);\r\n        emit Transfer(from, to, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev See {ERC20-_approve}.\r\n     *\r\n     * Note that accounts cannot have allowance issued by their operators.\r\n     */\r\n    function _approve(address holder, address spender, uint256 value) internal virtual {\r\n        require(holder != address(0), \"ERC777: approve from the zero address\");\r\n        require(spender != address(0), \"ERC777: approve to the zero address\");\r\n\r\n        _allowances[holder][spender] = value;\r\n        emit Approval(holder, spender, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Call from.tokensToSend() if the interface is registered\r\n     * @param operator address operator requesting the transfer\r\n     * @param from address token holder address\r\n     * @param to address recipient address\r\n     * @param amount uint256 amount of tokens to transfer\r\n     * @param userData bytes extra information provided by the token holder (if any)\r\n     * @param operatorData bytes extra information provided by the operator (if any)\r\n     */\r\n    function _callTokensToSend(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256 amount,\r\n        bytes memory userData,\r\n        bytes memory operatorData\r\n    ) private {\r\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH);\r\n        if (implementer != address(0)) {\r\n            IERC777Sender(implementer).tokensToSend(operator, from, to, amount, userData, operatorData);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\r\n     * tokensReceived() was not registered for the recipient\r\n     * @param operator address operator requesting the transfer\r\n     * @param from address token holder address\r\n     * @param to address recipient address\r\n     * @param amount uint256 amount of tokens to transfer\r\n     * @param userData bytes extra information provided by the token holder (if any)\r\n     * @param operatorData bytes extra information provided by the operator (if any)\r\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\r\n     */\r\n    function _callTokensReceived(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256 amount,\r\n        bytes memory userData,\r\n        bytes memory operatorData,\r\n        bool requireReceptionAck\r\n    ) private {\r\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH);\r\n        if (implementer != address(0)) {\r\n            IERC777Recipient(implementer).tokensReceived(operator, from, to, amount, userData, operatorData);\r\n        } else if (requireReceptionAck) {\r\n            require(!to.isContract(), \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\r\n     *\r\n     * Does not update the allowance amount in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Might emit an {IERC20-Approval} event.\r\n     */\r\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \"ERC777: insufficient allowance\");\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any token transfer. This includes\r\n     * calls to {send}, {transfer}, {operatorSend}, {transferFrom}, minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be to transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(address operator, address from, address to, uint256 amount) internal virtual {}\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC777.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC777.sol\":10548:19953  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC777.sol\":10548:19953  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220afe3ce83b5cdb3cb369388538cc8856858c760992f86e79c91d4e054bee45ef364736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220afe3ce83b5cdb3cb369388538cc8856858c760992f86e79c91d4e054bee45ef364736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xE3 0xCE DUP4 0xB5 0xCD 0xB3 0xCB CALLDATASIZE SWAP4 DUP9 MSTORE8 DUP13 0xC8 DUP6 PUSH9 0x58C760992F86E79C91 0xD4 0xE0 SLOAD 0xBE 0xE4 0x5E RETURN PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "10548:9405:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220afe3ce83b5cdb3cb369388538cc8856858c760992f86e79c91d4e054bee45ef364736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xE3 0xCE DUP4 0xB5 0xCD 0xB3 0xCB CALLDATASIZE SWAP4 DUP9 MSTORE8 DUP13 0xC8 DUP6 PUSH9 0x58C760992F86E79C91 0xD4 0xE0 SLOAD 0xBE 0xE4 0x5E RETURN PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "10548:9405:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 10548,
									"end": 19953,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10548,
									"end": 19953,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220afe3ce83b5cdb3cb369388538cc8856858c760992f86e79c91d4e054bee45ef364736f6c63430008120033",
									".code": [
										{
											"begin": 10548,
											"end": 19953,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 10548,
											"end": 19953,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 10548,
											"end": 19953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10548,
											"end": 19953,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10548,
											"end": 19953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10548,
											"end": 19953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10548,
											"end": 19953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10548,
											"end": 19953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10548,
											"end": 19953,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"ERC777.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC777.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC777.sol\":{\"keccak256\":\"0x4d09a28262d6e88a38cf45b06e125a5d1dbeafe0e23f940bee72dcd724ac377a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de4e8c0091625662895560bad283b6ec3d8b5dbe0cd6d70c8175c1b0a2f42bfd\",\"dweb:/ipfs/QmVkd3EeTePWKCFFrCbhKXCZYGDouTFd2yXBrJWwcj2T18\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC777.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC777.sol\":{\"keccak256\":\"0x4d09a28262d6e88a38cf45b06e125a5d1dbeafe0e23f940bee72dcd724ac377a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de4e8c0091625662895560bad283b6ec3d8b5dbe0cd6d70c8175c1b0a2f42bfd\",\"dweb:/ipfs/QmVkd3EeTePWKCFFrCbhKXCZYGDouTFd2yXBrJWwcj2T18\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC777": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "address[]",
									"name": "defaultOperators_",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "AuthorizedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "RevokedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Sent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "authorizeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultOperators",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "granularity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "isOperatorFor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "revokeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "send",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"AuthorizedOperator(address,address)": {
								"details": "Emitted when `operator` is made operator for `tokenHolder`."
							},
							"Burned(address,address,uint256,bytes,bytes)": {
								"details": "Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event."
							},
							"Minted(address,address,uint256,bytes,bytes)": {
								"details": "Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event."
							},
							"RevokedOperator(address,address)": {
								"details": "Emitted when `operator` is revoked its operator status for `tokenHolder`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}. Note that operator and allowance concepts are orthogonal: operators may not have allowance, and accounts with allowance may not be operators themselves."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Note that accounts cannot have allowance issued by their operators."
							},
							"authorizeOperator(address)": {
								"details": "See {IERC777-authorizeOperator}."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by an account (`tokenHolder`)."
							},
							"burn(uint256,bytes)": {
								"details": "See {IERC777-burn}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."
							},
							"constructor": {
								"details": "`defaultOperators` may be an empty array."
							},
							"decimals()": {
								"details": "See {ERC20-decimals}. Always returns 18, as per the [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."
							},
							"defaultOperators()": {
								"details": "See {IERC777-defaultOperators}."
							},
							"granularity()": {
								"details": "See {IERC777-granularity}. This implementation always returns `1`."
							},
							"isOperatorFor(address,address)": {
								"details": "See {IERC777-isOperatorFor}."
							},
							"name()": {
								"details": "See {IERC777-name}."
							},
							"operatorBurn(address,uint256,bytes,bytes)": {
								"details": "See {IERC777-operatorBurn}. Emits {Burned} and {IERC20-Transfer} events."
							},
							"operatorSend(address,address,uint256,bytes,bytes)": {
								"details": "See {IERC777-operatorSend}. Emits {Sent} and {IERC20-Transfer} events."
							},
							"revokeOperator(address)": {
								"details": "See {IERC777-revokeOperator}."
							},
							"send(address,uint256,bytes)": {
								"details": "See {IERC777-send}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."
							},
							"symbol()": {
								"details": "See {IERC777-symbol}."
							},
							"totalSupply()": {
								"details": "See {IERC777-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient} interface if it is a contract. Also emits a {Sent} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Note that operator and allowance concepts are orthogonal: operators cannot call `transferFrom` (unless they have allowance), and accounts with allowance cannot call `operatorSend` (unless they are operators). Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC777.sol\":24363:42184  contract ERC777 is Context, IERC777, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"ERC777.sol\":25622:26228  constructor(string memory name_, string memory symbol_, address[] memory defaultOperators_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ERC777.sol\":25733:25738  name_ */\n  dup3\n    /* \"ERC777.sol\":25725:25730  _name */\n  0x02\n    /* \"ERC777.sol\":25725:25738  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"ERC777.sol\":25759:25766  symbol_ */\n  dup2\n    /* \"ERC777.sol\":25749:25756  _symbol */\n  0x03\n    /* \"ERC777.sol\":25749:25766  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"ERC777.sol\":25804:25821  defaultOperators_ */\n  dup1\n    /* \"ERC777.sol\":25779:25801  _defaultOperatorsArray */\n  0x04\n    /* \"ERC777.sol\":25779:25821  _defaultOperatorsArray = defaultOperators_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_9\n  swap3\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"ERC777.sol\":25837:25846  uint256 i */\n  0x00\n    /* \"ERC777.sol\":25832:25960  for (uint256 i = 0; i < defaultOperators_.length; i++) {... */\ntag_11:\n    /* \"ERC777.sol\":25856:25873  defaultOperators_ */\n  dup2\n    /* \"ERC777.sol\":25856:25880  defaultOperators_.length */\n  mload\n    /* \"ERC777.sol\":25852:25853  i */\n  dup2\n    /* \"ERC777.sol\":25852:25880  i < defaultOperators_.length */\n  lt\n    /* \"ERC777.sol\":25832:25960  for (uint256 i = 0; i < defaultOperators_.length; i++) {... */\n  iszero\n  tag_12\n  jumpi\n    /* \"ERC777.sol\":25944:25948  true */\n  0x01\n    /* \"ERC777.sol\":25902:25919  _defaultOperators */\n  0x05\n    /* \"ERC777.sol\":25902:25941  _defaultOperators[defaultOperators_[i]] */\n  0x00\n    /* \"ERC777.sol\":25920:25937  defaultOperators_ */\n  dup5\n    /* \"ERC777.sol\":25938:25939  i */\n  dup5\n    /* \"ERC777.sol\":25920:25940  defaultOperators_[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_14\n  jumpi\n  tag_15\n  tag_16\n  jump\t// in\ntag_15:\ntag_14:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"ERC777.sol\":25902:25941  _defaultOperators[defaultOperators_[i]] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"ERC777.sol\":25902:25948  _defaultOperators[defaultOperators_[i]] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ERC777.sol\":25882:25885  i++ */\n  dup1\n  dup1\n  tag_17\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  swap2\n  pop\n  pop\n    /* \"ERC777.sol\":25832:25960  for (uint256 i = 0; i < defaultOperators_.length; i++) {... */\n  jump(tag_11)\ntag_12:\n  pop\n    /* \"ERC777.sol\":24520:24562  0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24 */\n  0x1820a4b7618bde71dce8cdc73aab6c95905fad24\n    /* \"ERC777.sol\":26004:26045  _ERC1820_REGISTRY.setInterfaceImplementer */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x29965a1d\n    /* \"ERC777.sol\":26054:26058  this */\n  address\n    /* \"ERC777.sol\":26061:26085  keccak256(\"ERC777Token\") */\n  0xac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054\n    /* \"ERC777.sol\":26095:26099  this */\n  address\n    /* \"ERC777.sol\":26004:26101  _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC777Token\"), address(this)) */\n  mload(0x40)\n  dup5\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_21\n  jumpi\n  0x00\n  dup1\n  revert\ntag_21:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_23\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_23:\n  pop\n  pop\n  pop\n  pop\n    /* \"ERC777.sol\":24520:24562  0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24 */\n  0x1820a4b7618bde71dce8cdc73aab6c95905fad24\n    /* \"ERC777.sol\":26112:26153  _ERC1820_REGISTRY.setInterfaceImplementer */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x29965a1d\n    /* \"ERC777.sol\":26162:26166  this */\n  address\n    /* \"ERC777.sol\":26169:26192  keccak256(\"ERC20Token\") */\n  0xaea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a\n    /* \"ERC777.sol\":26202:26206  this */\n  address\n    /* \"ERC777.sol\":26112:26208  _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC20Token\"), address(this)) */\n  mload(0x40)\n  dup5\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_24:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_25\n  jumpi\n  0x00\n  dup1\n  revert\ntag_25:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_27\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_27:\n  pop\n  pop\n  pop\n  pop\n    /* \"ERC777.sol\":25622:26228  constructor(string memory name_, string memory symbol_, address[] memory defaultOperators_) {... */\n  pop\n  pop\n  pop\n    /* \"ERC777.sol\":24363:42184  contract ERC777 is Context, IERC777, IERC20 {... */\n  jump(tag_28)\ntag_10:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_29\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_30:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_31\n  jumpi\n  dup3\n  mload\n  dup3\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_30)\ntag_31:\ntag_29:\n  pop\n  swap1\n  pop\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  pop\n  swap1\n  jump\t// out\ntag_33:\ntag_34:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_35\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_34)\ntag_35:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_36:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_37:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_38:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_39:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_40:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_41:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_42:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_43:\n    /* \"#utility.yul\":957:984   */\n  tag_89\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_41\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_91\n  tag_42\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1030:1118   */\ntag_90:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_44:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_93\n  tag_36\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_94\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_43\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_45:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_97\n  tag_42\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1434:1490   */\ntag_96:\n    /* \"#utility.yul\":1508:1537   */\n  tag_98\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_41\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_46:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_100:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_100)\ntag_102:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_47:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_104\n    /* \"#utility.yul\":1992:2041   */\n  tag_105\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_45\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":1976:2042   */\n  tag_44\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_107\n  tag_40\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2117:2229   */\ntag_106:\n    /* \"#utility.yul\":2238:2290   */\n  tag_108\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_46\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_48:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_110\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_111\n  tag_39\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":2399:2521   */\ntag_110:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_112\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_47\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2988   */\ntag_49:\n    /* \"#utility.yul\":2754:2758   */\n  0x00\n    /* \"#utility.yul\":2844:2862   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2836:2842   */\n  dup3\n    /* \"#utility.yul\":2833:2863   */\n  gt\n    /* \"#utility.yul\":2830:2886   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":2866:2884   */\n  tag_115\n  tag_42\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2830:2886   */\ntag_114:\n    /* \"#utility.yul\":2916:2920   */\n  0x20\n    /* \"#utility.yul\":2908:2914   */\n  dup3\n    /* \"#utility.yul\":2904:2921   */\n  mul\n    /* \"#utility.yul\":2896:2921   */\n  swap1\n  pop\n    /* \"#utility.yul\":2976:2980   */\n  0x20\n    /* \"#utility.yul\":2970:2974   */\n  dup2\n    /* \"#utility.yul\":2966:2981   */\n  add\n    /* \"#utility.yul\":2958:2981   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2994:3111   */\ntag_50:\n    /* \"#utility.yul\":3103:3104   */\n  0x00\n    /* \"#utility.yul\":3100:3101   */\n  dup1\n    /* \"#utility.yul\":3093:3105   */\n  revert\n    /* \"#utility.yul\":3117:3243   */\ntag_51:\n    /* \"#utility.yul\":3154:3161   */\n  0x00\n    /* \"#utility.yul\":3194:3236   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3187:3192   */\n  dup3\n    /* \"#utility.yul\":3183:3237   */\n  and\n    /* \"#utility.yul\":3172:3237   */\n  swap1\n  pop\n    /* \"#utility.yul\":3117:3243   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3249:3345   */\ntag_52:\n    /* \"#utility.yul\":3286:3293   */\n  0x00\n    /* \"#utility.yul\":3315:3339   */\n  tag_119\n    /* \"#utility.yul\":3333:3338   */\n  dup3\n    /* \"#utility.yul\":3315:3339   */\n  tag_51\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3304:3339   */\n  swap1\n  pop\n    /* \"#utility.yul\":3249:3345   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3351:3473   */\ntag_53:\n    /* \"#utility.yul\":3424:3448   */\n  tag_121\n    /* \"#utility.yul\":3442:3447   */\n  dup2\n    /* \"#utility.yul\":3424:3448   */\n  tag_52\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3417:3422   */\n  dup2\n    /* \"#utility.yul\":3414:3449   */\n  eq\n    /* \"#utility.yul\":3404:3467   */\n  tag_122\n  jumpi\n    /* \"#utility.yul\":3463:3464   */\n  0x00\n    /* \"#utility.yul\":3460:3461   */\n  dup1\n    /* \"#utility.yul\":3453:3465   */\n  revert\n    /* \"#utility.yul\":3404:3467   */\ntag_122:\n    /* \"#utility.yul\":3351:3473   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3479:3622   */\ntag_54:\n    /* \"#utility.yul\":3536:3541   */\n  0x00\n    /* \"#utility.yul\":3567:3573   */\n  dup2\n    /* \"#utility.yul\":3561:3574   */\n  mload\n    /* \"#utility.yul\":3552:3574   */\n  swap1\n  pop\n    /* \"#utility.yul\":3583:3616   */\n  tag_124\n    /* \"#utility.yul\":3610:3615   */\n  dup2\n    /* \"#utility.yul\":3583:3616   */\n  tag_53\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":3479:3622   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3645:4377   */\ntag_55:\n    /* \"#utility.yul\":3752:3757   */\n  0x00\n    /* \"#utility.yul\":3777:3858   */\n  tag_126\n    /* \"#utility.yul\":3793:3857   */\n  tag_127\n    /* \"#utility.yul\":3850:3856   */\n  dup5\n    /* \"#utility.yul\":3793:3857   */\n  tag_49\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3777:3858   */\n  tag_44\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3768:3858   */\n  swap1\n  pop\n    /* \"#utility.yul\":3878:3883   */\n  dup1\n    /* \"#utility.yul\":3907:3913   */\n  dup4\n    /* \"#utility.yul\":3900:3905   */\n  dup3\n    /* \"#utility.yul\":3893:3914   */\n  mstore\n    /* \"#utility.yul\":3941:3945   */\n  0x20\n    /* \"#utility.yul\":3934:3939   */\n  dup3\n    /* \"#utility.yul\":3930:3946   */\n  add\n    /* \"#utility.yul\":3923:3946   */\n  swap1\n  pop\n    /* \"#utility.yul\":3994:3998   */\n  0x20\n    /* \"#utility.yul\":3986:3992   */\n  dup5\n    /* \"#utility.yul\":3982:3999   */\n  mul\n    /* \"#utility.yul\":3974:3980   */\n  dup4\n    /* \"#utility.yul\":3970:4000   */\n  add\n    /* \"#utility.yul\":4023:4026   */\n  dup6\n    /* \"#utility.yul\":4015:4021   */\n  dup2\n    /* \"#utility.yul\":4012:4027   */\n  gt\n    /* \"#utility.yul\":4009:4131   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":4042:4121   */\n  tag_129\n  tag_50\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4009:4131   */\ntag_128:\n    /* \"#utility.yul\":4157:4163   */\n  dup4\n    /* \"#utility.yul\":4140:4371   */\ntag_130:\n    /* \"#utility.yul\":4174:4180   */\n  dup2\n    /* \"#utility.yul\":4169:4172   */\n  dup2\n    /* \"#utility.yul\":4166:4181   */\n  lt\n    /* \"#utility.yul\":4140:4371   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":4249:4252   */\n  dup1\n    /* \"#utility.yul\":4278:4326   */\n  tag_133\n    /* \"#utility.yul\":4322:4325   */\n  dup9\n    /* \"#utility.yul\":4310:4320   */\n  dup3\n    /* \"#utility.yul\":4278:4326   */\n  tag_54\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4273:4276   */\n  dup5\n    /* \"#utility.yul\":4266:4327   */\n  mstore\n    /* \"#utility.yul\":4356:4360   */\n  0x20\n    /* \"#utility.yul\":4351:4354   */\n  dup5\n    /* \"#utility.yul\":4347:4361   */\n  add\n    /* \"#utility.yul\":4340:4361   */\n  swap4\n  pop\n    /* \"#utility.yul\":4216:4371   */\n  pop\n    /* \"#utility.yul\":4200:4204   */\n  0x20\n    /* \"#utility.yul\":4195:4198   */\n  dup2\n    /* \"#utility.yul\":4191:4205   */\n  add\n    /* \"#utility.yul\":4184:4205   */\n  swap1\n  pop\n    /* \"#utility.yul\":4140:4371   */\n  jump(tag_130)\ntag_132:\n    /* \"#utility.yul\":4144:4165   */\n  pop\n    /* \"#utility.yul\":3758:4377   */\n  pop\n  pop\n    /* \"#utility.yul\":3645:4377   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4400:4785   */\ntag_56:\n    /* \"#utility.yul\":4482:4487   */\n  0x00\n    /* \"#utility.yul\":4531:4534   */\n  dup3\n    /* \"#utility.yul\":4524:4528   */\n  0x1f\n    /* \"#utility.yul\":4516:4522   */\n  dup4\n    /* \"#utility.yul\":4512:4529   */\n  add\n    /* \"#utility.yul\":4508:4535   */\n  slt\n    /* \"#utility.yul\":4498:4620   */\n  tag_135\n  jumpi\n    /* \"#utility.yul\":4539:4618   */\n  tag_136\n  tag_39\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":4498:4620   */\ntag_135:\n    /* \"#utility.yul\":4649:4655   */\n  dup2\n    /* \"#utility.yul\":4643:4656   */\n  mload\n    /* \"#utility.yul\":4674:4779   */\n  tag_137\n    /* \"#utility.yul\":4775:4778   */\n  dup5\n    /* \"#utility.yul\":4767:4773   */\n  dup3\n    /* \"#utility.yul\":4760:4764   */\n  0x20\n    /* \"#utility.yul\":4752:4758   */\n  dup7\n    /* \"#utility.yul\":4748:4765   */\n  add\n    /* \"#utility.yul\":4674:4779   */\n  tag_55\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":4665:4779   */\n  swap2\n  pop\n    /* \"#utility.yul\":4488:4785   */\n  pop\n    /* \"#utility.yul\":4400:4785   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4791:6003   */\ntag_3:\n    /* \"#utility.yul\":4924:4930   */\n  0x00\n    /* \"#utility.yul\":4932:4938   */\n  dup1\n    /* \"#utility.yul\":4940:4946   */\n  0x00\n    /* \"#utility.yul\":4989:4991   */\n  0x60\n    /* \"#utility.yul\":4977:4986   */\n  dup5\n    /* \"#utility.yul\":4968:4975   */\n  dup7\n    /* \"#utility.yul\":4964:4987   */\n  sub\n    /* \"#utility.yul\":4960:4992   */\n  slt\n    /* \"#utility.yul\":4957:5076   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":4995:5074   */\n  tag_140\n  tag_37\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":4957:5076   */\ntag_139:\n    /* \"#utility.yul\":5136:5137   */\n  0x00\n    /* \"#utility.yul\":5125:5134   */\n  dup5\n    /* \"#utility.yul\":5121:5138   */\n  add\n    /* \"#utility.yul\":5115:5139   */\n  mload\n    /* \"#utility.yul\":5166:5184   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5158:5164   */\n  dup2\n    /* \"#utility.yul\":5155:5185   */\n  gt\n    /* \"#utility.yul\":5152:5269   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":5188:5267   */\n  tag_142\n  tag_38\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":5152:5269   */\ntag_141:\n    /* \"#utility.yul\":5293:5367   */\n  tag_143\n    /* \"#utility.yul\":5359:5366   */\n  dup7\n    /* \"#utility.yul\":5350:5356   */\n  dup3\n    /* \"#utility.yul\":5339:5348   */\n  dup8\n    /* \"#utility.yul\":5335:5357   */\n  add\n    /* \"#utility.yul\":5293:5367   */\n  tag_48\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":5283:5367   */\n  swap4\n  pop\n    /* \"#utility.yul\":5086:5377   */\n  pop\n    /* \"#utility.yul\":5437:5439   */\n  0x20\n    /* \"#utility.yul\":5426:5435   */\n  dup5\n    /* \"#utility.yul\":5422:5440   */\n  add\n    /* \"#utility.yul\":5416:5441   */\n  mload\n    /* \"#utility.yul\":5468:5486   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5460:5466   */\n  dup2\n    /* \"#utility.yul\":5457:5487   */\n  gt\n    /* \"#utility.yul\":5454:5571   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":5490:5569   */\n  tag_145\n  tag_38\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5454:5571   */\ntag_144:\n    /* \"#utility.yul\":5595:5669   */\n  tag_146\n    /* \"#utility.yul\":5661:5668   */\n  dup7\n    /* \"#utility.yul\":5652:5658   */\n  dup3\n    /* \"#utility.yul\":5641:5650   */\n  dup8\n    /* \"#utility.yul\":5637:5659   */\n  add\n    /* \"#utility.yul\":5595:5669   */\n  tag_48\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5585:5669   */\n  swap3\n  pop\n    /* \"#utility.yul\":5387:5679   */\n  pop\n    /* \"#utility.yul\":5739:5741   */\n  0x40\n    /* \"#utility.yul\":5728:5737   */\n  dup5\n    /* \"#utility.yul\":5724:5742   */\n  add\n    /* \"#utility.yul\":5718:5743   */\n  mload\n    /* \"#utility.yul\":5770:5788   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5762:5768   */\n  dup2\n    /* \"#utility.yul\":5759:5789   */\n  gt\n    /* \"#utility.yul\":5756:5873   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":5792:5871   */\n  tag_148\n  tag_38\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":5756:5873   */\ntag_147:\n    /* \"#utility.yul\":5897:5986   */\n  tag_149\n    /* \"#utility.yul\":5978:5985   */\n  dup7\n    /* \"#utility.yul\":5969:5975   */\n  dup3\n    /* \"#utility.yul\":5958:5967   */\n  dup8\n    /* \"#utility.yul\":5954:5976   */\n  add\n    /* \"#utility.yul\":5897:5986   */\n  tag_56\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5887:5986   */\n  swap2\n  pop\n    /* \"#utility.yul\":5689:5996   */\n  pop\n    /* \"#utility.yul\":4791:6003   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":6009:6108   */\ntag_57:\n    /* \"#utility.yul\":6061:6067   */\n  0x00\n    /* \"#utility.yul\":6095:6100   */\n  dup2\n    /* \"#utility.yul\":6089:6101   */\n  mload\n    /* \"#utility.yul\":6079:6101   */\n  swap1\n  pop\n    /* \"#utility.yul\":6009:6108   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6114:6294   */\ntag_58:\n    /* \"#utility.yul\":6162:6239   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6159:6160   */\n  0x00\n    /* \"#utility.yul\":6152:6240   */\n  mstore\n    /* \"#utility.yul\":6259:6263   */\n  0x22\n    /* \"#utility.yul\":6256:6257   */\n  0x04\n    /* \"#utility.yul\":6249:6264   */\n  mstore\n    /* \"#utility.yul\":6283:6287   */\n  0x24\n    /* \"#utility.yul\":6280:6281   */\n  0x00\n    /* \"#utility.yul\":6273:6288   */\n  revert\n    /* \"#utility.yul\":6300:6620   */\ntag_59:\n    /* \"#utility.yul\":6344:6350   */\n  0x00\n    /* \"#utility.yul\":6381:6382   */\n  0x02\n    /* \"#utility.yul\":6375:6379   */\n  dup3\n    /* \"#utility.yul\":6371:6383   */\n  div\n    /* \"#utility.yul\":6361:6383   */\n  swap1\n  pop\n    /* \"#utility.yul\":6428:6429   */\n  0x01\n    /* \"#utility.yul\":6422:6426   */\n  dup3\n    /* \"#utility.yul\":6418:6430   */\n  and\n    /* \"#utility.yul\":6449:6467   */\n  dup1\n    /* \"#utility.yul\":6439:6520   */\n  tag_153\n  jumpi\n    /* \"#utility.yul\":6505:6509   */\n  0x7f\n    /* \"#utility.yul\":6497:6503   */\n  dup3\n    /* \"#utility.yul\":6493:6510   */\n  and\n    /* \"#utility.yul\":6483:6510   */\n  swap2\n  pop\n    /* \"#utility.yul\":6439:6520   */\ntag_153:\n    /* \"#utility.yul\":6567:6569   */\n  0x20\n    /* \"#utility.yul\":6559:6565   */\n  dup3\n    /* \"#utility.yul\":6556:6570   */\n  lt\n    /* \"#utility.yul\":6536:6554   */\n  dup2\n    /* \"#utility.yul\":6533:6571   */\n  sub\n    /* \"#utility.yul\":6530:6614   */\n  tag_154\n  jumpi\n    /* \"#utility.yul\":6586:6604   */\n  tag_155\n  tag_58\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":6530:6614   */\ntag_154:\n    /* \"#utility.yul\":6351:6620   */\n  pop\n    /* \"#utility.yul\":6300:6620   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6626:6767   */\ntag_60:\n    /* \"#utility.yul\":6675:6679   */\n  0x00\n    /* \"#utility.yul\":6698:6701   */\n  dup2\n    /* \"#utility.yul\":6690:6701   */\n  swap1\n  pop\n    /* \"#utility.yul\":6721:6724   */\n  dup2\n    /* \"#utility.yul\":6718:6719   */\n  0x00\n    /* \"#utility.yul\":6711:6725   */\n  mstore\n    /* \"#utility.yul\":6755:6759   */\n  0x20\n    /* \"#utility.yul\":6752:6753   */\n  0x00\n    /* \"#utility.yul\":6742:6760   */\n  keccak256\n    /* \"#utility.yul\":6734:6760   */\n  swap1\n  pop\n    /* \"#utility.yul\":6626:6767   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6773:6866   */\ntag_61:\n    /* \"#utility.yul\":6810:6816   */\n  0x00\n    /* \"#utility.yul\":6857:6859   */\n  0x20\n    /* \"#utility.yul\":6852:6854   */\n  0x1f\n    /* \"#utility.yul\":6845:6850   */\n  dup4\n    /* \"#utility.yul\":6841:6855   */\n  add\n    /* \"#utility.yul\":6837:6860   */\n  div\n    /* \"#utility.yul\":6827:6860   */\n  swap1\n  pop\n    /* \"#utility.yul\":6773:6866   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6872:6979   */\ntag_62:\n    /* \"#utility.yul\":6916:6924   */\n  0x00\n    /* \"#utility.yul\":6966:6971   */\n  dup3\n    /* \"#utility.yul\":6960:6964   */\n  dup3\n    /* \"#utility.yul\":6956:6972   */\n  shl\n    /* \"#utility.yul\":6935:6972   */\n  swap1\n  pop\n    /* \"#utility.yul\":6872:6979   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6985:7378   */\ntag_63:\n    /* \"#utility.yul\":7054:7060   */\n  0x00\n    /* \"#utility.yul\":7104:7105   */\n  0x08\n    /* \"#utility.yul\":7092:7102   */\n  dup4\n    /* \"#utility.yul\":7088:7106   */\n  mul\n    /* \"#utility.yul\":7127:7224   */\n  tag_160\n    /* \"#utility.yul\":7157:7223   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":7146:7155   */\n  dup3\n    /* \"#utility.yul\":7127:7224   */\n  tag_62\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7245:7284   */\n  tag_161\n    /* \"#utility.yul\":7275:7283   */\n  dup7\n    /* \"#utility.yul\":7264:7273   */\n  dup4\n    /* \"#utility.yul\":7245:7284   */\n  tag_62\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7233:7284   */\n  swap6\n  pop\n    /* \"#utility.yul\":7317:7321   */\n  dup1\n    /* \"#utility.yul\":7313:7322   */\n  not\n    /* \"#utility.yul\":7306:7311   */\n  dup5\n    /* \"#utility.yul\":7302:7323   */\n  and\n    /* \"#utility.yul\":7293:7323   */\n  swap4\n  pop\n    /* \"#utility.yul\":7366:7370   */\n  dup1\n    /* \"#utility.yul\":7356:7364   */\n  dup7\n    /* \"#utility.yul\":7352:7371   */\n  and\n    /* \"#utility.yul\":7345:7350   */\n  dup5\n    /* \"#utility.yul\":7342:7372   */\n  or\n    /* \"#utility.yul\":7332:7372   */\n  swap3\n  pop\n    /* \"#utility.yul\":7061:7378   */\n  pop\n  pop\n    /* \"#utility.yul\":6985:7378   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7384:7461   */\ntag_64:\n    /* \"#utility.yul\":7421:7428   */\n  0x00\n    /* \"#utility.yul\":7450:7455   */\n  dup2\n    /* \"#utility.yul\":7439:7455   */\n  swap1\n  pop\n    /* \"#utility.yul\":7384:7461   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7467:7527   */\ntag_65:\n    /* \"#utility.yul\":7495:7498   */\n  0x00\n    /* \"#utility.yul\":7516:7521   */\n  dup2\n    /* \"#utility.yul\":7509:7521   */\n  swap1\n  pop\n    /* \"#utility.yul\":7467:7527   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7533:7675   */\ntag_66:\n    /* \"#utility.yul\":7583:7592   */\n  0x00\n    /* \"#utility.yul\":7616:7669   */\n  tag_165\n    /* \"#utility.yul\":7634:7668   */\n  tag_166\n    /* \"#utility.yul\":7643:7667   */\n  tag_167\n    /* \"#utility.yul\":7661:7666   */\n  dup5\n    /* \"#utility.yul\":7643:7667   */\n  tag_64\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":7634:7668   */\n  tag_65\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7616:7669   */\n  tag_64\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7603:7669   */\n  swap1\n  pop\n    /* \"#utility.yul\":7533:7675   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7681:7756   */\ntag_67:\n    /* \"#utility.yul\":7724:7727   */\n  0x00\n    /* \"#utility.yul\":7745:7750   */\n  dup2\n    /* \"#utility.yul\":7738:7750   */\n  swap1\n  pop\n    /* \"#utility.yul\":7681:7756   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7762:8031   */\ntag_68:\n    /* \"#utility.yul\":7872:7911   */\n  tag_170\n    /* \"#utility.yul\":7903:7910   */\n  dup4\n    /* \"#utility.yul\":7872:7911   */\n  tag_66\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":7933:8024   */\n  tag_171\n    /* \"#utility.yul\":7982:8023   */\n  tag_172\n    /* \"#utility.yul\":8006:8022   */\n  dup3\n    /* \"#utility.yul\":7982:8023   */\n  tag_67\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":7974:7980   */\n  dup5\n    /* \"#utility.yul\":7967:7971   */\n  dup5\n    /* \"#utility.yul\":7961:7972   */\n  sload\n    /* \"#utility.yul\":7933:8024   */\n  tag_63\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":7927:7931   */\n  dup3\n    /* \"#utility.yul\":7920:8025   */\n  sstore\n    /* \"#utility.yul\":7838:8031   */\n  pop\n    /* \"#utility.yul\":7762:8031   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8037:8110   */\ntag_69:\n    /* \"#utility.yul\":8082:8085   */\n  0x00\n    /* \"#utility.yul\":8037:8110   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":8116:8305   */\ntag_70:\n    /* \"#utility.yul\":8193:8225   */\n  tag_175\n  tag_69\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":8234:8299   */\n  tag_176\n    /* \"#utility.yul\":8292:8298   */\n  dup2\n    /* \"#utility.yul\":8284:8290   */\n  dup5\n    /* \"#utility.yul\":8278:8282   */\n  dup5\n    /* \"#utility.yul\":8234:8299   */\n  tag_68\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8169:8305   */\n  pop\n    /* \"#utility.yul\":8116:8305   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8311:8497   */\ntag_71:\n    /* \"#utility.yul\":8371:8491   */\ntag_178:\n    /* \"#utility.yul\":8388:8391   */\n  dup2\n    /* \"#utility.yul\":8381:8386   */\n  dup2\n    /* \"#utility.yul\":8378:8392   */\n  lt\n    /* \"#utility.yul\":8371:8491   */\n  iszero\n  tag_180\n  jumpi\n    /* \"#utility.yul\":8442:8481   */\n  tag_181\n    /* \"#utility.yul\":8479:8480   */\n  0x00\n    /* \"#utility.yul\":8472:8477   */\n  dup3\n    /* \"#utility.yul\":8442:8481   */\n  tag_70\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8415:8416   */\n  0x01\n    /* \"#utility.yul\":8408:8413   */\n  dup2\n    /* \"#utility.yul\":8404:8417   */\n  add\n    /* \"#utility.yul\":8395:8417   */\n  swap1\n  pop\n    /* \"#utility.yul\":8371:8491   */\n  jump(tag_178)\ntag_180:\n    /* \"#utility.yul\":8311:8497   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8503:9046   */\ntag_72:\n    /* \"#utility.yul\":8604:8606   */\n  0x1f\n    /* \"#utility.yul\":8599:8602   */\n  dup3\n    /* \"#utility.yul\":8596:8607   */\n  gt\n    /* \"#utility.yul\":8593:9039   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":8638:8676   */\n  tag_184\n    /* \"#utility.yul\":8670:8675   */\n  dup2\n    /* \"#utility.yul\":8638:8676   */\n  tag_60\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":8722:8751   */\n  tag_185\n    /* \"#utility.yul\":8740:8750   */\n  dup5\n    /* \"#utility.yul\":8722:8751   */\n  tag_61\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":8712:8720   */\n  dup2\n    /* \"#utility.yul\":8708:8752   */\n  add\n    /* \"#utility.yul\":8905:8907   */\n  0x20\n    /* \"#utility.yul\":8893:8903   */\n  dup6\n    /* \"#utility.yul\":8890:8908   */\n  lt\n    /* \"#utility.yul\":8887:8936   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":8926:8934   */\n  dup2\n    /* \"#utility.yul\":8911:8934   */\n  swap1\n  pop\n    /* \"#utility.yul\":8887:8936   */\ntag_186:\n    /* \"#utility.yul\":8949:9029   */\n  tag_187\n    /* \"#utility.yul\":9005:9027   */\n  tag_188\n    /* \"#utility.yul\":9023:9026   */\n  dup6\n    /* \"#utility.yul\":9005:9027   */\n  tag_61\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":8995:9003   */\n  dup4\n    /* \"#utility.yul\":8991:9028   */\n  add\n    /* \"#utility.yul\":8978:8989   */\n  dup3\n    /* \"#utility.yul\":8949:9029   */\n  tag_71\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":8608:9039   */\n  pop\n  pop\n    /* \"#utility.yul\":8593:9039   */\ntag_183:\n    /* \"#utility.yul\":8503:9046   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9052:9169   */\ntag_73:\n    /* \"#utility.yul\":9106:9114   */\n  0x00\n    /* \"#utility.yul\":9156:9161   */\n  dup3\n    /* \"#utility.yul\":9150:9154   */\n  dup3\n    /* \"#utility.yul\":9146:9162   */\n  shr\n    /* \"#utility.yul\":9125:9162   */\n  swap1\n  pop\n    /* \"#utility.yul\":9052:9169   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9175:9344   */\ntag_74:\n    /* \"#utility.yul\":9219:9225   */\n  0x00\n    /* \"#utility.yul\":9252:9303   */\n  tag_191\n    /* \"#utility.yul\":9300:9301   */\n  0x00\n    /* \"#utility.yul\":9296:9302   */\n  not\n    /* \"#utility.yul\":9288:9293   */\n  dup5\n    /* \"#utility.yul\":9285:9286   */\n  0x08\n    /* \"#utility.yul\":9281:9294   */\n  mul\n    /* \"#utility.yul\":9252:9303   */\n  tag_73\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":9248:9304   */\n  not\n    /* \"#utility.yul\":9333:9337   */\n  dup1\n    /* \"#utility.yul\":9327:9331   */\n  dup4\n    /* \"#utility.yul\":9323:9338   */\n  and\n    /* \"#utility.yul\":9313:9338   */\n  swap2\n  pop\n    /* \"#utility.yul\":9226:9344   */\n  pop\n    /* \"#utility.yul\":9175:9344   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9349:9644   */\ntag_75:\n    /* \"#utility.yul\":9425:9429   */\n  0x00\n    /* \"#utility.yul\":9571:9600   */\n  tag_193\n    /* \"#utility.yul\":9596:9599   */\n  dup4\n    /* \"#utility.yul\":9590:9594   */\n  dup4\n    /* \"#utility.yul\":9571:9600   */\n  tag_74\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9563:9600   */\n  swap2\n  pop\n    /* \"#utility.yul\":9633:9636   */\n  dup3\n    /* \"#utility.yul\":9630:9631   */\n  0x02\n    /* \"#utility.yul\":9626:9637   */\n  mul\n    /* \"#utility.yul\":9620:9624   */\n  dup3\n    /* \"#utility.yul\":9617:9638   */\n  or\n    /* \"#utility.yul\":9609:9638   */\n  swap1\n  pop\n    /* \"#utility.yul\":9349:9644   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9649:11044   */\ntag_7:\n    /* \"#utility.yul\":9766:9803   */\n  tag_195\n    /* \"#utility.yul\":9799:9802   */\n  dup3\n    /* \"#utility.yul\":9766:9803   */\n  tag_57\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9868:9886   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":9860:9866   */\n  dup2\n    /* \"#utility.yul\":9857:9887   */\n  gt\n    /* \"#utility.yul\":9854:9910   */\n  iszero\n  tag_196\n  jumpi\n    /* \"#utility.yul\":9890:9908   */\n  tag_197\n  tag_42\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9854:9910   */\ntag_196:\n    /* \"#utility.yul\":9934:9972   */\n  tag_198\n    /* \"#utility.yul\":9966:9970   */\n  dup3\n    /* \"#utility.yul\":9960:9971   */\n  sload\n    /* \"#utility.yul\":9934:9972   */\n  tag_59\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":10019:10086   */\n  tag_199\n    /* \"#utility.yul\":10079:10085   */\n  dup3\n    /* \"#utility.yul\":10071:10077   */\n  dup3\n    /* \"#utility.yul\":10065:10069   */\n  dup6\n    /* \"#utility.yul\":10019:10086   */\n  tag_72\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":10113:10114   */\n  0x00\n    /* \"#utility.yul\":10137:10141   */\n  0x20\n    /* \"#utility.yul\":10124:10141   */\n  swap1\n  pop\n    /* \"#utility.yul\":10169:10171   */\n  0x1f\n    /* \"#utility.yul\":10161:10167   */\n  dup4\n    /* \"#utility.yul\":10158:10172   */\n  gt\n    /* \"#utility.yul\":10186:10187   */\n  0x01\n    /* \"#utility.yul\":10181:10799   */\n  dup2\n  eq\n  tag_201\n  jumpi\n    /* \"#utility.yul\":10843:10844   */\n  0x00\n    /* \"#utility.yul\":10860:10866   */\n  dup5\n    /* \"#utility.yul\":10857:10934   */\n  iszero\n  tag_202\n  jumpi\n    /* \"#utility.yul\":10909:10918   */\n  dup3\n    /* \"#utility.yul\":10904:10907   */\n  dup8\n    /* \"#utility.yul\":10900:10919   */\n  add\n    /* \"#utility.yul\":10894:10920   */\n  mload\n    /* \"#utility.yul\":10885:10920   */\n  swap1\n  pop\n    /* \"#utility.yul\":10857:10934   */\ntag_202:\n    /* \"#utility.yul\":10960:11027   */\n  tag_203\n    /* \"#utility.yul\":11020:11026   */\n  dup6\n    /* \"#utility.yul\":11013:11018   */\n  dup3\n    /* \"#utility.yul\":10960:11027   */\n  tag_75\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":10954:10958   */\n  dup7\n    /* \"#utility.yul\":10947:11028   */\n  sstore\n    /* \"#utility.yul\":10816:11038   */\n  pop\n    /* \"#utility.yul\":10151:11038   */\n  jump(tag_200)\n    /* \"#utility.yul\":10181:10799   */\ntag_201:\n    /* \"#utility.yul\":10233:10237   */\n  0x1f\n    /* \"#utility.yul\":10229:10238   */\n  not\n    /* \"#utility.yul\":10221:10227   */\n  dup5\n    /* \"#utility.yul\":10217:10239   */\n  and\n    /* \"#utility.yul\":10267:10304   */\n  tag_204\n    /* \"#utility.yul\":10299:10303   */\n  dup7\n    /* \"#utility.yul\":10267:10304   */\n  tag_60\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":10326:10327   */\n  0x00\n    /* \"#utility.yul\":10340:10548   */\ntag_205:\n    /* \"#utility.yul\":10354:10361   */\n  dup3\n    /* \"#utility.yul\":10351:10352   */\n  dup2\n    /* \"#utility.yul\":10348:10362   */\n  lt\n    /* \"#utility.yul\":10340:10548   */\n  iszero\n  tag_207\n  jumpi\n    /* \"#utility.yul\":10433:10442   */\n  dup5\n    /* \"#utility.yul\":10428:10431   */\n  dup10\n    /* \"#utility.yul\":10424:10443   */\n  add\n    /* \"#utility.yul\":10418:10444   */\n  mload\n    /* \"#utility.yul\":10410:10416   */\n  dup3\n    /* \"#utility.yul\":10403:10445   */\n  sstore\n    /* \"#utility.yul\":10484:10485   */\n  0x01\n    /* \"#utility.yul\":10476:10482   */\n  dup3\n    /* \"#utility.yul\":10472:10486   */\n  add\n    /* \"#utility.yul\":10462:10486   */\n  swap2\n  pop\n    /* \"#utility.yul\":10531:10533   */\n  0x20\n    /* \"#utility.yul\":10520:10529   */\n  dup6\n    /* \"#utility.yul\":10516:10534   */\n  add\n    /* \"#utility.yul\":10503:10534   */\n  swap5\n  pop\n    /* \"#utility.yul\":10377:10381   */\n  0x20\n    /* \"#utility.yul\":10374:10375   */\n  dup2\n    /* \"#utility.yul\":10370:10382   */\n  add\n    /* \"#utility.yul\":10365:10382   */\n  swap1\n  pop\n    /* \"#utility.yul\":10340:10548   */\n  jump(tag_205)\ntag_207:\n    /* \"#utility.yul\":10576:10582   */\n  dup7\n    /* \"#utility.yul\":10567:10574   */\n  dup4\n    /* \"#utility.yul\":10564:10583   */\n  lt\n    /* \"#utility.yul\":10561:10740   */\n  iszero\n  tag_208\n  jumpi\n    /* \"#utility.yul\":10634:10643   */\n  dup5\n    /* \"#utility.yul\":10629:10632   */\n  dup10\n    /* \"#utility.yul\":10625:10644   */\n  add\n    /* \"#utility.yul\":10619:10645   */\n  mload\n    /* \"#utility.yul\":10677:10725   */\n  tag_209\n    /* \"#utility.yul\":10719:10723   */\n  0x1f\n    /* \"#utility.yul\":10711:10717   */\n  dup10\n    /* \"#utility.yul\":10707:10724   */\n  and\n    /* \"#utility.yul\":10696:10705   */\n  dup3\n    /* \"#utility.yul\":10677:10725   */\n  tag_74\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":10669:10675   */\n  dup4\n    /* \"#utility.yul\":10662:10726   */\n  sstore\n    /* \"#utility.yul\":10584:10740   */\n  pop\n    /* \"#utility.yul\":10561:10740   */\ntag_208:\n    /* \"#utility.yul\":10786:10787   */\n  0x01\n    /* \"#utility.yul\":10782:10783   */\n  0x02\n    /* \"#utility.yul\":10774:10780   */\n  dup9\n    /* \"#utility.yul\":10770:10784   */\n  mul\n    /* \"#utility.yul\":10766:10788   */\n  add\n    /* \"#utility.yul\":10760:10764   */\n  dup9\n    /* \"#utility.yul\":10753:10789   */\n  sstore\n    /* \"#utility.yul\":10188:10799   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":10151:11038   */\ntag_200:\n  pop\n    /* \"#utility.yul\":9741:11044   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":9649:11044   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11050:11230   */\ntag_16:\n    /* \"#utility.yul\":11098:11175   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":11095:11096   */\n  0x00\n    /* \"#utility.yul\":11088:11176   */\n  mstore\n    /* \"#utility.yul\":11195:11199   */\n  0x32\n    /* \"#utility.yul\":11192:11193   */\n  0x04\n    /* \"#utility.yul\":11185:11200   */\n  mstore\n    /* \"#utility.yul\":11219:11223   */\n  0x24\n    /* \"#utility.yul\":11216:11217   */\n  0x00\n    /* \"#utility.yul\":11209:11224   */\n  revert\n    /* \"#utility.yul\":11236:11416   */\ntag_76:\n    /* \"#utility.yul\":11284:11361   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":11281:11282   */\n  0x00\n    /* \"#utility.yul\":11274:11362   */\n  mstore\n    /* \"#utility.yul\":11381:11385   */\n  0x11\n    /* \"#utility.yul\":11378:11379   */\n  0x04\n    /* \"#utility.yul\":11371:11386   */\n  mstore\n    /* \"#utility.yul\":11405:11409   */\n  0x24\n    /* \"#utility.yul\":11402:11403   */\n  0x00\n    /* \"#utility.yul\":11395:11410   */\n  revert\n    /* \"#utility.yul\":11422:11655   */\ntag_18:\n    /* \"#utility.yul\":11461:11464   */\n  0x00\n    /* \"#utility.yul\":11484:11508   */\n  tag_213\n    /* \"#utility.yul\":11502:11507   */\n  dup3\n    /* \"#utility.yul\":11484:11508   */\n  tag_64\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":11475:11508   */\n  swap2\n  pop\n    /* \"#utility.yul\":11530:11596   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":11523:11528   */\n  dup3\n    /* \"#utility.yul\":11520:11597   */\n  sub\n    /* \"#utility.yul\":11517:11620   */\n  tag_214\n  jumpi\n    /* \"#utility.yul\":11600:11618   */\n  tag_215\n  tag_76\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":11517:11620   */\ntag_214:\n    /* \"#utility.yul\":11647:11648   */\n  0x01\n    /* \"#utility.yul\":11640:11645   */\n  dup3\n    /* \"#utility.yul\":11636:11649   */\n  add\n    /* \"#utility.yul\":11629:11649   */\n  swap1\n  pop\n    /* \"#utility.yul\":11422:11655   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11661:11779   */\ntag_77:\n    /* \"#utility.yul\":11748:11772   */\n  tag_217\n    /* \"#utility.yul\":11766:11771   */\n  dup2\n    /* \"#utility.yul\":11748:11772   */\n  tag_52\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":11743:11746   */\n  dup3\n    /* \"#utility.yul\":11736:11773   */\n  mstore\n    /* \"#utility.yul\":11661:11779   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11785:11862   */\ntag_78:\n    /* \"#utility.yul\":11822:11829   */\n  0x00\n    /* \"#utility.yul\":11851:11856   */\n  dup2\n    /* \"#utility.yul\":11840:11856   */\n  swap1\n  pop\n    /* \"#utility.yul\":11785:11862   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11868:11986   */\ntag_79:\n    /* \"#utility.yul\":11955:11979   */\n  tag_220\n    /* \"#utility.yul\":11973:11978   */\n  dup2\n    /* \"#utility.yul\":11955:11979   */\n  tag_78\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":11950:11953   */\n  dup3\n    /* \"#utility.yul\":11943:11980   */\n  mstore\n    /* \"#utility.yul\":11868:11986   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11992:12434   */\ntag_20:\n    /* \"#utility.yul\":12141:12145   */\n  0x00\n    /* \"#utility.yul\":12179:12181   */\n  0x60\n    /* \"#utility.yul\":12168:12177   */\n  dup3\n    /* \"#utility.yul\":12164:12182   */\n  add\n    /* \"#utility.yul\":12156:12182   */\n  swap1\n  pop\n    /* \"#utility.yul\":12192:12263   */\n  tag_222\n    /* \"#utility.yul\":12260:12261   */\n  0x00\n    /* \"#utility.yul\":12249:12258   */\n  dup4\n    /* \"#utility.yul\":12245:12262   */\n  add\n    /* \"#utility.yul\":12236:12242   */\n  dup7\n    /* \"#utility.yul\":12192:12263   */\n  tag_77\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":12273:12345   */\n  tag_223\n    /* \"#utility.yul\":12341:12343   */\n  0x20\n    /* \"#utility.yul\":12330:12339   */\n  dup4\n    /* \"#utility.yul\":12326:12344   */\n  add\n    /* \"#utility.yul\":12317:12323   */\n  dup6\n    /* \"#utility.yul\":12273:12345   */\n  tag_79\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":12355:12427   */\n  tag_224\n    /* \"#utility.yul\":12423:12425   */\n  0x40\n    /* \"#utility.yul\":12412:12421   */\n  dup4\n    /* \"#utility.yul\":12408:12426   */\n  add\n    /* \"#utility.yul\":12399:12405   */\n  dup5\n    /* \"#utility.yul\":12355:12427   */\n  tag_77\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":11992:12434   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"ERC777.sol\":24363:42184  contract ERC777 is Context, IERC777, IERC20 {... */\ntag_28:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC777.sol\":24363:42184  contract ERC777 is Context, IERC777, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x959b8c3f\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xd95b6371\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xd95b6371\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xfad8b32a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xfc673c4f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xfe9d9303\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x959b8c3f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9bd9bbc6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x23b872dd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x556f0dc7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x62ad1b83\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x06e48538\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC777.sol\":29921:30053  function defaultOperators() public view virtual override returns (address[] memory) {... */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC777.sol\":26287:26387  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC777.sol\":31733:31934  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n    tag_5:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC777.sol\":27113:27238  function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {... */\n    tag_6:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC777.sol\":32430:32722  function transferFrom(address holder, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC777.sol\":26744:26828  function decimals() public pure virtual returns (uint8) {... */\n    tag_8:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC777.sol\":26950:27047  function granularity() public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC777.sol\":30179:30554  function operatorSend(... */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"ERC777.sol\":27343:27495  function balanceOf(address tokenHolder) public view virtual override(IERC20, IERC777) returns (uint256) {... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC777.sol\":28946:29368  function authorizeOperator(address operator) public virtual override {... */\n    tag_12:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"ERC777.sol\":26448:26552  function symbol() public view virtual override returns (string memory) {... */\n    tag_13:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC777.sol\":27632:27797  function send(address recipient, uint256 amount, bytes memory data) public virtual override {... */\n    tag_14:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"ERC777.sol\":28038:28224  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_15:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC777.sol\":28558:28874  function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {... */\n    tag_16:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC777.sol\":31263:31416  function allowance(address holder, address spender) public view virtual override returns (uint256) {... */\n    tag_17:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC777.sol\":29437:29850  function revokeOperator(address operator) public virtual override {... */\n    tag_18:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      stop\n        /* \"ERC777.sol\":30682:31015  function operatorBurn(... */\n    tag_19:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n    tag_89:\n      stop\n        /* \"ERC777.sol\":28361:28490  function burn(uint256 amount, bytes memory data) public virtual override {... */\n    tag_20:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      stop\n        /* \"ERC777.sol\":29921:30053  function defaultOperators() public view virtual override returns (address[] memory) {... */\n    tag_25:\n        /* \"ERC777.sol\":29987:30003  address[] memory */\n      0x60\n        /* \"ERC777.sol\":30023:30045  _defaultOperatorsArray */\n      0x04\n        /* \"ERC777.sol\":30016:30045  return _defaultOperatorsArray */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_99:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_99\n      jumpi\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC777.sol\":29921:30053  function defaultOperators() public view virtual override returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC777.sol\":26287:26387  function name() public view virtual override returns (string memory) {... */\n    tag_29:\n        /* \"ERC777.sol\":26341:26354  string memory */\n      0x60\n        /* \"ERC777.sol\":26374:26379  _name */\n      0x02\n        /* \"ERC777.sol\":26367:26379  return _name */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_102\n      jump\t// in\n    tag_103:\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_105\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_104)\n    tag_105:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_106:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_106\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC777.sol\":26287:26387  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC777.sol\":31733:31934  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n    tag_35:\n        /* \"ERC777.sol\":31815:31819  bool */\n      0x00\n        /* \"ERC777.sol\":31832:31846  address holder */\n      dup1\n        /* \"ERC777.sol\":31849:31861  _msgSender() */\n      tag_108\n        /* \"ERC777.sol\":31849:31859  _msgSender */\n      tag_109\n        /* \"ERC777.sol\":31849:31861  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"ERC777.sol\":31832:31861  address holder = _msgSender() */\n      swap1\n      pop\n        /* \"ERC777.sol\":31872:31904  _approve(holder, spender, value) */\n      tag_110\n        /* \"ERC777.sol\":31881:31887  holder */\n      dup2\n        /* \"ERC777.sol\":31889:31896  spender */\n      dup6\n        /* \"ERC777.sol\":31898:31903  value */\n      dup6\n        /* \"ERC777.sol\":31872:31880  _approve */\n      tag_111\n        /* \"ERC777.sol\":31872:31904  _approve(holder, spender, value) */\n      jump\t// in\n    tag_110:\n        /* \"ERC777.sol\":31922:31926  true */\n      0x01\n        /* \"ERC777.sol\":31915:31926  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC777.sol\":31733:31934  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC777.sol\":27113:27238  function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {... */\n    tag_39:\n        /* \"ERC777.sol\":27191:27198  uint256 */\n      0x00\n        /* \"ERC777.sol\":27218:27230  _totalSupply */\n      sload(0x01)\n        /* \"ERC777.sol\":27211:27230  return _totalSupply */\n      swap1\n      pop\n        /* \"ERC777.sol\":27113:27238  function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC777.sol\":32430:32722  function transferFrom(address holder, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_45:\n        /* \"ERC777.sol\":32536:32540  bool */\n      0x00\n        /* \"ERC777.sol\":32553:32568  address spender */\n      dup1\n        /* \"ERC777.sol\":32571:32583  _msgSender() */\n      tag_114\n        /* \"ERC777.sol\":32571:32581  _msgSender */\n      tag_109\n        /* \"ERC777.sol\":32571:32583  _msgSender() */\n      jump\t// in\n    tag_114:\n        /* \"ERC777.sol\":32553:32583  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"ERC777.sol\":32594:32634  _spendAllowance(holder, spender, amount) */\n      tag_115\n        /* \"ERC777.sol\":32610:32616  holder */\n      dup6\n        /* \"ERC777.sol\":32618:32625  spender */\n      dup3\n        /* \"ERC777.sol\":32627:32633  amount */\n      dup6\n        /* \"ERC777.sol\":32594:32609  _spendAllowance */\n      tag_116\n        /* \"ERC777.sol\":32594:32634  _spendAllowance(holder, spender, amount) */\n      jump\t// in\n    tag_115:\n        /* \"ERC777.sol\":32645:32692  _send(holder, recipient, amount, \"\", \"\", false) */\n      tag_117\n        /* \"ERC777.sol\":32651:32657  holder */\n      dup6\n        /* \"ERC777.sol\":32659:32668  recipient */\n      dup6\n        /* \"ERC777.sol\":32670:32676  amount */\n      dup6\n        /* \"ERC777.sol\":32645:32692  _send(holder, recipient, amount, \"\", \"\", false) */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"ERC777.sol\":32686:32691  false */\n      0x00\n        /* \"ERC777.sol\":32645:32650  _send */\n      tag_118\n        /* \"ERC777.sol\":32645:32692  _send(holder, recipient, amount, \"\", \"\", false) */\n      jump\t// in\n    tag_117:\n        /* \"ERC777.sol\":32710:32714  true */\n      0x01\n        /* \"ERC777.sol\":32703:32714  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC777.sol\":32430:32722  function transferFrom(address holder, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC777.sol\":26744:26828  function decimals() public pure virtual returns (uint8) {... */\n    tag_48:\n        /* \"ERC777.sol\":26793:26798  uint8 */\n      0x00\n        /* \"ERC777.sol\":26818:26820  18 */\n      0x12\n        /* \"ERC777.sol\":26811:26820  return 18 */\n      swap1\n      pop\n        /* \"ERC777.sol\":26744:26828  function decimals() public pure virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ERC777.sol\":26950:27047  function granularity() public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"ERC777.sol\":27011:27018  uint256 */\n      0x00\n        /* \"ERC777.sol\":27038:27039  1 */\n      0x01\n        /* \"ERC777.sol\":27031:27039  return 1 */\n      swap1\n      pop\n        /* \"ERC777.sol\":26950:27047  function granularity() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC777.sol\":30179:30554  function operatorSend(... */\n    tag_57:\n        /* \"ERC777.sol\":30393:30428  isOperatorFor(_msgSender(), sender) */\n      tag_122\n        /* \"ERC777.sol\":30407:30419  _msgSender() */\n      tag_123\n        /* \"ERC777.sol\":30407:30417  _msgSender */\n      tag_109\n        /* \"ERC777.sol\":30407:30419  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"ERC777.sol\":30421:30427  sender */\n      dup7\n        /* \"ERC777.sol\":30393:30406  isOperatorFor */\n      tag_80\n        /* \"ERC777.sol\":30393:30428  isOperatorFor(_msgSender(), sender) */\n      jump\t// in\n    tag_122:\n        /* \"ERC777.sol\":30385:30477  require(isOperatorFor(_msgSender(), sender), \"ERC777: caller is not an operator for holder\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"ERC777.sol\":30488:30546  _send(sender, recipient, amount, data, operatorData, true) */\n      tag_127\n        /* \"ERC777.sol\":30494:30500  sender */\n      dup6\n        /* \"ERC777.sol\":30502:30511  recipient */\n      dup6\n        /* \"ERC777.sol\":30513:30519  amount */\n      dup6\n        /* \"ERC777.sol\":30521:30525  data */\n      dup6\n        /* \"ERC777.sol\":30527:30539  operatorData */\n      dup6\n        /* \"ERC777.sol\":30541:30545  true */\n      0x01\n        /* \"ERC777.sol\":30488:30493  _send */\n      tag_118\n        /* \"ERC777.sol\":30488:30546  _send(sender, recipient, amount, data, operatorData, true) */\n      jump\t// in\n    tag_127:\n        /* \"ERC777.sol\":30179:30554  function operatorSend(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC777.sol\":27343:27495  function balanceOf(address tokenHolder) public view virtual override(IERC20, IERC777) returns (uint256) {... */\n    tag_61:\n        /* \"ERC777.sol\":27438:27445  uint256 */\n      0x00\n        /* \"ERC777.sol\":27465:27474  _balances */\n      dup1\n        /* \"ERC777.sol\":27465:27487  _balances[tokenHolder] */\n      0x00\n        /* \"ERC777.sol\":27475:27486  tokenHolder */\n      dup4\n        /* \"ERC777.sol\":27465:27487  _balances[tokenHolder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC777.sol\":27458:27487  return _balances[tokenHolder] */\n      swap1\n      pop\n        /* \"ERC777.sol\":27343:27495  function balanceOf(address tokenHolder) public view virtual override(IERC20, IERC777) returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC777.sol\":28946:29368  function authorizeOperator(address operator) public virtual override {... */\n    tag_65:\n        /* \"ERC777.sol\":29050:29058  operator */\n      dup1\n        /* \"ERC777.sol\":29034:29058  _msgSender() != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC777.sol\":29034:29046  _msgSender() */\n      tag_130\n        /* \"ERC777.sol\":29034:29044  _msgSender */\n      tag_109\n        /* \"ERC777.sol\":29034:29046  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"ERC777.sol\":29034:29058  _msgSender() != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC777.sol\":29026:29099  require(_msgSender() != operator, \"ERC777: authorizing self as operator\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"ERC777.sol\":29116:29133  _defaultOperators */\n      0x05\n        /* \"ERC777.sol\":29116:29143  _defaultOperators[operator] */\n      0x00\n        /* \"ERC777.sol\":29134:29142  operator */\n      dup3\n        /* \"ERC777.sol\":29116:29143  _defaultOperators[operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC777.sol\":29112:29301  if (_defaultOperators[operator]) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"ERC777.sol\":29167:29191  _revokedDefaultOperators */\n      0x07\n        /* \"ERC777.sol\":29167:29205  _revokedDefaultOperators[_msgSender()] */\n      0x00\n        /* \"ERC777.sol\":29192:29204  _msgSender() */\n      tag_135\n        /* \"ERC777.sol\":29192:29202  _msgSender */\n      tag_109\n        /* \"ERC777.sol\":29192:29204  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"ERC777.sol\":29167:29205  _revokedDefaultOperators[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC777.sol\":29167:29215  _revokedDefaultOperators[_msgSender()][operator] */\n      0x00\n        /* \"ERC777.sol\":29206:29214  operator */\n      dup3\n        /* \"ERC777.sol\":29167:29215  _revokedDefaultOperators[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC777.sol\":29160:29215  delete _revokedDefaultOperators[_msgSender()][operator] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"ERC777.sol\":29112:29301  if (_defaultOperators[operator]) {... */\n      jump(tag_136)\n    tag_134:\n        /* \"ERC777.sol\":29285:29289  true */\n      0x01\n        /* \"ERC777.sol\":29248:29258  _operators */\n      0x06\n        /* \"ERC777.sol\":29248:29272  _operators[_msgSender()] */\n      0x00\n        /* \"ERC777.sol\":29259:29271  _msgSender() */\n      tag_137\n        /* \"ERC777.sol\":29259:29269  _msgSender */\n      tag_109\n        /* \"ERC777.sol\":29259:29271  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"ERC777.sol\":29248:29272  _operators[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC777.sol\":29248:29282  _operators[_msgSender()][operator] */\n      0x00\n        /* \"ERC777.sol\":29273:29281  operator */\n      dup4\n        /* \"ERC777.sol\":29248:29282  _operators[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC777.sol\":29248:29289  _operators[_msgSender()][operator] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC777.sol\":29112:29301  if (_defaultOperators[operator]) {... */\n    tag_136:\n        /* \"ERC777.sol\":29347:29359  _msgSender() */\n      tag_138\n        /* \"ERC777.sol\":29347:29357  _msgSender */\n      tag_109\n        /* \"ERC777.sol\":29347:29359  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"ERC777.sol\":29318:29360  AuthorizedOperator(operator, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC777.sol\":29337:29345  operator */\n      dup2\n        /* \"ERC777.sol\":29318:29360  AuthorizedOperator(operator, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f9\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC777.sol\":28946:29368  function authorizeOperator(address operator) public virtual override {... */\n      pop\n      jump\t// out\n        /* \"ERC777.sol\":26448:26552  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"ERC777.sol\":26504:26517  string memory */\n      0x60\n        /* \"ERC777.sol\":26537:26544  _symbol */\n      0x03\n        /* \"ERC777.sol\":26530:26544  return _symbol */\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_102\n      jump\t// in\n    tag_140:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_141\n      swap1\n      tag_102\n      jump\t// in\n    tag_141:\n      dup1\n      iszero\n      tag_142\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_143\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_142)\n    tag_143:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_144:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_144\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC777.sol\":26448:26552  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC777.sol\":27632:27797  function send(address recipient, uint256 amount, bytes memory data) public virtual override {... */\n    tag_72:\n        /* \"ERC777.sol\":27735:27789  _send(_msgSender(), recipient, amount, data, \"\", true) */\n      tag_146\n        /* \"ERC777.sol\":27741:27753  _msgSender() */\n      tag_147\n        /* \"ERC777.sol\":27741:27751  _msgSender */\n      tag_109\n        /* \"ERC777.sol\":27741:27753  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"ERC777.sol\":27755:27764  recipient */\n      dup5\n        /* \"ERC777.sol\":27766:27772  amount */\n      dup5\n        /* \"ERC777.sol\":27774:27778  data */\n      dup5\n        /* \"ERC777.sol\":27735:27789  _send(_msgSender(), recipient, amount, data, \"\", true) */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"ERC777.sol\":27784:27788  true */\n      0x01\n        /* \"ERC777.sol\":27735:27740  _send */\n      tag_118\n        /* \"ERC777.sol\":27735:27789  _send(_msgSender(), recipient, amount, data, \"\", true) */\n      jump\t// in\n    tag_146:\n        /* \"ERC777.sol\":27632:27797  function send(address recipient, uint256 amount, bytes memory data) public virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC777.sol\":28038:28224  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_75:\n        /* \"ERC777.sol\":28124:28128  bool */\n      0x00\n        /* \"ERC777.sol\":28141:28194  _send(_msgSender(), recipient, amount, \"\", \"\", false) */\n      tag_149\n        /* \"ERC777.sol\":28147:28159  _msgSender() */\n      tag_150\n        /* \"ERC777.sol\":28147:28157  _msgSender */\n      tag_109\n        /* \"ERC777.sol\":28147:28159  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"ERC777.sol\":28161:28170  recipient */\n      dup5\n        /* \"ERC777.sol\":28172:28178  amount */\n      dup5\n        /* \"ERC777.sol\":28141:28194  _send(_msgSender(), recipient, amount, \"\", \"\", false) */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"ERC777.sol\":28188:28193  false */\n      0x00\n        /* \"ERC777.sol\":28141:28146  _send */\n      tag_118\n        /* \"ERC777.sol\":28141:28194  _send(_msgSender(), recipient, amount, \"\", \"\", false) */\n      jump\t// in\n    tag_149:\n        /* \"ERC777.sol\":28212:28216  true */\n      0x01\n        /* \"ERC777.sol\":28205:28216  return true */\n      swap1\n      pop\n        /* \"ERC777.sol\":28038:28224  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC777.sol\":28558:28874  function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {... */\n    tag_80:\n        /* \"ERC777.sol\":28658:28662  bool */\n      0x00\n        /* \"ERC777.sol\":28707:28718  tokenHolder */\n      dup2\n        /* \"ERC777.sol\":28695:28718  operator == tokenHolder */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC777.sol\":28695:28703  operator */\n      dup4\n        /* \"ERC777.sol\":28695:28718  operator == tokenHolder */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC777.sol\":28695:28816  operator == tokenHolder ||... */\n      dup1\n      tag_152\n      jumpi\n      pop\n        /* \"ERC777.sol\":28736:28753  _defaultOperators */\n      0x05\n        /* \"ERC777.sol\":28736:28763  _defaultOperators[operator] */\n      0x00\n        /* \"ERC777.sol\":28754:28762  operator */\n      dup5\n        /* \"ERC777.sol\":28736:28763  _defaultOperators[operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC777.sol\":28736:28815  _defaultOperators[operator] && !_revokedDefaultOperators[tokenHolder][operator] */\n      dup1\n      iszero\n      tag_153\n      jumpi\n      pop\n        /* \"ERC777.sol\":28768:28792  _revokedDefaultOperators */\n      0x07\n        /* \"ERC777.sol\":28768:28805  _revokedDefaultOperators[tokenHolder] */\n      0x00\n        /* \"ERC777.sol\":28793:28804  tokenHolder */\n      dup4\n        /* \"ERC777.sol\":28768:28805  _revokedDefaultOperators[tokenHolder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC777.sol\":28768:28815  _revokedDefaultOperators[tokenHolder][operator] */\n      0x00\n        /* \"ERC777.sol\":28806:28814  operator */\n      dup5\n        /* \"ERC777.sol\":28768:28815  _revokedDefaultOperators[tokenHolder][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC777.sol\":28767:28815  !_revokedDefaultOperators[tokenHolder][operator] */\n      iszero\n        /* \"ERC777.sol\":28736:28815  _defaultOperators[operator] && !_revokedDefaultOperators[tokenHolder][operator] */\n    tag_153:\n        /* \"ERC777.sol\":28695:28816  operator == tokenHolder ||... */\n    tag_152:\n        /* \"ERC777.sol\":28695:28866  operator == tokenHolder ||... */\n      dup1\n      tag_154\n      jumpi\n      pop\n        /* \"ERC777.sol\":28833:28843  _operators */\n      0x06\n        /* \"ERC777.sol\":28833:28856  _operators[tokenHolder] */\n      0x00\n        /* \"ERC777.sol\":28844:28855  tokenHolder */\n      dup4\n        /* \"ERC777.sol\":28833:28856  _operators[tokenHolder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC777.sol\":28833:28866  _operators[tokenHolder][operator] */\n      0x00\n        /* \"ERC777.sol\":28857:28865  operator */\n      dup5\n        /* \"ERC777.sol\":28833:28866  _operators[tokenHolder][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC777.sol\":28695:28866  operator == tokenHolder ||... */\n    tag_154:\n        /* \"ERC777.sol\":28675:28866  return... */\n      swap1\n      pop\n        /* \"ERC777.sol\":28558:28874  function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC777.sol\":31263:31416  function allowance(address holder, address spender) public view virtual override returns (uint256) {... */\n    tag_84:\n        /* \"ERC777.sol\":31353:31360  uint256 */\n      0x00\n        /* \"ERC777.sol\":31380:31391  _allowances */\n      0x08\n        /* \"ERC777.sol\":31380:31399  _allowances[holder] */\n      0x00\n        /* \"ERC777.sol\":31392:31398  holder */\n      dup5\n        /* \"ERC777.sol\":31380:31399  _allowances[holder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC777.sol\":31380:31408  _allowances[holder][spender] */\n      0x00\n        /* \"ERC777.sol\":31400:31407  spender */\n      dup4\n        /* \"ERC777.sol\":31380:31408  _allowances[holder][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC777.sol\":31373:31408  return _allowances[holder][spender] */\n      swap1\n      pop\n        /* \"ERC777.sol\":31263:31416  function allowance(address holder, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC777.sol\":29437:29850  function revokeOperator(address operator) public virtual override {... */\n    tag_88:\n        /* \"ERC777.sol\":29534:29546  _msgSender() */\n      tag_157\n        /* \"ERC777.sol\":29534:29544  _msgSender */\n      tag_109\n        /* \"ERC777.sol\":29534:29546  _msgSender() */\n      jump\t// in\n    tag_157:\n        /* \"ERC777.sol\":29522:29546  operator != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC777.sol\":29522:29530  operator */\n      dup2\n        /* \"ERC777.sol\":29522:29546  operator != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC777.sol\":29514:29584  require(operator != _msgSender(), \"ERC777: revoking self as operator\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"ERC777.sol\":29601:29618  _defaultOperators */\n      0x05\n        /* \"ERC777.sol\":29601:29628  _defaultOperators[operator] */\n      0x00\n        /* \"ERC777.sol\":29619:29627  operator */\n      dup3\n        /* \"ERC777.sol\":29601:29628  _defaultOperators[operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC777.sol\":29597:29786  if (_defaultOperators[operator]) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"ERC777.sol\":29696:29700  true */\n      0x01\n        /* \"ERC777.sol\":29645:29669  _revokedDefaultOperators */\n      0x07\n        /* \"ERC777.sol\":29645:29683  _revokedDefaultOperators[_msgSender()] */\n      0x00\n        /* \"ERC777.sol\":29670:29682  _msgSender() */\n      tag_162\n        /* \"ERC777.sol\":29670:29680  _msgSender */\n      tag_109\n        /* \"ERC777.sol\":29670:29682  _msgSender() */\n      jump\t// in\n    tag_162:\n        /* \"ERC777.sol\":29645:29683  _revokedDefaultOperators[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC777.sol\":29645:29693  _revokedDefaultOperators[_msgSender()][operator] */\n      0x00\n        /* \"ERC777.sol\":29684:29692  operator */\n      dup4\n        /* \"ERC777.sol\":29645:29693  _revokedDefaultOperators[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC777.sol\":29645:29700  _revokedDefaultOperators[_msgSender()][operator] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC777.sol\":29597:29786  if (_defaultOperators[operator]) {... */\n      jump(tag_163)\n    tag_161:\n        /* \"ERC777.sol\":29740:29750  _operators */\n      0x06\n        /* \"ERC777.sol\":29740:29764  _operators[_msgSender()] */\n      0x00\n        /* \"ERC777.sol\":29751:29763  _msgSender() */\n      tag_164\n        /* \"ERC777.sol\":29751:29761  _msgSender */\n      tag_109\n        /* \"ERC777.sol\":29751:29763  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"ERC777.sol\":29740:29764  _operators[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC777.sol\":29740:29774  _operators[_msgSender()][operator] */\n      0x00\n        /* \"ERC777.sol\":29765:29773  operator */\n      dup3\n        /* \"ERC777.sol\":29740:29774  _operators[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC777.sol\":29733:29774  delete _operators[_msgSender()][operator] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"ERC777.sol\":29597:29786  if (_defaultOperators[operator]) {... */\n    tag_163:\n        /* \"ERC777.sol\":29829:29841  _msgSender() */\n      tag_165\n        /* \"ERC777.sol\":29829:29839  _msgSender */\n      tag_109\n        /* \"ERC777.sol\":29829:29841  _msgSender() */\n      jump\t// in\n    tag_165:\n        /* \"ERC777.sol\":29803:29842  RevokedOperator(operator, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC777.sol\":29819:29827  operator */\n      dup2\n        /* \"ERC777.sol\":29803:29842  RevokedOperator(operator, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa1\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC777.sol\":29437:29850  function revokeOperator(address operator) public virtual override {... */\n      pop\n      jump\t// out\n        /* \"ERC777.sol\":30682:31015  function operatorBurn(... */\n    tag_92:\n        /* \"ERC777.sol\":30869:30905  isOperatorFor(_msgSender(), account) */\n      tag_167\n        /* \"ERC777.sol\":30883:30895  _msgSender() */\n      tag_168\n        /* \"ERC777.sol\":30883:30893  _msgSender */\n      tag_109\n        /* \"ERC777.sol\":30883:30895  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"ERC777.sol\":30897:30904  account */\n      dup6\n        /* \"ERC777.sol\":30869:30882  isOperatorFor */\n      tag_80\n        /* \"ERC777.sol\":30869:30905  isOperatorFor(_msgSender(), account) */\n      jump\t// in\n    tag_167:\n        /* \"ERC777.sol\":30861:30954  require(isOperatorFor(_msgSender(), account), \"ERC777: caller is not an operator for holder\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_126\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"ERC777.sol\":30965:31007  _burn(account, amount, data, operatorData) */\n      tag_171\n        /* \"ERC777.sol\":30971:30978  account */\n      dup5\n        /* \"ERC777.sol\":30980:30986  amount */\n      dup5\n        /* \"ERC777.sol\":30988:30992  data */\n      dup5\n        /* \"ERC777.sol\":30994:31006  operatorData */\n      dup5\n        /* \"ERC777.sol\":30965:30970  _burn */\n      tag_172\n        /* \"ERC777.sol\":30965:31007  _burn(account, amount, data, operatorData) */\n      jump\t// in\n    tag_171:\n        /* \"ERC777.sol\":30682:31015  function operatorBurn(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC777.sol\":28361:28490  function burn(uint256 amount, bytes memory data) public virtual override {... */\n    tag_96:\n        /* \"ERC777.sol\":28445:28482  _burn(_msgSender(), amount, data, \"\") */\n      tag_174\n        /* \"ERC777.sol\":28451:28463  _msgSender() */\n      tag_175\n        /* \"ERC777.sol\":28451:28461  _msgSender */\n      tag_109\n        /* \"ERC777.sol\":28451:28463  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"ERC777.sol\":28465:28471  amount */\n      dup4\n        /* \"ERC777.sol\":28473:28477  data */\n      dup4\n        /* \"ERC777.sol\":28445:28482  _burn(_msgSender(), amount, data, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"ERC777.sol\":28445:28450  _burn */\n      tag_172\n        /* \"ERC777.sol\":28445:28482  _burn(_msgSender(), amount, data, \"\") */\n      jump\t// in\n    tag_174:\n        /* \"ERC777.sol\":28361:28490  function burn(uint256 amount, bytes memory data) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC777.sol\":19988:20086  function _msgSender() internal view virtual returns (address) {... */\n    tag_109:\n        /* \"ERC777.sol\":20041:20048  address */\n      0x00\n        /* \"ERC777.sol\":20068:20078  msg.sender */\n      caller\n        /* \"ERC777.sol\":20061:20078  return msg.sender */\n      swap1\n      pop\n        /* \"ERC777.sol\":19988:20086  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC777.sol\":37984:38333  function _approve(address holder, address spender, uint256 value) internal virtual {... */\n    tag_111:\n        /* \"ERC777.sol\":38104:38105  0 */\n      0x00\n        /* \"ERC777.sol\":38086:38106  holder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC777.sol\":38086:38092  holder */\n      dup4\n        /* \"ERC777.sol\":38086:38106  holder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC777.sol\":38078:38148  require(holder != address(0), \"ERC777: approve from the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"ERC777.sol\":38186:38187  0 */\n      0x00\n        /* \"ERC777.sol\":38167:38188  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC777.sol\":38167:38174  spender */\n      dup3\n        /* \"ERC777.sol\":38167:38188  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC777.sol\":38159:38228  require(spender != address(0), \"ERC777: approve to the zero address\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"ERC777.sol\":38272:38277  value */\n      dup1\n        /* \"ERC777.sol\":38241:38252  _allowances */\n      0x08\n        /* \"ERC777.sol\":38241:38260  _allowances[holder] */\n      0x00\n        /* \"ERC777.sol\":38253:38259  holder */\n      dup6\n        /* \"ERC777.sol\":38241:38260  _allowances[holder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC777.sol\":38241:38269  _allowances[holder][spender] */\n      0x00\n        /* \"ERC777.sol\":38261:38268  spender */\n      dup5\n        /* \"ERC777.sol\":38241:38269  _allowances[holder][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC777.sol\":38241:38277  _allowances[holder][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC777.sol\":38310:38317  spender */\n      dup2\n        /* \"ERC777.sol\":38293:38325  Approval(holder, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC777.sol\":38302:38308  holder */\n      dup4\n        /* \"ERC777.sol\":38293:38325  Approval(holder, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"ERC777.sol\":38319:38324  value */\n      dup4\n        /* \"ERC777.sol\":38293:38325  Approval(holder, spender, value) */\n      mload(0x40)\n      tag_184\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC777.sol\":37984:38333  function _approve(address holder, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC777.sol\":40992:41412  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_116:\n        /* \"ERC777.sol\":41093:41117  uint256 currentAllowance */\n      0x00\n        /* \"ERC777.sol\":41120:41145  allowance(owner, spender) */\n      tag_186\n        /* \"ERC777.sol\":41130:41135  owner */\n      dup5\n        /* \"ERC777.sol\":41137:41144  spender */\n      dup5\n        /* \"ERC777.sol\":41120:41129  allowance */\n      tag_84\n        /* \"ERC777.sol\":41120:41145  allowance(owner, spender) */\n      jump\t// in\n    tag_186:\n        /* \"ERC777.sol\":41093:41145  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"ERC777.sol\":41180:41197  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"ERC777.sol\":41160:41176  currentAllowance */\n      dup2\n        /* \"ERC777.sol\":41160:41197  currentAllowance != type(uint256).max */\n      eq\n        /* \"ERC777.sol\":41156:41405  if (currentAllowance != type(uint256).max) {... */\n      tag_187\n      jumpi\n        /* \"ERC777.sol\":41242:41248  amount */\n      dup2\n        /* \"ERC777.sol\":41222:41238  currentAllowance */\n      dup2\n        /* \"ERC777.sol\":41222:41248  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"ERC777.sol\":41214:41283  require(currentAllowance >= amount, \"ERC777: insufficient allowance\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"ERC777.sol\":41327:41378  _approve(owner, spender, currentAllowance - amount) */\n      tag_191\n        /* \"ERC777.sol\":41336:41341  owner */\n      dup5\n        /* \"ERC777.sol\":41343:41350  spender */\n      dup5\n        /* \"ERC777.sol\":41371:41377  amount */\n      dup5\n        /* \"ERC777.sol\":41352:41368  currentAllowance */\n      dup5\n        /* \"ERC777.sol\":41352:41377  currentAllowance - amount */\n      sub\n        /* \"ERC777.sol\":41327:41335  _approve */\n      tag_111\n        /* \"ERC777.sol\":41327:41378  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_191:\n        /* \"ERC777.sol\":41156:41405  if (currentAllowance != type(uint256).max) {... */\n    tag_187:\n        /* \"ERC777.sol\":41082:41412  {... */\n      pop\n        /* \"ERC777.sol\":40992:41412  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC777.sol\":35419:36095  function _send(... */\n    tag_118:\n        /* \"ERC777.sol\":35665:35666  0 */\n      0x00\n        /* \"ERC777.sol\":35649:35667  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC777.sol\":35649:35653  from */\n      dup7\n        /* \"ERC777.sol\":35649:35667  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC777.sol\":35641:35710  require(from != address(0), \"ERC777: transfer from the zero address\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"ERC777.sol\":35743:35744  0 */\n      0x00\n        /* \"ERC777.sol\":35729:35745  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC777.sol\":35729:35731  to */\n      dup6\n        /* \"ERC777.sol\":35729:35745  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC777.sol\":35721:35786  require(to != address(0), \"ERC777: transfer to the zero address\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"ERC777.sol\":35799:35815  address operator */\n      0x00\n        /* \"ERC777.sol\":35818:35830  _msgSender() */\n      tag_199\n        /* \"ERC777.sol\":35818:35828  _msgSender */\n      tag_109\n        /* \"ERC777.sol\":35818:35830  _msgSender() */\n      jump\t// in\n    tag_199:\n        /* \"ERC777.sol\":35799:35830  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"ERC777.sol\":35843:35912  _callTokensToSend(operator, from, to, amount, userData, operatorData) */\n      tag_200\n        /* \"ERC777.sol\":35861:35869  operator */\n      dup2\n        /* \"ERC777.sol\":35871:35875  from */\n      dup9\n        /* \"ERC777.sol\":35877:35879  to */\n      dup9\n        /* \"ERC777.sol\":35881:35887  amount */\n      dup9\n        /* \"ERC777.sol\":35889:35897  userData */\n      dup9\n        /* \"ERC777.sol\":35899:35911  operatorData */\n      dup9\n        /* \"ERC777.sol\":35843:35860  _callTokensToSend */\n      tag_201\n        /* \"ERC777.sol\":35843:35912  _callTokensToSend(operator, from, to, amount, userData, operatorData) */\n      jump\t// in\n    tag_200:\n        /* \"ERC777.sol\":35925:35982  _move(operator, from, to, amount, userData, operatorData) */\n      tag_202\n        /* \"ERC777.sol\":35931:35939  operator */\n      dup2\n        /* \"ERC777.sol\":35941:35945  from */\n      dup9\n        /* \"ERC777.sol\":35947:35949  to */\n      dup9\n        /* \"ERC777.sol\":35951:35957  amount */\n      dup9\n        /* \"ERC777.sol\":35959:35967  userData */\n      dup9\n        /* \"ERC777.sol\":35969:35981  operatorData */\n      dup9\n        /* \"ERC777.sol\":35925:35930  _move */\n      tag_203\n        /* \"ERC777.sol\":35925:35982  _move(operator, from, to, amount, userData, operatorData) */\n      jump\t// in\n    tag_202:\n        /* \"ERC777.sol\":35995:36087  _callTokensReceived(operator, from, to, amount, userData, operatorData, requireReceptionAck) */\n      tag_204\n        /* \"ERC777.sol\":36015:36023  operator */\n      dup2\n        /* \"ERC777.sol\":36025:36029  from */\n      dup9\n        /* \"ERC777.sol\":36031:36033  to */\n      dup9\n        /* \"ERC777.sol\":36035:36041  amount */\n      dup9\n        /* \"ERC777.sol\":36043:36051  userData */\n      dup9\n        /* \"ERC777.sol\":36053:36065  operatorData */\n      dup9\n        /* \"ERC777.sol\":36067:36086  requireReceptionAck */\n      dup9\n        /* \"ERC777.sol\":35995:36014  _callTokensReceived */\n      tag_205\n        /* \"ERC777.sol\":35995:36087  _callTokensReceived(operator, from, to, amount, userData, operatorData, requireReceptionAck) */\n      jump\t// in\n    tag_204:\n        /* \"ERC777.sol\":35630:36095  {... */\n      pop\n        /* \"ERC777.sol\":35419:36095  function _send(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC777.sol\":36409:37201  function _burn(address from, uint256 amount, bytes memory data, bytes memory operatorData) internal virtual {... */\n    tag_172:\n        /* \"ERC777.sol\":36552:36553  0 */\n      0x00\n        /* \"ERC777.sol\":36536:36554  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC777.sol\":36536:36540  from */\n      dup5\n        /* \"ERC777.sol\":36536:36554  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC777.sol\":36528:36593  require(from != address(0), \"ERC777: burn from the zero address\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"ERC777.sol\":36606:36622  address operator */\n      0x00\n        /* \"ERC777.sol\":36625:36637  _msgSender() */\n      tag_210\n        /* \"ERC777.sol\":36625:36635  _msgSender */\n      tag_109\n        /* \"ERC777.sol\":36625:36637  _msgSender() */\n      jump\t// in\n    tag_210:\n        /* \"ERC777.sol\":36606:36637  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"ERC777.sol\":36650:36723  _callTokensToSend(operator, from, address(0), amount, data, operatorData) */\n      tag_211\n        /* \"ERC777.sol\":36668:36676  operator */\n      dup2\n        /* \"ERC777.sol\":36678:36682  from */\n      dup7\n        /* \"ERC777.sol\":36692:36693  0 */\n      0x00\n        /* \"ERC777.sol\":36696:36702  amount */\n      dup8\n        /* \"ERC777.sol\":36704:36708  data */\n      dup8\n        /* \"ERC777.sol\":36710:36722  operatorData */\n      dup8\n        /* \"ERC777.sol\":36650:36667  _callTokensToSend */\n      tag_201\n        /* \"ERC777.sol\":36650:36723  _callTokensToSend(operator, from, address(0), amount, data, operatorData) */\n      jump\t// in\n    tag_211:\n        /* \"ERC777.sol\":36736:36792  _beforeTokenTransfer(operator, from, address(0), amount) */\n      tag_212\n        /* \"ERC777.sol\":36757:36765  operator */\n      dup2\n        /* \"ERC777.sol\":36767:36771  from */\n      dup7\n        /* \"ERC777.sol\":36781:36782  0 */\n      0x00\n        /* \"ERC777.sol\":36785:36791  amount */\n      dup8\n        /* \"ERC777.sol\":36736:36756  _beforeTokenTransfer */\n      tag_213\n        /* \"ERC777.sol\":36736:36792  _beforeTokenTransfer(operator, from, address(0), amount) */\n      jump\t// in\n    tag_212:\n        /* \"ERC777.sol\":36840:36859  uint256 fromBalance */\n      0x00\n        /* \"ERC777.sol\":36862:36871  _balances */\n      dup1\n        /* \"ERC777.sol\":36862:36877  _balances[from] */\n      0x00\n        /* \"ERC777.sol\":36872:36876  from */\n      dup8\n        /* \"ERC777.sol\":36862:36877  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC777.sol\":36840:36877  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"ERC777.sol\":36911:36917  amount */\n      dup5\n        /* \"ERC777.sol\":36896:36907  fromBalance */\n      dup2\n        /* \"ERC777.sol\":36896:36917  fromBalance >= amount */\n      lt\n      iszero\n        /* \"ERC777.sol\":36888:36957  require(fromBalance >= amount, \"ERC777: burn amount exceeds balance\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_214:\n        /* \"ERC777.sol\":37025:37031  amount */\n      dup5\n        /* \"ERC777.sol\":37011:37022  fromBalance */\n      dup2\n        /* \"ERC777.sol\":37011:37031  fromBalance - amount */\n      sub\n        /* \"ERC777.sol\":36993:37002  _balances */\n      0x00\n        /* \"ERC777.sol\":36993:37008  _balances[from] */\n      dup1\n        /* \"ERC777.sol\":37003:37007  from */\n      dup9\n        /* \"ERC777.sol\":36993:37008  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC777.sol\":36993:37031  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC777.sol\":37069:37075  amount */\n      dup5\n        /* \"ERC777.sol\":37053:37065  _totalSupply */\n      0x01\n      0x00\n        /* \"ERC777.sol\":37053:37075  _totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      tag_217\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC777.sol\":37110:37114  from */\n      dup6\n        /* \"ERC777.sol\":37093:37143  Burned(operator, from, amount, data, operatorData) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC777.sol\":37100:37108  operator */\n      dup3\n        /* \"ERC777.sol\":37093:37143  Burned(operator, from, amount, data, operatorData) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a4098\n        /* \"ERC777.sol\":37116:37122  amount */\n      dup8\n        /* \"ERC777.sol\":37124:37128  data */\n      dup8\n        /* \"ERC777.sol\":37130:37142  operatorData */\n      dup8\n        /* \"ERC777.sol\":37093:37143  Burned(operator, from, amount, data, operatorData) */\n      mload(0x40)\n      tag_219\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC777.sol\":37182:37183  0 */\n      0x00\n        /* \"ERC777.sol\":37159:37193  Transfer(from, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC777.sol\":37168:37172  from */\n      dup7\n        /* \"ERC777.sol\":37159:37193  Transfer(from, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC777.sol\":37186:37192  amount */\n      dup8\n        /* \"ERC777.sol\":37159:37193  Transfer(from, address(0), amount) */\n      mload(0x40)\n      tag_221\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC777.sol\":36517:37201  {... */\n      pop\n      pop\n        /* \"ERC777.sol\":36409:37201  function _burn(address from, uint256 amount, bytes memory data, bytes memory operatorData) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC777.sol\":38817:39301  function _callTokensToSend(... */\n    tag_201:\n        /* \"ERC777.sol\":39034:39053  address implementer */\n      0x00\n        /* \"ERC777.sol\":24520:24562  0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24 */\n      0x1820a4b7618bde71dce8cdc73aab6c95905fad24\n        /* \"ERC777.sol\":39056:39097  _ERC1820_REGISTRY.getInterfaceImplementer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaabbb8ca\n        /* \"ERC777.sol\":39098:39102  from */\n      dup8\n        /* \"ERC777.sol\":24778:24809  keccak256(\"ERC777TokensSender\") */\n      0x29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895\n        /* \"ERC777.sol\":39056:39134  _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap3\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_226:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_227\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"ERC777.sol\":39034:39134  address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH) */\n      swap1\n      pop\n        /* \"ERC777.sol\":39172:39173  0 */\n      0x00\n        /* \"ERC777.sol\":39149:39174  implementer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC777.sol\":39149:39160  implementer */\n      dup2\n        /* \"ERC777.sol\":39149:39174  implementer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC777.sol\":39145:39294  if (implementer != address(0)) {... */\n      tag_229\n      jumpi\n        /* \"ERC777.sol\":39205:39216  implementer */\n      dup1\n        /* \"ERC777.sol\":39191:39230  IERC777Sender(implementer).tokensToSend */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x75ab9782\n        /* \"ERC777.sol\":39231:39239  operator */\n      dup9\n        /* \"ERC777.sol\":39241:39245  from */\n      dup9\n        /* \"ERC777.sol\":39247:39249  to */\n      dup9\n        /* \"ERC777.sol\":39251:39257  amount */\n      dup9\n        /* \"ERC777.sol\":39259:39267  userData */\n      dup9\n        /* \"ERC777.sol\":39269:39281  operatorData */\n      dup9\n        /* \"ERC777.sol\":39191:39282  IERC777Sender(implementer).tokensToSend(operator, from, to, amount, userData, operatorData) */\n      mload(0x40)\n      dup8\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_232\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_232:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_234\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_234:\n      pop\n      pop\n      pop\n      pop\n        /* \"ERC777.sol\":39145:39294  if (implementer != address(0)) {... */\n    tag_229:\n        /* \"ERC777.sol\":39023:39301  {... */\n      pop\n        /* \"ERC777.sol\":38817:39301  function _callTokensToSend(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC777.sol\":37209:37839  function _move(... */\n    tag_203:\n        /* \"ERC777.sol\":37414:37462  _beforeTokenTransfer(operator, from, to, amount) */\n      tag_236\n        /* \"ERC777.sol\":37435:37443  operator */\n      dup7\n        /* \"ERC777.sol\":37445:37449  from */\n      dup7\n        /* \"ERC777.sol\":37451:37453  to */\n      dup7\n        /* \"ERC777.sol\":37455:37461  amount */\n      dup7\n        /* \"ERC777.sol\":37414:37434  _beforeTokenTransfer */\n      tag_213\n        /* \"ERC777.sol\":37414:37462  _beforeTokenTransfer(operator, from, to, amount) */\n      jump\t// in\n    tag_236:\n        /* \"ERC777.sol\":37475:37494  uint256 fromBalance */\n      0x00\n        /* \"ERC777.sol\":37497:37506  _balances */\n      dup1\n        /* \"ERC777.sol\":37497:37512  _balances[from] */\n      0x00\n        /* \"ERC777.sol\":37507:37511  from */\n      dup8\n        /* \"ERC777.sol\":37497:37512  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC777.sol\":37475:37512  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"ERC777.sol\":37546:37552  amount */\n      dup4\n        /* \"ERC777.sol\":37531:37542  fromBalance */\n      dup2\n        /* \"ERC777.sol\":37531:37552  fromBalance >= amount */\n      lt\n      iszero\n        /* \"ERC777.sol\":37523:37596  require(fromBalance >= amount, \"ERC777: transfer amount exceeds balance\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"ERC777.sol\":37664:37670  amount */\n      dup4\n        /* \"ERC777.sol\":37650:37661  fromBalance */\n      dup2\n        /* \"ERC777.sol\":37650:37670  fromBalance - amount */\n      sub\n        /* \"ERC777.sol\":37632:37641  _balances */\n      0x00\n        /* \"ERC777.sol\":37632:37647  _balances[from] */\n      dup1\n        /* \"ERC777.sol\":37642:37646  from */\n      dup9\n        /* \"ERC777.sol\":37632:37647  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC777.sol\":37632:37670  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC777.sol\":37709:37715  amount */\n      dup4\n        /* \"ERC777.sol\":37692:37701  _balances */\n      0x00\n        /* \"ERC777.sol\":37692:37705  _balances[to] */\n      dup1\n        /* \"ERC777.sol\":37702:37704  to */\n      dup8\n        /* \"ERC777.sol\":37692:37705  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC777.sol\":37692:37715  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_240\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC777.sol\":37754:37756  to */\n      dup5\n        /* \"ERC777.sol\":37733:37789  Sent(operator, from, to, amount, userData, operatorData) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC777.sol\":37748:37752  from */\n      dup7\n        /* \"ERC777.sol\":37733:37789  Sent(operator, from, to, amount, userData, operatorData) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC777.sol\":37738:37746  operator */\n      dup9\n        /* \"ERC777.sol\":37733:37789  Sent(operator, from, to, amount, userData, operatorData) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987\n        /* \"ERC777.sol\":37758:37764  amount */\n      dup8\n        /* \"ERC777.sol\":37766:37774  userData */\n      dup8\n        /* \"ERC777.sol\":37776:37788  operatorData */\n      dup8\n        /* \"ERC777.sol\":37733:37789  Sent(operator, from, to, amount, userData, operatorData) */\n      mload(0x40)\n      tag_242\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC777.sol\":37820:37822  to */\n      dup5\n        /* \"ERC777.sol\":37805:37831  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC777.sol\":37814:37818  from */\n      dup7\n        /* \"ERC777.sol\":37805:37831  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC777.sol\":37824:37830  amount */\n      dup7\n        /* \"ERC777.sol\":37805:37831  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_243\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC777.sol\":37403:37839  {... */\n      pop\n        /* \"ERC777.sol\":37209:37839  function _move(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC777.sol\":40003:40694  function _callTokensReceived(... */\n    tag_205:\n        /* \"ERC777.sol\":40257:40276  address implementer */\n      0x00\n        /* \"ERC777.sol\":24520:24562  0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24 */\n      0x1820a4b7618bde71dce8cdc73aab6c95905fad24\n        /* \"ERC777.sol\":40279:40320  _ERC1820_REGISTRY.getInterfaceImplementer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaabbb8ca\n        /* \"ERC777.sol\":40321:40323  to */\n      dup8\n        /* \"ERC777.sol\":24876:24910  keccak256(\"ERC777TokensRecipient\") */\n      0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b\n        /* \"ERC777.sol\":40279:40358  _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap3\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_245:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_247\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_247:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_248\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_248:\n        /* \"ERC777.sol\":40257:40358  address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH) */\n      swap1\n      pop\n        /* \"ERC777.sol\":40396:40397  0 */\n      0x00\n        /* \"ERC777.sol\":40373:40398  implementer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC777.sol\":40373:40384  implementer */\n      dup2\n        /* \"ERC777.sol\":40373:40398  implementer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC777.sol\":40369:40687  if (implementer != address(0)) {... */\n      tag_249\n      jumpi\n        /* \"ERC777.sol\":40432:40443  implementer */\n      dup1\n        /* \"ERC777.sol\":40415:40459  IERC777Recipient(implementer).tokensReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23de29\n        /* \"ERC777.sol\":40460:40468  operator */\n      dup10\n        /* \"ERC777.sol\":40470:40474  from */\n      dup10\n        /* \"ERC777.sol\":40476:40478  to */\n      dup10\n        /* \"ERC777.sol\":40480:40486  amount */\n      dup10\n        /* \"ERC777.sol\":40488:40496  userData */\n      dup10\n        /* \"ERC777.sol\":40498:40510  operatorData */\n      dup10\n        /* \"ERC777.sol\":40415:40511  IERC777Recipient(implementer).tokensReceived(operator, from, to, amount, userData, operatorData) */\n      mload(0x40)\n      dup8\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_250:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_251\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_251:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_253\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_253:\n      pop\n      pop\n      pop\n      pop\n        /* \"ERC777.sol\":40369:40687  if (implementer != address(0)) {... */\n      jump(tag_254)\n    tag_249:\n        /* \"ERC777.sol\":40533:40552  requireReceptionAck */\n      dup2\n        /* \"ERC777.sol\":40529:40687  if (requireReceptionAck) {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"ERC777.sol\":40578:40593  to.isContract() */\n      tag_256\n        /* \"ERC777.sol\":40578:40580  to */\n      dup7\n        /* \"ERC777.sol\":40578:40591  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_257\n        /* \"ERC777.sol\":40578:40593  to.isContract() */\n      jump\t// in\n    tag_256:\n        /* \"ERC777.sol\":40577:40593  !to.isContract() */\n      iszero\n        /* \"ERC777.sol\":40569:40675  require(!to.isContract(), \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_258:\n        /* \"ERC777.sol\":40529:40687  if (requireReceptionAck) {... */\n    tag_255:\n        /* \"ERC777.sol\":40369:40687  if (implementer != address(0)) {... */\n    tag_254:\n        /* \"ERC777.sol\":40246:40694  {... */\n      pop\n        /* \"ERC777.sol\":40003:40694  function _callTokensReceived(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC777.sol\":42072:42181  function _beforeTokenTransfer(address operator, address from, address to, uint256 amount) internal virtual {} */\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC777.sol\":11797:12123  function isContract(address account) internal view returns (bool) {... */\n    tag_257:\n        /* \"ERC777.sol\":11857:11861  bool */\n      0x00\n        /* \"ERC777.sol\":12114:12115  0 */\n      dup1\n        /* \"ERC777.sol\":12092:12099  account */\n      dup3\n        /* \"ERC777.sol\":12092:12111  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"ERC777.sol\":12092:12115  account.code.length > 0 */\n      gt\n        /* \"ERC777.sol\":12085:12115  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"ERC777.sol\":11797:12123  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:121   */\n    tag_263:\n        /* \"#utility.yul\":74:80   */\n      0x00\n        /* \"#utility.yul\":108:113   */\n      dup2\n        /* \"#utility.yul\":102:114   */\n      mload\n        /* \"#utility.yul\":92:114   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":127:311   */\n    tag_264:\n        /* \"#utility.yul\":226:237   */\n      0x00\n        /* \"#utility.yul\":260:266   */\n      dup3\n        /* \"#utility.yul\":255:258   */\n      dup3\n        /* \"#utility.yul\":248:267   */\n      mstore\n        /* \"#utility.yul\":300:304   */\n      0x20\n        /* \"#utility.yul\":295:298   */\n      dup3\n        /* \"#utility.yul\":291:305   */\n      add\n        /* \"#utility.yul\":276:305   */\n      swap1\n      pop\n        /* \"#utility.yul\":127:311   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":317:449   */\n    tag_265:\n        /* \"#utility.yul\":384:388   */\n      0x00\n        /* \"#utility.yul\":407:410   */\n      dup2\n        /* \"#utility.yul\":399:410   */\n      swap1\n      pop\n        /* \"#utility.yul\":437:441   */\n      0x20\n        /* \"#utility.yul\":432:435   */\n      dup3\n        /* \"#utility.yul\":428:442   */\n      add\n        /* \"#utility.yul\":420:442   */\n      swap1\n      pop\n        /* \"#utility.yul\":317:449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":455:581   */\n    tag_266:\n        /* \"#utility.yul\":492:499   */\n      0x00\n        /* \"#utility.yul\":532:574   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":525:530   */\n      dup3\n        /* \"#utility.yul\":521:575   */\n      and\n        /* \"#utility.yul\":510:575   */\n      swap1\n      pop\n        /* \"#utility.yul\":455:581   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":587:683   */\n    tag_267:\n        /* \"#utility.yul\":624:631   */\n      0x00\n        /* \"#utility.yul\":653:677   */\n      tag_338\n        /* \"#utility.yul\":671:676   */\n      dup3\n        /* \"#utility.yul\":653:677   */\n      tag_266\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":642:677   */\n      swap1\n      pop\n        /* \"#utility.yul\":587:683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":689:797   */\n    tag_268:\n        /* \"#utility.yul\":766:790   */\n      tag_340\n        /* \"#utility.yul\":784:789   */\n      dup2\n        /* \"#utility.yul\":766:790   */\n      tag_267\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":761:764   */\n      dup3\n        /* \"#utility.yul\":754:791   */\n      mstore\n        /* \"#utility.yul\":689:797   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":803:982   */\n    tag_269:\n        /* \"#utility.yul\":872:882   */\n      0x00\n        /* \"#utility.yul\":893:939   */\n      tag_342\n        /* \"#utility.yul\":935:938   */\n      dup4\n        /* \"#utility.yul\":927:933   */\n      dup4\n        /* \"#utility.yul\":893:939   */\n      tag_268\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":971:975   */\n      0x20\n        /* \"#utility.yul\":966:969   */\n      dup4\n        /* \"#utility.yul\":962:976   */\n      add\n        /* \"#utility.yul\":948:976   */\n      swap1\n      pop\n        /* \"#utility.yul\":803:982   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":988:1101   */\n    tag_270:\n        /* \"#utility.yul\":1058:1062   */\n      0x00\n        /* \"#utility.yul\":1090:1094   */\n      0x20\n        /* \"#utility.yul\":1085:1088   */\n      dup3\n        /* \"#utility.yul\":1081:1095   */\n      add\n        /* \"#utility.yul\":1073:1095   */\n      swap1\n      pop\n        /* \"#utility.yul\":988:1101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1137:1869   */\n    tag_271:\n        /* \"#utility.yul\":1256:1259   */\n      0x00\n        /* \"#utility.yul\":1285:1339   */\n      tag_345\n        /* \"#utility.yul\":1333:1338   */\n      dup3\n        /* \"#utility.yul\":1285:1339   */\n      tag_263\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":1355:1441   */\n      tag_346\n        /* \"#utility.yul\":1434:1440   */\n      dup2\n        /* \"#utility.yul\":1429:1432   */\n      dup6\n        /* \"#utility.yul\":1355:1441   */\n      tag_264\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":1348:1441   */\n      swap4\n      pop\n        /* \"#utility.yul\":1465:1521   */\n      tag_347\n        /* \"#utility.yul\":1515:1520   */\n      dup4\n        /* \"#utility.yul\":1465:1521   */\n      tag_265\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":1544:1551   */\n      dup1\n        /* \"#utility.yul\":1575:1576   */\n      0x00\n        /* \"#utility.yul\":1560:1844   */\n    tag_348:\n        /* \"#utility.yul\":1585:1591   */\n      dup4\n        /* \"#utility.yul\":1582:1583   */\n      dup2\n        /* \"#utility.yul\":1579:1592   */\n      lt\n        /* \"#utility.yul\":1560:1844   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":1661:1667   */\n      dup2\n        /* \"#utility.yul\":1655:1668   */\n      mload\n        /* \"#utility.yul\":1688:1751   */\n      tag_351\n        /* \"#utility.yul\":1747:1750   */\n      dup9\n        /* \"#utility.yul\":1732:1745   */\n      dup3\n        /* \"#utility.yul\":1688:1751   */\n      tag_269\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":1681:1751   */\n      swap8\n      pop\n        /* \"#utility.yul\":1774:1834   */\n      tag_352\n        /* \"#utility.yul\":1827:1833   */\n      dup4\n        /* \"#utility.yul\":1774:1834   */\n      tag_270\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":1764:1834   */\n      swap3\n      pop\n        /* \"#utility.yul\":1620:1844   */\n      pop\n        /* \"#utility.yul\":1607:1608   */\n      0x01\n        /* \"#utility.yul\":1604:1605   */\n      dup2\n        /* \"#utility.yul\":1600:1609   */\n      add\n        /* \"#utility.yul\":1595:1609   */\n      swap1\n      pop\n        /* \"#utility.yul\":1560:1844   */\n      jump(tag_348)\n    tag_350:\n        /* \"#utility.yul\":1564:1578   */\n      pop\n        /* \"#utility.yul\":1860:1863   */\n      dup6\n        /* \"#utility.yul\":1853:1863   */\n      swap4\n      pop\n        /* \"#utility.yul\":1261:1869   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1137:1869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1875:2248   */\n    tag_27:\n        /* \"#utility.yul\":2018:2022   */\n      0x00\n        /* \"#utility.yul\":2056:2058   */\n      0x20\n        /* \"#utility.yul\":2045:2054   */\n      dup3\n        /* \"#utility.yul\":2041:2059   */\n      add\n        /* \"#utility.yul\":2033:2059   */\n      swap1\n      pop\n        /* \"#utility.yul\":2105:2114   */\n      dup2\n        /* \"#utility.yul\":2099:2103   */\n      dup2\n        /* \"#utility.yul\":2095:2115   */\n      sub\n        /* \"#utility.yul\":2091:2092   */\n      0x00\n        /* \"#utility.yul\":2080:2089   */\n      dup4\n        /* \"#utility.yul\":2076:2093   */\n      add\n        /* \"#utility.yul\":2069:2116   */\n      mstore\n        /* \"#utility.yul\":2133:2241   */\n      tag_354\n        /* \"#utility.yul\":2236:2240   */\n      dup2\n        /* \"#utility.yul\":2227:2233   */\n      dup5\n        /* \"#utility.yul\":2133:2241   */\n      tag_271\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":2125:2241   */\n      swap1\n      pop\n        /* \"#utility.yul\":1875:2248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2254:2353   */\n    tag_272:\n        /* \"#utility.yul\":2306:2312   */\n      0x00\n        /* \"#utility.yul\":2340:2345   */\n      dup2\n        /* \"#utility.yul\":2334:2346   */\n      mload\n        /* \"#utility.yul\":2324:2346   */\n      swap1\n      pop\n        /* \"#utility.yul\":2254:2353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2359:2528   */\n    tag_273:\n        /* \"#utility.yul\":2443:2454   */\n      0x00\n        /* \"#utility.yul\":2477:2483   */\n      dup3\n        /* \"#utility.yul\":2472:2475   */\n      dup3\n        /* \"#utility.yul\":2465:2484   */\n      mstore\n        /* \"#utility.yul\":2517:2521   */\n      0x20\n        /* \"#utility.yul\":2512:2515   */\n      dup3\n        /* \"#utility.yul\":2508:2522   */\n      add\n        /* \"#utility.yul\":2493:2522   */\n      swap1\n      pop\n        /* \"#utility.yul\":2359:2528   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2534:2780   */\n    tag_274:\n        /* \"#utility.yul\":2615:2616   */\n      0x00\n        /* \"#utility.yul\":2625:2738   */\n    tag_358:\n        /* \"#utility.yul\":2639:2645   */\n      dup4\n        /* \"#utility.yul\":2636:2637   */\n      dup2\n        /* \"#utility.yul\":2633:2646   */\n      lt\n        /* \"#utility.yul\":2625:2738   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":2724:2725   */\n      dup1\n        /* \"#utility.yul\":2719:2722   */\n      dup3\n        /* \"#utility.yul\":2715:2726   */\n      add\n        /* \"#utility.yul\":2709:2727   */\n      mload\n        /* \"#utility.yul\":2705:2706   */\n      dup2\n        /* \"#utility.yul\":2700:2703   */\n      dup5\n        /* \"#utility.yul\":2696:2707   */\n      add\n        /* \"#utility.yul\":2689:2728   */\n      mstore\n        /* \"#utility.yul\":2661:2663   */\n      0x20\n        /* \"#utility.yul\":2658:2659   */\n      dup2\n        /* \"#utility.yul\":2654:2664   */\n      add\n        /* \"#utility.yul\":2649:2664   */\n      swap1\n      pop\n        /* \"#utility.yul\":2625:2738   */\n      jump(tag_358)\n    tag_360:\n        /* \"#utility.yul\":2772:2773   */\n      0x00\n        /* \"#utility.yul\":2763:2769   */\n      dup5\n        /* \"#utility.yul\":2758:2761   */\n      dup5\n        /* \"#utility.yul\":2754:2770   */\n      add\n        /* \"#utility.yul\":2747:2774   */\n      mstore\n        /* \"#utility.yul\":2596:2780   */\n      pop\n        /* \"#utility.yul\":2534:2780   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2888   */\n    tag_275:\n        /* \"#utility.yul\":2827:2833   */\n      0x00\n        /* \"#utility.yul\":2878:2880   */\n      0x1f\n        /* \"#utility.yul\":2874:2881   */\n      not\n        /* \"#utility.yul\":2869:2871   */\n      0x1f\n        /* \"#utility.yul\":2862:2867   */\n      dup4\n        /* \"#utility.yul\":2858:2872   */\n      add\n        /* \"#utility.yul\":2854:2882   */\n      and\n        /* \"#utility.yul\":2844:2882   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2888   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2894:3271   */\n    tag_276:\n        /* \"#utility.yul\":2982:2985   */\n      0x00\n        /* \"#utility.yul\":3010:3049   */\n      tag_363\n        /* \"#utility.yul\":3043:3048   */\n      dup3\n        /* \"#utility.yul\":3010:3049   */\n      tag_272\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3065:3136   */\n      tag_364\n        /* \"#utility.yul\":3129:3135   */\n      dup2\n        /* \"#utility.yul\":3124:3127   */\n      dup6\n        /* \"#utility.yul\":3065:3136   */\n      tag_273\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":3058:3136   */\n      swap4\n      pop\n        /* \"#utility.yul\":3145:3210   */\n      tag_365\n        /* \"#utility.yul\":3203:3209   */\n      dup2\n        /* \"#utility.yul\":3198:3201   */\n      dup6\n        /* \"#utility.yul\":3191:3195   */\n      0x20\n        /* \"#utility.yul\":3184:3189   */\n      dup7\n        /* \"#utility.yul\":3180:3196   */\n      add\n        /* \"#utility.yul\":3145:3210   */\n      tag_274\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":3235:3264   */\n      tag_366\n        /* \"#utility.yul\":3257:3263   */\n      dup2\n        /* \"#utility.yul\":3235:3264   */\n      tag_275\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":3230:3233   */\n      dup5\n        /* \"#utility.yul\":3226:3265   */\n      add\n        /* \"#utility.yul\":3219:3265   */\n      swap2\n      pop\n        /* \"#utility.yul\":2986:3271   */\n      pop\n        /* \"#utility.yul\":2894:3271   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3277:3590   */\n    tag_31:\n        /* \"#utility.yul\":3390:3394   */\n      0x00\n        /* \"#utility.yul\":3428:3430   */\n      0x20\n        /* \"#utility.yul\":3417:3426   */\n      dup3\n        /* \"#utility.yul\":3413:3431   */\n      add\n        /* \"#utility.yul\":3405:3431   */\n      swap1\n      pop\n        /* \"#utility.yul\":3477:3486   */\n      dup2\n        /* \"#utility.yul\":3471:3475   */\n      dup2\n        /* \"#utility.yul\":3467:3487   */\n      sub\n        /* \"#utility.yul\":3463:3464   */\n      0x00\n        /* \"#utility.yul\":3452:3461   */\n      dup4\n        /* \"#utility.yul\":3448:3465   */\n      add\n        /* \"#utility.yul\":3441:3488   */\n      mstore\n        /* \"#utility.yul\":3505:3583   */\n      tag_368\n        /* \"#utility.yul\":3578:3582   */\n      dup2\n        /* \"#utility.yul\":3569:3575   */\n      dup5\n        /* \"#utility.yul\":3505:3583   */\n      tag_276\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":3497:3583   */\n      swap1\n      pop\n        /* \"#utility.yul\":3277:3590   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3596:3671   */\n    tag_277:\n        /* \"#utility.yul\":3629:3635   */\n      0x00\n        /* \"#utility.yul\":3662:3664   */\n      0x40\n        /* \"#utility.yul\":3656:3665   */\n      mload\n        /* \"#utility.yul\":3646:3665   */\n      swap1\n      pop\n        /* \"#utility.yul\":3596:3671   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":3677:3794   */\n    tag_278:\n        /* \"#utility.yul\":3786:3787   */\n      0x00\n        /* \"#utility.yul\":3783:3784   */\n      dup1\n        /* \"#utility.yul\":3776:3788   */\n      revert\n        /* \"#utility.yul\":3800:3917   */\n    tag_279:\n        /* \"#utility.yul\":3909:3910   */\n      0x00\n        /* \"#utility.yul\":3906:3907   */\n      dup1\n        /* \"#utility.yul\":3899:3911   */\n      revert\n        /* \"#utility.yul\":3923:4045   */\n    tag_280:\n        /* \"#utility.yul\":3996:4020   */\n      tag_373\n        /* \"#utility.yul\":4014:4019   */\n      dup2\n        /* \"#utility.yul\":3996:4020   */\n      tag_267\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":3989:3994   */\n      dup2\n        /* \"#utility.yul\":3986:4021   */\n      eq\n        /* \"#utility.yul\":3976:4039   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":4035:4036   */\n      0x00\n        /* \"#utility.yul\":4032:4033   */\n      dup1\n        /* \"#utility.yul\":4025:4037   */\n      revert\n        /* \"#utility.yul\":3976:4039   */\n    tag_374:\n        /* \"#utility.yul\":3923:4045   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4051:4190   */\n    tag_281:\n        /* \"#utility.yul\":4097:4102   */\n      0x00\n        /* \"#utility.yul\":4135:4141   */\n      dup2\n        /* \"#utility.yul\":4122:4142   */\n      calldataload\n        /* \"#utility.yul\":4113:4142   */\n      swap1\n      pop\n        /* \"#utility.yul\":4151:4184   */\n      tag_376\n        /* \"#utility.yul\":4178:4183   */\n      dup2\n        /* \"#utility.yul\":4151:4184   */\n      tag_280\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":4051:4190   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4196:4273   */\n    tag_282:\n        /* \"#utility.yul\":4233:4240   */\n      0x00\n        /* \"#utility.yul\":4262:4267   */\n      dup2\n        /* \"#utility.yul\":4251:4267   */\n      swap1\n      pop\n        /* \"#utility.yul\":4196:4273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4279:4401   */\n    tag_283:\n        /* \"#utility.yul\":4352:4376   */\n      tag_379\n        /* \"#utility.yul\":4370:4375   */\n      dup2\n        /* \"#utility.yul\":4352:4376   */\n      tag_282\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":4345:4350   */\n      dup2\n        /* \"#utility.yul\":4342:4377   */\n      eq\n        /* \"#utility.yul\":4332:4395   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":4391:4392   */\n      0x00\n        /* \"#utility.yul\":4388:4389   */\n      dup1\n        /* \"#utility.yul\":4381:4393   */\n      revert\n        /* \"#utility.yul\":4332:4395   */\n    tag_380:\n        /* \"#utility.yul\":4279:4401   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4407:4546   */\n    tag_284:\n        /* \"#utility.yul\":4453:4458   */\n      0x00\n        /* \"#utility.yul\":4491:4497   */\n      dup2\n        /* \"#utility.yul\":4478:4498   */\n      calldataload\n        /* \"#utility.yul\":4469:4498   */\n      swap1\n      pop\n        /* \"#utility.yul\":4507:4540   */\n      tag_382\n        /* \"#utility.yul\":4534:4539   */\n      dup2\n        /* \"#utility.yul\":4507:4540   */\n      tag_283\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":4407:4546   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4552:5026   */\n    tag_34:\n        /* \"#utility.yul\":4620:4626   */\n      0x00\n        /* \"#utility.yul\":4628:4634   */\n      dup1\n        /* \"#utility.yul\":4677:4679   */\n      0x40\n        /* \"#utility.yul\":4665:4674   */\n      dup4\n        /* \"#utility.yul\":4656:4663   */\n      dup6\n        /* \"#utility.yul\":4652:4675   */\n      sub\n        /* \"#utility.yul\":4648:4680   */\n      slt\n        /* \"#utility.yul\":4645:4764   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":4683:4762   */\n      tag_385\n      tag_278\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":4645:4764   */\n    tag_384:\n        /* \"#utility.yul\":4803:4804   */\n      0x00\n        /* \"#utility.yul\":4828:4881   */\n      tag_386\n        /* \"#utility.yul\":4873:4880   */\n      dup6\n        /* \"#utility.yul\":4864:4870   */\n      dup3\n        /* \"#utility.yul\":4853:4862   */\n      dup7\n        /* \"#utility.yul\":4849:4871   */\n      add\n        /* \"#utility.yul\":4828:4881   */\n      tag_281\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":4818:4881   */\n      swap3\n      pop\n        /* \"#utility.yul\":4774:4891   */\n      pop\n        /* \"#utility.yul\":4930:4932   */\n      0x20\n        /* \"#utility.yul\":4956:5009   */\n      tag_387\n        /* \"#utility.yul\":5001:5008   */\n      dup6\n        /* \"#utility.yul\":4992:4998   */\n      dup3\n        /* \"#utility.yul\":4981:4990   */\n      dup7\n        /* \"#utility.yul\":4977:4999   */\n      add\n        /* \"#utility.yul\":4956:5009   */\n      tag_284\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":4946:5009   */\n      swap2\n      pop\n        /* \"#utility.yul\":4901:5019   */\n      pop\n        /* \"#utility.yul\":4552:5026   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5032:5122   */\n    tag_285:\n        /* \"#utility.yul\":5066:5073   */\n      0x00\n        /* \"#utility.yul\":5109:5114   */\n      dup2\n        /* \"#utility.yul\":5102:5115   */\n      iszero\n        /* \"#utility.yul\":5095:5116   */\n      iszero\n        /* \"#utility.yul\":5084:5116   */\n      swap1\n      pop\n        /* \"#utility.yul\":5032:5122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5128:5237   */\n    tag_286:\n        /* \"#utility.yul\":5209:5230   */\n      tag_390\n        /* \"#utility.yul\":5224:5229   */\n      dup2\n        /* \"#utility.yul\":5209:5230   */\n      tag_285\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":5204:5207   */\n      dup3\n        /* \"#utility.yul\":5197:5231   */\n      mstore\n        /* \"#utility.yul\":5128:5237   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5243:5453   */\n    tag_37:\n        /* \"#utility.yul\":5330:5334   */\n      0x00\n        /* \"#utility.yul\":5368:5370   */\n      0x20\n        /* \"#utility.yul\":5357:5366   */\n      dup3\n        /* \"#utility.yul\":5353:5371   */\n      add\n        /* \"#utility.yul\":5345:5371   */\n      swap1\n      pop\n        /* \"#utility.yul\":5381:5446   */\n      tag_392\n        /* \"#utility.yul\":5443:5444   */\n      0x00\n        /* \"#utility.yul\":5432:5441   */\n      dup4\n        /* \"#utility.yul\":5428:5445   */\n      add\n        /* \"#utility.yul\":5419:5425   */\n      dup5\n        /* \"#utility.yul\":5381:5446   */\n      tag_286\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":5243:5453   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5459:5577   */\n    tag_287:\n        /* \"#utility.yul\":5546:5570   */\n      tag_394\n        /* \"#utility.yul\":5564:5569   */\n      dup2\n        /* \"#utility.yul\":5546:5570   */\n      tag_282\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":5541:5544   */\n      dup3\n        /* \"#utility.yul\":5534:5571   */\n      mstore\n        /* \"#utility.yul\":5459:5577   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5583:5805   */\n    tag_41:\n        /* \"#utility.yul\":5676:5680   */\n      0x00\n        /* \"#utility.yul\":5714:5716   */\n      0x20\n        /* \"#utility.yul\":5703:5712   */\n      dup3\n        /* \"#utility.yul\":5699:5717   */\n      add\n        /* \"#utility.yul\":5691:5717   */\n      swap1\n      pop\n        /* \"#utility.yul\":5727:5798   */\n      tag_396\n        /* \"#utility.yul\":5795:5796   */\n      0x00\n        /* \"#utility.yul\":5784:5793   */\n      dup4\n        /* \"#utility.yul\":5780:5797   */\n      add\n        /* \"#utility.yul\":5771:5777   */\n      dup5\n        /* \"#utility.yul\":5727:5798   */\n      tag_287\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":5583:5805   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5811:6430   */\n    tag_44:\n        /* \"#utility.yul\":5888:5894   */\n      0x00\n        /* \"#utility.yul\":5896:5902   */\n      dup1\n        /* \"#utility.yul\":5904:5910   */\n      0x00\n        /* \"#utility.yul\":5953:5955   */\n      0x60\n        /* \"#utility.yul\":5941:5950   */\n      dup5\n        /* \"#utility.yul\":5932:5939   */\n      dup7\n        /* \"#utility.yul\":5928:5951   */\n      sub\n        /* \"#utility.yul\":5924:5956   */\n      slt\n        /* \"#utility.yul\":5921:6040   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":5959:6038   */\n      tag_399\n      tag_278\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":5921:6040   */\n    tag_398:\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6104:6157   */\n      tag_400\n        /* \"#utility.yul\":6149:6156   */\n      dup7\n        /* \"#utility.yul\":6140:6146   */\n      dup3\n        /* \"#utility.yul\":6129:6138   */\n      dup8\n        /* \"#utility.yul\":6125:6147   */\n      add\n        /* \"#utility.yul\":6104:6157   */\n      tag_281\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":6094:6157   */\n      swap4\n      pop\n        /* \"#utility.yul\":6050:6167   */\n      pop\n        /* \"#utility.yul\":6206:6208   */\n      0x20\n        /* \"#utility.yul\":6232:6285   */\n      tag_401\n        /* \"#utility.yul\":6277:6284   */\n      dup7\n        /* \"#utility.yul\":6268:6274   */\n      dup3\n        /* \"#utility.yul\":6257:6266   */\n      dup8\n        /* \"#utility.yul\":6253:6275   */\n      add\n        /* \"#utility.yul\":6232:6285   */\n      tag_281\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":6222:6285   */\n      swap3\n      pop\n        /* \"#utility.yul\":6177:6295   */\n      pop\n        /* \"#utility.yul\":6334:6336   */\n      0x40\n        /* \"#utility.yul\":6360:6413   */\n      tag_402\n        /* \"#utility.yul\":6405:6412   */\n      dup7\n        /* \"#utility.yul\":6396:6402   */\n      dup3\n        /* \"#utility.yul\":6385:6394   */\n      dup8\n        /* \"#utility.yul\":6381:6403   */\n      add\n        /* \"#utility.yul\":6360:6413   */\n      tag_284\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":6350:6413   */\n      swap2\n      pop\n        /* \"#utility.yul\":6305:6423   */\n      pop\n        /* \"#utility.yul\":5811:6430   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6436:6522   */\n    tag_288:\n        /* \"#utility.yul\":6471:6478   */\n      0x00\n        /* \"#utility.yul\":6511:6515   */\n      0xff\n        /* \"#utility.yul\":6504:6509   */\n      dup3\n        /* \"#utility.yul\":6500:6516   */\n      and\n        /* \"#utility.yul\":6489:6516   */\n      swap1\n      pop\n        /* \"#utility.yul\":6436:6522   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6528:6640   */\n    tag_289:\n        /* \"#utility.yul\":6611:6633   */\n      tag_405\n        /* \"#utility.yul\":6627:6632   */\n      dup2\n        /* \"#utility.yul\":6611:6633   */\n      tag_288\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":6606:6609   */\n      dup3\n        /* \"#utility.yul\":6599:6634   */\n      mstore\n        /* \"#utility.yul\":6528:6640   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6646:6860   */\n    tag_50:\n        /* \"#utility.yul\":6735:6739   */\n      0x00\n        /* \"#utility.yul\":6773:6775   */\n      0x20\n        /* \"#utility.yul\":6762:6771   */\n      dup3\n        /* \"#utility.yul\":6758:6776   */\n      add\n        /* \"#utility.yul\":6750:6776   */\n      swap1\n      pop\n        /* \"#utility.yul\":6786:6853   */\n      tag_407\n        /* \"#utility.yul\":6850:6851   */\n      0x00\n        /* \"#utility.yul\":6839:6848   */\n      dup4\n        /* \"#utility.yul\":6835:6852   */\n      add\n        /* \"#utility.yul\":6826:6832   */\n      dup5\n        /* \"#utility.yul\":6786:6853   */\n      tag_289\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":6646:6860   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6866:6983   */\n    tag_290:\n        /* \"#utility.yul\":6975:6976   */\n      0x00\n        /* \"#utility.yul\":6972:6973   */\n      dup1\n        /* \"#utility.yul\":6965:6977   */\n      revert\n        /* \"#utility.yul\":6989:7106   */\n    tag_291:\n        /* \"#utility.yul\":7098:7099   */\n      0x00\n        /* \"#utility.yul\":7095:7096   */\n      dup1\n        /* \"#utility.yul\":7088:7100   */\n      revert\n        /* \"#utility.yul\":7112:7292   */\n    tag_292:\n        /* \"#utility.yul\":7160:7237   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7157:7158   */\n      0x00\n        /* \"#utility.yul\":7150:7238   */\n      mstore\n        /* \"#utility.yul\":7257:7261   */\n      0x41\n        /* \"#utility.yul\":7254:7255   */\n      0x04\n        /* \"#utility.yul\":7247:7262   */\n      mstore\n        /* \"#utility.yul\":7281:7285   */\n      0x24\n        /* \"#utility.yul\":7278:7279   */\n      0x00\n        /* \"#utility.yul\":7271:7286   */\n      revert\n        /* \"#utility.yul\":7298:7579   */\n    tag_293:\n        /* \"#utility.yul\":7381:7408   */\n      tag_412\n        /* \"#utility.yul\":7403:7407   */\n      dup3\n        /* \"#utility.yul\":7381:7408   */\n      tag_275\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":7373:7379   */\n      dup2\n        /* \"#utility.yul\":7369:7409   */\n      add\n        /* \"#utility.yul\":7511:7517   */\n      dup2\n        /* \"#utility.yul\":7499:7509   */\n      dup2\n        /* \"#utility.yul\":7496:7518   */\n      lt\n        /* \"#utility.yul\":7475:7493   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7463:7473   */\n      dup3\n        /* \"#utility.yul\":7460:7494   */\n      gt\n        /* \"#utility.yul\":7457:7519   */\n      or\n        /* \"#utility.yul\":7454:7542   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":7522:7540   */\n      tag_414\n      tag_292\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":7454:7542   */\n    tag_413:\n        /* \"#utility.yul\":7562:7572   */\n      dup1\n        /* \"#utility.yul\":7558:7560   */\n      0x40\n        /* \"#utility.yul\":7551:7573   */\n      mstore\n        /* \"#utility.yul\":7341:7579   */\n      pop\n        /* \"#utility.yul\":7298:7579   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7585:7714   */\n    tag_294:\n        /* \"#utility.yul\":7619:7625   */\n      0x00\n        /* \"#utility.yul\":7646:7666   */\n      tag_416\n      tag_277\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":7636:7666   */\n      swap1\n      pop\n        /* \"#utility.yul\":7675:7708   */\n      tag_417\n        /* \"#utility.yul\":7703:7707   */\n      dup3\n        /* \"#utility.yul\":7695:7701   */\n      dup3\n        /* \"#utility.yul\":7675:7708   */\n      tag_293\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":7585:7714   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7720:8027   */\n    tag_295:\n        /* \"#utility.yul\":7781:7785   */\n      0x00\n        /* \"#utility.yul\":7871:7889   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7863:7869   */\n      dup3\n        /* \"#utility.yul\":7860:7890   */\n      gt\n        /* \"#utility.yul\":7857:7913   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":7893:7911   */\n      tag_420\n      tag_292\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":7857:7913   */\n    tag_419:\n        /* \"#utility.yul\":7931:7960   */\n      tag_421\n        /* \"#utility.yul\":7953:7959   */\n      dup3\n        /* \"#utility.yul\":7931:7960   */\n      tag_275\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":7923:7960   */\n      swap1\n      pop\n        /* \"#utility.yul\":8015:8019   */\n      0x20\n        /* \"#utility.yul\":8009:8013   */\n      dup2\n        /* \"#utility.yul\":8005:8020   */\n      add\n        /* \"#utility.yul\":7997:8020   */\n      swap1\n      pop\n        /* \"#utility.yul\":7720:8027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8033:8179   */\n    tag_296:\n        /* \"#utility.yul\":8130:8136   */\n      dup3\n        /* \"#utility.yul\":8125:8128   */\n      dup2\n        /* \"#utility.yul\":8120:8123   */\n      dup4\n        /* \"#utility.yul\":8107:8137   */\n      calldatacopy\n        /* \"#utility.yul\":8171:8172   */\n      0x00\n        /* \"#utility.yul\":8162:8168   */\n      dup4\n        /* \"#utility.yul\":8157:8160   */\n      dup4\n        /* \"#utility.yul\":8153:8169   */\n      add\n        /* \"#utility.yul\":8146:8173   */\n      mstore\n        /* \"#utility.yul\":8033:8179   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8185:8608   */\n    tag_297:\n        /* \"#utility.yul\":8262:8267   */\n      0x00\n        /* \"#utility.yul\":8287:8352   */\n      tag_424\n        /* \"#utility.yul\":8303:8351   */\n      tag_425\n        /* \"#utility.yul\":8344:8350   */\n      dup5\n        /* \"#utility.yul\":8303:8351   */\n      tag_295\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":8287:8352   */\n      tag_294\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":8278:8352   */\n      swap1\n      pop\n        /* \"#utility.yul\":8375:8381   */\n      dup3\n        /* \"#utility.yul\":8368:8373   */\n      dup2\n        /* \"#utility.yul\":8361:8382   */\n      mstore\n        /* \"#utility.yul\":8413:8417   */\n      0x20\n        /* \"#utility.yul\":8406:8411   */\n      dup2\n        /* \"#utility.yul\":8402:8418   */\n      add\n        /* \"#utility.yul\":8451:8454   */\n      dup5\n        /* \"#utility.yul\":8442:8448   */\n      dup5\n        /* \"#utility.yul\":8437:8440   */\n      dup5\n        /* \"#utility.yul\":8433:8449   */\n      add\n        /* \"#utility.yul\":8430:8455   */\n      gt\n        /* \"#utility.yul\":8427:8539   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":8458:8537   */\n      tag_427\n      tag_291\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":8427:8539   */\n    tag_426:\n        /* \"#utility.yul\":8548:8602   */\n      tag_428\n        /* \"#utility.yul\":8595:8601   */\n      dup5\n        /* \"#utility.yul\":8590:8593   */\n      dup3\n        /* \"#utility.yul\":8585:8588   */\n      dup6\n        /* \"#utility.yul\":8548:8602   */\n      tag_296\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":8268:8608   */\n      pop\n        /* \"#utility.yul\":8185:8608   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8627:8965   */\n    tag_298:\n        /* \"#utility.yul\":8682:8687   */\n      0x00\n        /* \"#utility.yul\":8731:8734   */\n      dup3\n        /* \"#utility.yul\":8724:8728   */\n      0x1f\n        /* \"#utility.yul\":8716:8722   */\n      dup4\n        /* \"#utility.yul\":8712:8729   */\n      add\n        /* \"#utility.yul\":8708:8735   */\n      slt\n        /* \"#utility.yul\":8698:8820   */\n      tag_430\n      jumpi\n        /* \"#utility.yul\":8739:8818   */\n      tag_431\n      tag_290\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":8698:8820   */\n    tag_430:\n        /* \"#utility.yul\":8856:8862   */\n      dup2\n        /* \"#utility.yul\":8843:8863   */\n      calldataload\n        /* \"#utility.yul\":8881:8959   */\n      tag_432\n        /* \"#utility.yul\":8955:8958   */\n      dup5\n        /* \"#utility.yul\":8947:8953   */\n      dup3\n        /* \"#utility.yul\":8940:8944   */\n      0x20\n        /* \"#utility.yul\":8932:8938   */\n      dup7\n        /* \"#utility.yul\":8928:8945   */\n      add\n        /* \"#utility.yul\":8881:8959   */\n      tag_297\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":8872:8959   */\n      swap2\n      pop\n        /* \"#utility.yul\":8688:8965   */\n      pop\n        /* \"#utility.yul\":8627:8965   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8971:10238   */\n    tag_56:\n        /* \"#utility.yul\":9084:9090   */\n      0x00\n        /* \"#utility.yul\":9092:9098   */\n      dup1\n        /* \"#utility.yul\":9100:9106   */\n      0x00\n        /* \"#utility.yul\":9108:9114   */\n      dup1\n        /* \"#utility.yul\":9116:9122   */\n      0x00\n        /* \"#utility.yul\":9165:9168   */\n      0xa0\n        /* \"#utility.yul\":9153:9162   */\n      dup7\n        /* \"#utility.yul\":9144:9151   */\n      dup9\n        /* \"#utility.yul\":9140:9163   */\n      sub\n        /* \"#utility.yul\":9136:9169   */\n      slt\n        /* \"#utility.yul\":9133:9253   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":9172:9251   */\n      tag_435\n      tag_278\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":9133:9253   */\n    tag_434:\n        /* \"#utility.yul\":9292:9293   */\n      0x00\n        /* \"#utility.yul\":9317:9370   */\n      tag_436\n        /* \"#utility.yul\":9362:9369   */\n      dup9\n        /* \"#utility.yul\":9353:9359   */\n      dup3\n        /* \"#utility.yul\":9342:9351   */\n      dup10\n        /* \"#utility.yul\":9338:9360   */\n      add\n        /* \"#utility.yul\":9317:9370   */\n      tag_281\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":9307:9370   */\n      swap6\n      pop\n        /* \"#utility.yul\":9263:9380   */\n      pop\n        /* \"#utility.yul\":9419:9421   */\n      0x20\n        /* \"#utility.yul\":9445:9498   */\n      tag_437\n        /* \"#utility.yul\":9490:9497   */\n      dup9\n        /* \"#utility.yul\":9481:9487   */\n      dup3\n        /* \"#utility.yul\":9470:9479   */\n      dup10\n        /* \"#utility.yul\":9466:9488   */\n      add\n        /* \"#utility.yul\":9445:9498   */\n      tag_281\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":9435:9498   */\n      swap5\n      pop\n        /* \"#utility.yul\":9390:9508   */\n      pop\n        /* \"#utility.yul\":9547:9549   */\n      0x40\n        /* \"#utility.yul\":9573:9626   */\n      tag_438\n        /* \"#utility.yul\":9618:9625   */\n      dup9\n        /* \"#utility.yul\":9609:9615   */\n      dup3\n        /* \"#utility.yul\":9598:9607   */\n      dup10\n        /* \"#utility.yul\":9594:9616   */\n      add\n        /* \"#utility.yul\":9573:9626   */\n      tag_284\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":9563:9626   */\n      swap4\n      pop\n        /* \"#utility.yul\":9518:9636   */\n      pop\n        /* \"#utility.yul\":9703:9705   */\n      0x60\n        /* \"#utility.yul\":9692:9701   */\n      dup7\n        /* \"#utility.yul\":9688:9706   */\n      add\n        /* \"#utility.yul\":9675:9707   */\n      calldataload\n        /* \"#utility.yul\":9734:9752   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9726:9732   */\n      dup2\n        /* \"#utility.yul\":9723:9753   */\n      gt\n        /* \"#utility.yul\":9720:9837   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":9756:9835   */\n      tag_440\n      tag_279\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":9720:9837   */\n    tag_439:\n        /* \"#utility.yul\":9861:9923   */\n      tag_441\n        /* \"#utility.yul\":9915:9922   */\n      dup9\n        /* \"#utility.yul\":9906:9912   */\n      dup3\n        /* \"#utility.yul\":9895:9904   */\n      dup10\n        /* \"#utility.yul\":9891:9913   */\n      add\n        /* \"#utility.yul\":9861:9923   */\n      tag_298\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":9851:9923   */\n      swap3\n      pop\n        /* \"#utility.yul\":9646:9933   */\n      pop\n        /* \"#utility.yul\":10000:10003   */\n      0x80\n        /* \"#utility.yul\":9989:9998   */\n      dup7\n        /* \"#utility.yul\":9985:10004   */\n      add\n        /* \"#utility.yul\":9972:10005   */\n      calldataload\n        /* \"#utility.yul\":10032:10050   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10024:10030   */\n      dup2\n        /* \"#utility.yul\":10021:10051   */\n      gt\n        /* \"#utility.yul\":10018:10135   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":10054:10133   */\n      tag_443\n      tag_279\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":10018:10135   */\n    tag_442:\n        /* \"#utility.yul\":10159:10221   */\n      tag_444\n        /* \"#utility.yul\":10213:10220   */\n      dup9\n        /* \"#utility.yul\":10204:10210   */\n      dup3\n        /* \"#utility.yul\":10193:10202   */\n      dup10\n        /* \"#utility.yul\":10189:10211   */\n      add\n        /* \"#utility.yul\":10159:10221   */\n      tag_298\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":10149:10221   */\n      swap2\n      pop\n        /* \"#utility.yul\":9943:10231   */\n      pop\n        /* \"#utility.yul\":8971:10238   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10244:10573   */\n    tag_60:\n        /* \"#utility.yul\":10303:10309   */\n      0x00\n        /* \"#utility.yul\":10352:10354   */\n      0x20\n        /* \"#utility.yul\":10340:10349   */\n      dup3\n        /* \"#utility.yul\":10331:10338   */\n      dup5\n        /* \"#utility.yul\":10327:10350   */\n      sub\n        /* \"#utility.yul\":10323:10355   */\n      slt\n        /* \"#utility.yul\":10320:10439   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":10358:10437   */\n      tag_447\n      tag_278\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":10320:10439   */\n    tag_446:\n        /* \"#utility.yul\":10478:10479   */\n      0x00\n        /* \"#utility.yul\":10503:10556   */\n      tag_448\n        /* \"#utility.yul\":10548:10555   */\n      dup5\n        /* \"#utility.yul\":10539:10545   */\n      dup3\n        /* \"#utility.yul\":10528:10537   */\n      dup6\n        /* \"#utility.yul\":10524:10546   */\n      add\n        /* \"#utility.yul\":10503:10556   */\n      tag_281\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":10493:10556   */\n      swap2\n      pop\n        /* \"#utility.yul\":10449:10566   */\n      pop\n        /* \"#utility.yul\":10244:10573   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10579:11376   */\n    tag_71:\n        /* \"#utility.yul\":10665:10671   */\n      0x00\n        /* \"#utility.yul\":10673:10679   */\n      dup1\n        /* \"#utility.yul\":10681:10687   */\n      0x00\n        /* \"#utility.yul\":10730:10732   */\n      0x60\n        /* \"#utility.yul\":10718:10727   */\n      dup5\n        /* \"#utility.yul\":10709:10716   */\n      dup7\n        /* \"#utility.yul\":10705:10728   */\n      sub\n        /* \"#utility.yul\":10701:10733   */\n      slt\n        /* \"#utility.yul\":10698:10817   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":10736:10815   */\n      tag_451\n      tag_278\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":10698:10817   */\n    tag_450:\n        /* \"#utility.yul\":10856:10857   */\n      0x00\n        /* \"#utility.yul\":10881:10934   */\n      tag_452\n        /* \"#utility.yul\":10926:10933   */\n      dup7\n        /* \"#utility.yul\":10917:10923   */\n      dup3\n        /* \"#utility.yul\":10906:10915   */\n      dup8\n        /* \"#utility.yul\":10902:10924   */\n      add\n        /* \"#utility.yul\":10881:10934   */\n      tag_281\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":10871:10934   */\n      swap4\n      pop\n        /* \"#utility.yul\":10827:10944   */\n      pop\n        /* \"#utility.yul\":10983:10985   */\n      0x20\n        /* \"#utility.yul\":11009:11062   */\n      tag_453\n        /* \"#utility.yul\":11054:11061   */\n      dup7\n        /* \"#utility.yul\":11045:11051   */\n      dup3\n        /* \"#utility.yul\":11034:11043   */\n      dup8\n        /* \"#utility.yul\":11030:11052   */\n      add\n        /* \"#utility.yul\":11009:11062   */\n      tag_284\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":10999:11062   */\n      swap3\n      pop\n        /* \"#utility.yul\":10954:11072   */\n      pop\n        /* \"#utility.yul\":11139:11141   */\n      0x40\n        /* \"#utility.yul\":11128:11137   */\n      dup5\n        /* \"#utility.yul\":11124:11142   */\n      add\n        /* \"#utility.yul\":11111:11143   */\n      calldataload\n        /* \"#utility.yul\":11170:11188   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11162:11168   */\n      dup2\n        /* \"#utility.yul\":11159:11189   */\n      gt\n        /* \"#utility.yul\":11156:11273   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":11192:11271   */\n      tag_455\n      tag_279\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":11156:11273   */\n    tag_454:\n        /* \"#utility.yul\":11297:11359   */\n      tag_456\n        /* \"#utility.yul\":11351:11358   */\n      dup7\n        /* \"#utility.yul\":11342:11348   */\n      dup3\n        /* \"#utility.yul\":11331:11340   */\n      dup8\n        /* \"#utility.yul\":11327:11349   */\n      add\n        /* \"#utility.yul\":11297:11359   */\n      tag_298\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":11287:11359   */\n      swap2\n      pop\n        /* \"#utility.yul\":11082:11369   */\n      pop\n        /* \"#utility.yul\":10579:11376   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":11382:11856   */\n    tag_79:\n        /* \"#utility.yul\":11450:11456   */\n      0x00\n        /* \"#utility.yul\":11458:11464   */\n      dup1\n        /* \"#utility.yul\":11507:11509   */\n      0x40\n        /* \"#utility.yul\":11495:11504   */\n      dup4\n        /* \"#utility.yul\":11486:11493   */\n      dup6\n        /* \"#utility.yul\":11482:11505   */\n      sub\n        /* \"#utility.yul\":11478:11510   */\n      slt\n        /* \"#utility.yul\":11475:11594   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":11513:11592   */\n      tag_459\n      tag_278\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":11475:11594   */\n    tag_458:\n        /* \"#utility.yul\":11633:11634   */\n      0x00\n        /* \"#utility.yul\":11658:11711   */\n      tag_460\n        /* \"#utility.yul\":11703:11710   */\n      dup6\n        /* \"#utility.yul\":11694:11700   */\n      dup3\n        /* \"#utility.yul\":11683:11692   */\n      dup7\n        /* \"#utility.yul\":11679:11701   */\n      add\n        /* \"#utility.yul\":11658:11711   */\n      tag_281\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":11648:11711   */\n      swap3\n      pop\n        /* \"#utility.yul\":11604:11721   */\n      pop\n        /* \"#utility.yul\":11760:11762   */\n      0x20\n        /* \"#utility.yul\":11786:11839   */\n      tag_461\n        /* \"#utility.yul\":11831:11838   */\n      dup6\n        /* \"#utility.yul\":11822:11828   */\n      dup3\n        /* \"#utility.yul\":11811:11820   */\n      dup7\n        /* \"#utility.yul\":11807:11829   */\n      add\n        /* \"#utility.yul\":11786:11839   */\n      tag_281\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":11776:11839   */\n      swap2\n      pop\n        /* \"#utility.yul\":11731:11849   */\n      pop\n        /* \"#utility.yul\":11382:11856   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11862:12983   */\n    tag_91:\n        /* \"#utility.yul\":11966:11972   */\n      0x00\n        /* \"#utility.yul\":11974:11980   */\n      dup1\n        /* \"#utility.yul\":11982:11988   */\n      0x00\n        /* \"#utility.yul\":11990:11996   */\n      dup1\n        /* \"#utility.yul\":12039:12042   */\n      0x80\n        /* \"#utility.yul\":12027:12036   */\n      dup6\n        /* \"#utility.yul\":12018:12025   */\n      dup8\n        /* \"#utility.yul\":12014:12037   */\n      sub\n        /* \"#utility.yul\":12010:12043   */\n      slt\n        /* \"#utility.yul\":12007:12127   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":12046:12125   */\n      tag_464\n      tag_278\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":12007:12127   */\n    tag_463:\n        /* \"#utility.yul\":12166:12167   */\n      0x00\n        /* \"#utility.yul\":12191:12244   */\n      tag_465\n        /* \"#utility.yul\":12236:12243   */\n      dup8\n        /* \"#utility.yul\":12227:12233   */\n      dup3\n        /* \"#utility.yul\":12216:12225   */\n      dup9\n        /* \"#utility.yul\":12212:12234   */\n      add\n        /* \"#utility.yul\":12191:12244   */\n      tag_281\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":12181:12244   */\n      swap5\n      pop\n        /* \"#utility.yul\":12137:12254   */\n      pop\n        /* \"#utility.yul\":12293:12295   */\n      0x20\n        /* \"#utility.yul\":12319:12372   */\n      tag_466\n        /* \"#utility.yul\":12364:12371   */\n      dup8\n        /* \"#utility.yul\":12355:12361   */\n      dup3\n        /* \"#utility.yul\":12344:12353   */\n      dup9\n        /* \"#utility.yul\":12340:12362   */\n      add\n        /* \"#utility.yul\":12319:12372   */\n      tag_284\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":12309:12372   */\n      swap4\n      pop\n        /* \"#utility.yul\":12264:12382   */\n      pop\n        /* \"#utility.yul\":12449:12451   */\n      0x40\n        /* \"#utility.yul\":12438:12447   */\n      dup6\n        /* \"#utility.yul\":12434:12452   */\n      add\n        /* \"#utility.yul\":12421:12453   */\n      calldataload\n        /* \"#utility.yul\":12480:12498   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12472:12478   */\n      dup2\n        /* \"#utility.yul\":12469:12499   */\n      gt\n        /* \"#utility.yul\":12466:12583   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":12502:12581   */\n      tag_468\n      tag_279\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":12466:12583   */\n    tag_467:\n        /* \"#utility.yul\":12607:12669   */\n      tag_469\n        /* \"#utility.yul\":12661:12668   */\n      dup8\n        /* \"#utility.yul\":12652:12658   */\n      dup3\n        /* \"#utility.yul\":12641:12650   */\n      dup9\n        /* \"#utility.yul\":12637:12659   */\n      add\n        /* \"#utility.yul\":12607:12669   */\n      tag_298\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":12597:12669   */\n      swap3\n      pop\n        /* \"#utility.yul\":12392:12679   */\n      pop\n        /* \"#utility.yul\":12746:12748   */\n      0x60\n        /* \"#utility.yul\":12735:12744   */\n      dup6\n        /* \"#utility.yul\":12731:12749   */\n      add\n        /* \"#utility.yul\":12718:12750   */\n      calldataload\n        /* \"#utility.yul\":12777:12795   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12769:12775   */\n      dup2\n        /* \"#utility.yul\":12766:12796   */\n      gt\n        /* \"#utility.yul\":12763:12880   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":12799:12878   */\n      tag_471\n      tag_279\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":12763:12880   */\n    tag_470:\n        /* \"#utility.yul\":12904:12966   */\n      tag_472\n        /* \"#utility.yul\":12958:12965   */\n      dup8\n        /* \"#utility.yul\":12949:12955   */\n      dup3\n        /* \"#utility.yul\":12938:12947   */\n      dup9\n        /* \"#utility.yul\":12934:12956   */\n      add\n        /* \"#utility.yul\":12904:12966   */\n      tag_298\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":12894:12966   */\n      swap2\n      pop\n        /* \"#utility.yul\":12689:12976   */\n      pop\n        /* \"#utility.yul\":11862:12983   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12989:13641   */\n    tag_95:\n        /* \"#utility.yul\":13066:13072   */\n      0x00\n        /* \"#utility.yul\":13074:13080   */\n      dup1\n        /* \"#utility.yul\":13123:13125   */\n      0x40\n        /* \"#utility.yul\":13111:13120   */\n      dup4\n        /* \"#utility.yul\":13102:13109   */\n      dup6\n        /* \"#utility.yul\":13098:13121   */\n      sub\n        /* \"#utility.yul\":13094:13126   */\n      slt\n        /* \"#utility.yul\":13091:13210   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":13129:13208   */\n      tag_475\n      tag_278\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":13091:13210   */\n    tag_474:\n        /* \"#utility.yul\":13249:13250   */\n      0x00\n        /* \"#utility.yul\":13274:13327   */\n      tag_476\n        /* \"#utility.yul\":13319:13326   */\n      dup6\n        /* \"#utility.yul\":13310:13316   */\n      dup3\n        /* \"#utility.yul\":13299:13308   */\n      dup7\n        /* \"#utility.yul\":13295:13317   */\n      add\n        /* \"#utility.yul\":13274:13327   */\n      tag_284\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":13264:13327   */\n      swap3\n      pop\n        /* \"#utility.yul\":13220:13337   */\n      pop\n        /* \"#utility.yul\":13404:13406   */\n      0x20\n        /* \"#utility.yul\":13393:13402   */\n      dup4\n        /* \"#utility.yul\":13389:13407   */\n      add\n        /* \"#utility.yul\":13376:13408   */\n      calldataload\n        /* \"#utility.yul\":13435:13453   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13427:13433   */\n      dup2\n        /* \"#utility.yul\":13424:13454   */\n      gt\n        /* \"#utility.yul\":13421:13538   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":13457:13536   */\n      tag_478\n      tag_279\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":13421:13538   */\n    tag_477:\n        /* \"#utility.yul\":13562:13624   */\n      tag_479\n        /* \"#utility.yul\":13616:13623   */\n      dup6\n        /* \"#utility.yul\":13607:13613   */\n      dup3\n        /* \"#utility.yul\":13596:13605   */\n      dup7\n        /* \"#utility.yul\":13592:13614   */\n      add\n        /* \"#utility.yul\":13562:13624   */\n      tag_298\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":13552:13624   */\n      swap2\n      pop\n        /* \"#utility.yul\":13347:13634   */\n      pop\n        /* \"#utility.yul\":12989:13641   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13647:13827   */\n    tag_299:\n        /* \"#utility.yul\":13695:13772   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13692:13693   */\n      0x00\n        /* \"#utility.yul\":13685:13773   */\n      mstore\n        /* \"#utility.yul\":13792:13796   */\n      0x22\n        /* \"#utility.yul\":13789:13790   */\n      0x04\n        /* \"#utility.yul\":13782:13797   */\n      mstore\n        /* \"#utility.yul\":13816:13820   */\n      0x24\n        /* \"#utility.yul\":13813:13814   */\n      0x00\n        /* \"#utility.yul\":13806:13821   */\n      revert\n        /* \"#utility.yul\":13833:14153   */\n    tag_102:\n        /* \"#utility.yul\":13877:13883   */\n      0x00\n        /* \"#utility.yul\":13914:13915   */\n      0x02\n        /* \"#utility.yul\":13908:13912   */\n      dup3\n        /* \"#utility.yul\":13904:13916   */\n      div\n        /* \"#utility.yul\":13894:13916   */\n      swap1\n      pop\n        /* \"#utility.yul\":13961:13962   */\n      0x01\n        /* \"#utility.yul\":13955:13959   */\n      dup3\n        /* \"#utility.yul\":13951:13963   */\n      and\n        /* \"#utility.yul\":13982:14000   */\n      dup1\n        /* \"#utility.yul\":13972:14053   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":14038:14042   */\n      0x7f\n        /* \"#utility.yul\":14030:14036   */\n      dup3\n        /* \"#utility.yul\":14026:14043   */\n      and\n        /* \"#utility.yul\":14016:14043   */\n      swap2\n      pop\n        /* \"#utility.yul\":13972:14053   */\n    tag_482:\n        /* \"#utility.yul\":14100:14102   */\n      0x20\n        /* \"#utility.yul\":14092:14098   */\n      dup3\n        /* \"#utility.yul\":14089:14103   */\n      lt\n        /* \"#utility.yul\":14069:14087   */\n      dup2\n        /* \"#utility.yul\":14066:14104   */\n      sub\n        /* \"#utility.yul\":14063:14147   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":14119:14137   */\n      tag_484\n      tag_299\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":14063:14147   */\n    tag_483:\n        /* \"#utility.yul\":13884:14153   */\n      pop\n        /* \"#utility.yul\":13833:14153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14159:14390   */\n    tag_300:\n        /* \"#utility.yul\":14299:14333   */\n      0x4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f\n        /* \"#utility.yul\":14295:14296   */\n      0x00\n        /* \"#utility.yul\":14287:14293   */\n      dup3\n        /* \"#utility.yul\":14283:14297   */\n      add\n        /* \"#utility.yul\":14276:14334   */\n      mstore\n        /* \"#utility.yul\":14368:14382   */\n      0x7220666f7220686f6c6465720000000000000000000000000000000000000000\n        /* \"#utility.yul\":14363:14365   */\n      0x20\n        /* \"#utility.yul\":14355:14361   */\n      dup3\n        /* \"#utility.yul\":14351:14366   */\n      add\n        /* \"#utility.yul\":14344:14383   */\n      mstore\n        /* \"#utility.yul\":14159:14390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14396:14762   */\n    tag_301:\n        /* \"#utility.yul\":14538:14541   */\n      0x00\n        /* \"#utility.yul\":14559:14626   */\n      tag_487\n        /* \"#utility.yul\":14623:14625   */\n      0x2c\n        /* \"#utility.yul\":14618:14621   */\n      dup4\n        /* \"#utility.yul\":14559:14626   */\n      tag_273\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":14552:14626   */\n      swap2\n      pop\n        /* \"#utility.yul\":14635:14728   */\n      tag_488\n        /* \"#utility.yul\":14724:14727   */\n      dup3\n        /* \"#utility.yul\":14635:14728   */\n      tag_300\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":14753:14755   */\n      0x40\n        /* \"#utility.yul\":14748:14751   */\n      dup3\n        /* \"#utility.yul\":14744:14756   */\n      add\n        /* \"#utility.yul\":14737:14756   */\n      swap1\n      pop\n        /* \"#utility.yul\":14396:14762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14768:15187   */\n    tag_126:\n        /* \"#utility.yul\":14934:14938   */\n      0x00\n        /* \"#utility.yul\":14972:14974   */\n      0x20\n        /* \"#utility.yul\":14961:14970   */\n      dup3\n        /* \"#utility.yul\":14957:14975   */\n      add\n        /* \"#utility.yul\":14949:14975   */\n      swap1\n      pop\n        /* \"#utility.yul\":15021:15030   */\n      dup2\n        /* \"#utility.yul\":15015:15019   */\n      dup2\n        /* \"#utility.yul\":15011:15031   */\n      sub\n        /* \"#utility.yul\":15007:15008   */\n      0x00\n        /* \"#utility.yul\":14996:15005   */\n      dup4\n        /* \"#utility.yul\":14992:15009   */\n      add\n        /* \"#utility.yul\":14985:15032   */\n      mstore\n        /* \"#utility.yul\":15049:15180   */\n      tag_490\n        /* \"#utility.yul\":15175:15179   */\n      dup2\n        /* \"#utility.yul\":15049:15180   */\n      tag_301\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":15041:15180   */\n      swap1\n      pop\n        /* \"#utility.yul\":14768:15187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15193:15416   */\n    tag_302:\n        /* \"#utility.yul\":15333:15367   */\n      0x4552433737373a20617574686f72697a696e672073656c66206173206f706572\n        /* \"#utility.yul\":15329:15330   */\n      0x00\n        /* \"#utility.yul\":15321:15327   */\n      dup3\n        /* \"#utility.yul\":15317:15331   */\n      add\n        /* \"#utility.yul\":15310:15368   */\n      mstore\n        /* \"#utility.yul\":15402:15408   */\n      0x61746f7200000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15397:15399   */\n      0x20\n        /* \"#utility.yul\":15389:15395   */\n      dup3\n        /* \"#utility.yul\":15385:15400   */\n      add\n        /* \"#utility.yul\":15378:15409   */\n      mstore\n        /* \"#utility.yul\":15193:15416   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15422:15788   */\n    tag_303:\n        /* \"#utility.yul\":15564:15567   */\n      0x00\n        /* \"#utility.yul\":15585:15652   */\n      tag_493\n        /* \"#utility.yul\":15649:15651   */\n      0x24\n        /* \"#utility.yul\":15644:15647   */\n      dup4\n        /* \"#utility.yul\":15585:15652   */\n      tag_273\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":15578:15652   */\n      swap2\n      pop\n        /* \"#utility.yul\":15661:15754   */\n      tag_494\n        /* \"#utility.yul\":15750:15753   */\n      dup3\n        /* \"#utility.yul\":15661:15754   */\n      tag_302\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":15779:15781   */\n      0x40\n        /* \"#utility.yul\":15774:15777   */\n      dup3\n        /* \"#utility.yul\":15770:15782   */\n      add\n        /* \"#utility.yul\":15763:15782   */\n      swap1\n      pop\n        /* \"#utility.yul\":15422:15788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15794:16213   */\n    tag_133:\n        /* \"#utility.yul\":15960:15964   */\n      0x00\n        /* \"#utility.yul\":15998:16000   */\n      0x20\n        /* \"#utility.yul\":15987:15996   */\n      dup3\n        /* \"#utility.yul\":15983:16001   */\n      add\n        /* \"#utility.yul\":15975:16001   */\n      swap1\n      pop\n        /* \"#utility.yul\":16047:16056   */\n      dup2\n        /* \"#utility.yul\":16041:16045   */\n      dup2\n        /* \"#utility.yul\":16037:16057   */\n      sub\n        /* \"#utility.yul\":16033:16034   */\n      0x00\n        /* \"#utility.yul\":16022:16031   */\n      dup4\n        /* \"#utility.yul\":16018:16035   */\n      add\n        /* \"#utility.yul\":16011:16058   */\n      mstore\n        /* \"#utility.yul\":16075:16206   */\n      tag_496\n        /* \"#utility.yul\":16201:16205   */\n      dup2\n        /* \"#utility.yul\":16075:16206   */\n      tag_303\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":16067:16206   */\n      swap1\n      pop\n        /* \"#utility.yul\":15794:16213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16219:16439   */\n    tag_304:\n        /* \"#utility.yul\":16359:16393   */\n      0x4552433737373a207265766f6b696e672073656c66206173206f70657261746f\n        /* \"#utility.yul\":16355:16356   */\n      0x00\n        /* \"#utility.yul\":16347:16353   */\n      dup3\n        /* \"#utility.yul\":16343:16357   */\n      add\n        /* \"#utility.yul\":16336:16394   */\n      mstore\n        /* \"#utility.yul\":16428:16431   */\n      0x7200000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16423:16425   */\n      0x20\n        /* \"#utility.yul\":16415:16421   */\n      dup3\n        /* \"#utility.yul\":16411:16426   */\n      add\n        /* \"#utility.yul\":16404:16432   */\n      mstore\n        /* \"#utility.yul\":16219:16439   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16445:16811   */\n    tag_305:\n        /* \"#utility.yul\":16587:16590   */\n      0x00\n        /* \"#utility.yul\":16608:16675   */\n      tag_499\n        /* \"#utility.yul\":16672:16674   */\n      0x21\n        /* \"#utility.yul\":16667:16670   */\n      dup4\n        /* \"#utility.yul\":16608:16675   */\n      tag_273\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":16601:16675   */\n      swap2\n      pop\n        /* \"#utility.yul\":16684:16777   */\n      tag_500\n        /* \"#utility.yul\":16773:16776   */\n      dup3\n        /* \"#utility.yul\":16684:16777   */\n      tag_304\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":16802:16804   */\n      0x40\n        /* \"#utility.yul\":16797:16800   */\n      dup3\n        /* \"#utility.yul\":16793:16805   */\n      add\n        /* \"#utility.yul\":16786:16805   */\n      swap1\n      pop\n        /* \"#utility.yul\":16445:16811   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16817:17236   */\n    tag_160:\n        /* \"#utility.yul\":16983:16987   */\n      0x00\n        /* \"#utility.yul\":17021:17023   */\n      0x20\n        /* \"#utility.yul\":17010:17019   */\n      dup3\n        /* \"#utility.yul\":17006:17024   */\n      add\n        /* \"#utility.yul\":16998:17024   */\n      swap1\n      pop\n        /* \"#utility.yul\":17070:17079   */\n      dup2\n        /* \"#utility.yul\":17064:17068   */\n      dup2\n        /* \"#utility.yul\":17060:17080   */\n      sub\n        /* \"#utility.yul\":17056:17057   */\n      0x00\n        /* \"#utility.yul\":17045:17054   */\n      dup4\n        /* \"#utility.yul\":17041:17058   */\n      add\n        /* \"#utility.yul\":17034:17081   */\n      mstore\n        /* \"#utility.yul\":17098:17229   */\n      tag_502\n        /* \"#utility.yul\":17224:17228   */\n      dup2\n        /* \"#utility.yul\":17098:17229   */\n      tag_305\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":17090:17229   */\n      swap1\n      pop\n        /* \"#utility.yul\":16817:17236   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17242:17466   */\n    tag_306:\n        /* \"#utility.yul\":17382:17416   */\n      0x4552433737373a20617070726f76652066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":17378:17379   */\n      0x00\n        /* \"#utility.yul\":17370:17376   */\n      dup3\n        /* \"#utility.yul\":17366:17380   */\n      add\n        /* \"#utility.yul\":17359:17417   */\n      mstore\n        /* \"#utility.yul\":17451:17458   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17446:17448   */\n      0x20\n        /* \"#utility.yul\":17438:17444   */\n      dup3\n        /* \"#utility.yul\":17434:17449   */\n      add\n        /* \"#utility.yul\":17427:17459   */\n      mstore\n        /* \"#utility.yul\":17242:17466   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17472:17838   */\n    tag_307:\n        /* \"#utility.yul\":17614:17617   */\n      0x00\n        /* \"#utility.yul\":17635:17702   */\n      tag_505\n        /* \"#utility.yul\":17699:17701   */\n      0x25\n        /* \"#utility.yul\":17694:17697   */\n      dup4\n        /* \"#utility.yul\":17635:17702   */\n      tag_273\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":17628:17702   */\n      swap2\n      pop\n        /* \"#utility.yul\":17711:17804   */\n      tag_506\n        /* \"#utility.yul\":17800:17803   */\n      dup3\n        /* \"#utility.yul\":17711:17804   */\n      tag_306\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":17829:17831   */\n      0x40\n        /* \"#utility.yul\":17824:17827   */\n      dup3\n        /* \"#utility.yul\":17820:17832   */\n      add\n        /* \"#utility.yul\":17813:17832   */\n      swap1\n      pop\n        /* \"#utility.yul\":17472:17838   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17844:18263   */\n    tag_180:\n        /* \"#utility.yul\":18010:18014   */\n      0x00\n        /* \"#utility.yul\":18048:18050   */\n      0x20\n        /* \"#utility.yul\":18037:18046   */\n      dup3\n        /* \"#utility.yul\":18033:18051   */\n      add\n        /* \"#utility.yul\":18025:18051   */\n      swap1\n      pop\n        /* \"#utility.yul\":18097:18106   */\n      dup2\n        /* \"#utility.yul\":18091:18095   */\n      dup2\n        /* \"#utility.yul\":18087:18107   */\n      sub\n        /* \"#utility.yul\":18083:18084   */\n      0x00\n        /* \"#utility.yul\":18072:18081   */\n      dup4\n        /* \"#utility.yul\":18068:18085   */\n      add\n        /* \"#utility.yul\":18061:18108   */\n      mstore\n        /* \"#utility.yul\":18125:18256   */\n      tag_508\n        /* \"#utility.yul\":18251:18255   */\n      dup2\n        /* \"#utility.yul\":18125:18256   */\n      tag_307\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":18117:18256   */\n      swap1\n      pop\n        /* \"#utility.yul\":17844:18263   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18269:18491   */\n    tag_308:\n        /* \"#utility.yul\":18409:18443   */\n      0x4552433737373a20617070726f766520746f20746865207a65726f2061646472\n        /* \"#utility.yul\":18405:18406   */\n      0x00\n        /* \"#utility.yul\":18397:18403   */\n      dup3\n        /* \"#utility.yul\":18393:18407   */\n      add\n        /* \"#utility.yul\":18386:18444   */\n      mstore\n        /* \"#utility.yul\":18478:18483   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18473:18475   */\n      0x20\n        /* \"#utility.yul\":18465:18471   */\n      dup3\n        /* \"#utility.yul\":18461:18476   */\n      add\n        /* \"#utility.yul\":18454:18484   */\n      mstore\n        /* \"#utility.yul\":18269:18491   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18497:18863   */\n    tag_309:\n        /* \"#utility.yul\":18639:18642   */\n      0x00\n        /* \"#utility.yul\":18660:18727   */\n      tag_511\n        /* \"#utility.yul\":18724:18726   */\n      0x23\n        /* \"#utility.yul\":18719:18722   */\n      dup4\n        /* \"#utility.yul\":18660:18727   */\n      tag_273\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":18653:18727   */\n      swap2\n      pop\n        /* \"#utility.yul\":18736:18829   */\n      tag_512\n        /* \"#utility.yul\":18825:18828   */\n      dup3\n        /* \"#utility.yul\":18736:18829   */\n      tag_308\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":18854:18856   */\n      0x40\n        /* \"#utility.yul\":18849:18852   */\n      dup3\n        /* \"#utility.yul\":18845:18857   */\n      add\n        /* \"#utility.yul\":18838:18857   */\n      swap1\n      pop\n        /* \"#utility.yul\":18497:18863   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18869:19288   */\n    tag_183:\n        /* \"#utility.yul\":19035:19039   */\n      0x00\n        /* \"#utility.yul\":19073:19075   */\n      0x20\n        /* \"#utility.yul\":19062:19071   */\n      dup3\n        /* \"#utility.yul\":19058:19076   */\n      add\n        /* \"#utility.yul\":19050:19076   */\n      swap1\n      pop\n        /* \"#utility.yul\":19122:19131   */\n      dup2\n        /* \"#utility.yul\":19116:19120   */\n      dup2\n        /* \"#utility.yul\":19112:19132   */\n      sub\n        /* \"#utility.yul\":19108:19109   */\n      0x00\n        /* \"#utility.yul\":19097:19106   */\n      dup4\n        /* \"#utility.yul\":19093:19110   */\n      add\n        /* \"#utility.yul\":19086:19133   */\n      mstore\n        /* \"#utility.yul\":19150:19281   */\n      tag_514\n        /* \"#utility.yul\":19276:19280   */\n      dup2\n        /* \"#utility.yul\":19150:19281   */\n      tag_309\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":19142:19281   */\n      swap1\n      pop\n        /* \"#utility.yul\":18869:19288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19294:19474   */\n    tag_310:\n        /* \"#utility.yul\":19434:19466   */\n      0x4552433737373a20696e73756666696369656e7420616c6c6f77616e63650000\n        /* \"#utility.yul\":19430:19431   */\n      0x00\n        /* \"#utility.yul\":19422:19428   */\n      dup3\n        /* \"#utility.yul\":19418:19432   */\n      add\n        /* \"#utility.yul\":19411:19467   */\n      mstore\n        /* \"#utility.yul\":19294:19474   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19480:19846   */\n    tag_311:\n        /* \"#utility.yul\":19622:19625   */\n      0x00\n        /* \"#utility.yul\":19643:19710   */\n      tag_517\n        /* \"#utility.yul\":19707:19709   */\n      0x1e\n        /* \"#utility.yul\":19702:19705   */\n      dup4\n        /* \"#utility.yul\":19643:19710   */\n      tag_273\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":19636:19710   */\n      swap2\n      pop\n        /* \"#utility.yul\":19719:19812   */\n      tag_518\n        /* \"#utility.yul\":19808:19811   */\n      dup3\n        /* \"#utility.yul\":19719:19812   */\n      tag_310\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":19837:19839   */\n      0x20\n        /* \"#utility.yul\":19832:19835   */\n      dup3\n        /* \"#utility.yul\":19828:19840   */\n      add\n        /* \"#utility.yul\":19821:19840   */\n      swap1\n      pop\n        /* \"#utility.yul\":19480:19846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19852:20271   */\n    tag_190:\n        /* \"#utility.yul\":20018:20022   */\n      0x00\n        /* \"#utility.yul\":20056:20058   */\n      0x20\n        /* \"#utility.yul\":20045:20054   */\n      dup3\n        /* \"#utility.yul\":20041:20059   */\n      add\n        /* \"#utility.yul\":20033:20059   */\n      swap1\n      pop\n        /* \"#utility.yul\":20105:20114   */\n      dup2\n        /* \"#utility.yul\":20099:20103   */\n      dup2\n        /* \"#utility.yul\":20095:20115   */\n      sub\n        /* \"#utility.yul\":20091:20092   */\n      0x00\n        /* \"#utility.yul\":20080:20089   */\n      dup4\n        /* \"#utility.yul\":20076:20093   */\n      add\n        /* \"#utility.yul\":20069:20116   */\n      mstore\n        /* \"#utility.yul\":20133:20264   */\n      tag_520\n        /* \"#utility.yul\":20259:20263   */\n      dup2\n        /* \"#utility.yul\":20133:20264   */\n      tag_311\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":20125:20264   */\n      swap1\n      pop\n        /* \"#utility.yul\":19852:20271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20277:20502   */\n    tag_312:\n        /* \"#utility.yul\":20417:20451   */\n      0x4552433737373a207472616e736665722066726f6d20746865207a65726f2061\n        /* \"#utility.yul\":20413:20414   */\n      0x00\n        /* \"#utility.yul\":20405:20411   */\n      dup3\n        /* \"#utility.yul\":20401:20415   */\n      add\n        /* \"#utility.yul\":20394:20452   */\n      mstore\n        /* \"#utility.yul\":20486:20494   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20481:20483   */\n      0x20\n        /* \"#utility.yul\":20473:20479   */\n      dup3\n        /* \"#utility.yul\":20469:20484   */\n      add\n        /* \"#utility.yul\":20462:20495   */\n      mstore\n        /* \"#utility.yul\":20277:20502   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20508:20874   */\n    tag_313:\n        /* \"#utility.yul\":20650:20653   */\n      0x00\n        /* \"#utility.yul\":20671:20738   */\n      tag_523\n        /* \"#utility.yul\":20735:20737   */\n      0x26\n        /* \"#utility.yul\":20730:20733   */\n      dup4\n        /* \"#utility.yul\":20671:20738   */\n      tag_273\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":20664:20738   */\n      swap2\n      pop\n        /* \"#utility.yul\":20747:20840   */\n      tag_524\n        /* \"#utility.yul\":20836:20839   */\n      dup3\n        /* \"#utility.yul\":20747:20840   */\n      tag_312\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":20865:20867   */\n      0x40\n        /* \"#utility.yul\":20860:20863   */\n      dup3\n        /* \"#utility.yul\":20856:20868   */\n      add\n        /* \"#utility.yul\":20849:20868   */\n      swap1\n      pop\n        /* \"#utility.yul\":20508:20874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20880:21299   */\n    tag_195:\n        /* \"#utility.yul\":21046:21050   */\n      0x00\n        /* \"#utility.yul\":21084:21086   */\n      0x20\n        /* \"#utility.yul\":21073:21082   */\n      dup3\n        /* \"#utility.yul\":21069:21087   */\n      add\n        /* \"#utility.yul\":21061:21087   */\n      swap1\n      pop\n        /* \"#utility.yul\":21133:21142   */\n      dup2\n        /* \"#utility.yul\":21127:21131   */\n      dup2\n        /* \"#utility.yul\":21123:21143   */\n      sub\n        /* \"#utility.yul\":21119:21120   */\n      0x00\n        /* \"#utility.yul\":21108:21117   */\n      dup4\n        /* \"#utility.yul\":21104:21121   */\n      add\n        /* \"#utility.yul\":21097:21144   */\n      mstore\n        /* \"#utility.yul\":21161:21292   */\n      tag_526\n        /* \"#utility.yul\":21287:21291   */\n      dup2\n        /* \"#utility.yul\":21161:21292   */\n      tag_313\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":21153:21292   */\n      swap1\n      pop\n        /* \"#utility.yul\":20880:21299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21305:21528   */\n    tag_314:\n        /* \"#utility.yul\":21445:21479   */\n      0x4552433737373a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":21441:21442   */\n      0x00\n        /* \"#utility.yul\":21433:21439   */\n      dup3\n        /* \"#utility.yul\":21429:21443   */\n      add\n        /* \"#utility.yul\":21422:21480   */\n      mstore\n        /* \"#utility.yul\":21514:21520   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21509:21511   */\n      0x20\n        /* \"#utility.yul\":21501:21507   */\n      dup3\n        /* \"#utility.yul\":21497:21512   */\n      add\n        /* \"#utility.yul\":21490:21521   */\n      mstore\n        /* \"#utility.yul\":21305:21528   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21534:21900   */\n    tag_315:\n        /* \"#utility.yul\":21676:21679   */\n      0x00\n        /* \"#utility.yul\":21697:21764   */\n      tag_529\n        /* \"#utility.yul\":21761:21763   */\n      0x24\n        /* \"#utility.yul\":21756:21759   */\n      dup4\n        /* \"#utility.yul\":21697:21764   */\n      tag_273\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":21690:21764   */\n      swap2\n      pop\n        /* \"#utility.yul\":21773:21866   */\n      tag_530\n        /* \"#utility.yul\":21862:21865   */\n      dup3\n        /* \"#utility.yul\":21773:21866   */\n      tag_314\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":21891:21893   */\n      0x40\n        /* \"#utility.yul\":21886:21889   */\n      dup3\n        /* \"#utility.yul\":21882:21894   */\n      add\n        /* \"#utility.yul\":21875:21894   */\n      swap1\n      pop\n        /* \"#utility.yul\":21534:21900   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21906:22325   */\n    tag_198:\n        /* \"#utility.yul\":22072:22076   */\n      0x00\n        /* \"#utility.yul\":22110:22112   */\n      0x20\n        /* \"#utility.yul\":22099:22108   */\n      dup3\n        /* \"#utility.yul\":22095:22113   */\n      add\n        /* \"#utility.yul\":22087:22113   */\n      swap1\n      pop\n        /* \"#utility.yul\":22159:22168   */\n      dup2\n        /* \"#utility.yul\":22153:22157   */\n      dup2\n        /* \"#utility.yul\":22149:22169   */\n      sub\n        /* \"#utility.yul\":22145:22146   */\n      0x00\n        /* \"#utility.yul\":22134:22143   */\n      dup4\n        /* \"#utility.yul\":22130:22147   */\n      add\n        /* \"#utility.yul\":22123:22170   */\n      mstore\n        /* \"#utility.yul\":22187:22318   */\n      tag_532\n        /* \"#utility.yul\":22313:22317   */\n      dup2\n        /* \"#utility.yul\":22187:22318   */\n      tag_315\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":22179:22318   */\n      swap1\n      pop\n        /* \"#utility.yul\":21906:22325   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22331:22552   */\n    tag_316:\n        /* \"#utility.yul\":22471:22505   */\n      0x4552433737373a206275726e2066726f6d20746865207a65726f206164647265\n        /* \"#utility.yul\":22467:22468   */\n      0x00\n        /* \"#utility.yul\":22459:22465   */\n      dup3\n        /* \"#utility.yul\":22455:22469   */\n      add\n        /* \"#utility.yul\":22448:22506   */\n      mstore\n        /* \"#utility.yul\":22540:22544   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22535:22537   */\n      0x20\n        /* \"#utility.yul\":22527:22533   */\n      dup3\n        /* \"#utility.yul\":22523:22538   */\n      add\n        /* \"#utility.yul\":22516:22545   */\n      mstore\n        /* \"#utility.yul\":22331:22552   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22558:22924   */\n    tag_317:\n        /* \"#utility.yul\":22700:22703   */\n      0x00\n        /* \"#utility.yul\":22721:22788   */\n      tag_535\n        /* \"#utility.yul\":22785:22787   */\n      0x22\n        /* \"#utility.yul\":22780:22783   */\n      dup4\n        /* \"#utility.yul\":22721:22788   */\n      tag_273\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":22714:22788   */\n      swap2\n      pop\n        /* \"#utility.yul\":22797:22890   */\n      tag_536\n        /* \"#utility.yul\":22886:22889   */\n      dup3\n        /* \"#utility.yul\":22797:22890   */\n      tag_316\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":22915:22917   */\n      0x40\n        /* \"#utility.yul\":22910:22913   */\n      dup3\n        /* \"#utility.yul\":22906:22918   */\n      add\n        /* \"#utility.yul\":22899:22918   */\n      swap1\n      pop\n        /* \"#utility.yul\":22558:22924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22930:23349   */\n    tag_209:\n        /* \"#utility.yul\":23096:23100   */\n      0x00\n        /* \"#utility.yul\":23134:23136   */\n      0x20\n        /* \"#utility.yul\":23123:23132   */\n      dup3\n        /* \"#utility.yul\":23119:23137   */\n      add\n        /* \"#utility.yul\":23111:23137   */\n      swap1\n      pop\n        /* \"#utility.yul\":23183:23192   */\n      dup2\n        /* \"#utility.yul\":23177:23181   */\n      dup2\n        /* \"#utility.yul\":23173:23193   */\n      sub\n        /* \"#utility.yul\":23169:23170   */\n      0x00\n        /* \"#utility.yul\":23158:23167   */\n      dup4\n        /* \"#utility.yul\":23154:23171   */\n      add\n        /* \"#utility.yul\":23147:23194   */\n      mstore\n        /* \"#utility.yul\":23211:23342   */\n      tag_538\n        /* \"#utility.yul\":23337:23341   */\n      dup2\n        /* \"#utility.yul\":23211:23342   */\n      tag_317\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":23203:23342   */\n      swap1\n      pop\n        /* \"#utility.yul\":22930:23349   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23355:23577   */\n    tag_318:\n        /* \"#utility.yul\":23495:23529   */\n      0x4552433737373a206275726e20616d6f756e7420657863656564732062616c61\n        /* \"#utility.yul\":23491:23492   */\n      0x00\n        /* \"#utility.yul\":23483:23489   */\n      dup3\n        /* \"#utility.yul\":23479:23493   */\n      add\n        /* \"#utility.yul\":23472:23530   */\n      mstore\n        /* \"#utility.yul\":23564:23569   */\n      0x6e63650000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23559:23561   */\n      0x20\n        /* \"#utility.yul\":23551:23557   */\n      dup3\n        /* \"#utility.yul\":23547:23562   */\n      add\n        /* \"#utility.yul\":23540:23570   */\n      mstore\n        /* \"#utility.yul\":23355:23577   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23583:23949   */\n    tag_319:\n        /* \"#utility.yul\":23725:23728   */\n      0x00\n        /* \"#utility.yul\":23746:23813   */\n      tag_541\n        /* \"#utility.yul\":23810:23812   */\n      0x23\n        /* \"#utility.yul\":23805:23808   */\n      dup4\n        /* \"#utility.yul\":23746:23813   */\n      tag_273\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":23739:23813   */\n      swap2\n      pop\n        /* \"#utility.yul\":23822:23915   */\n      tag_542\n        /* \"#utility.yul\":23911:23914   */\n      dup3\n        /* \"#utility.yul\":23822:23915   */\n      tag_318\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":23940:23942   */\n      0x40\n        /* \"#utility.yul\":23935:23938   */\n      dup3\n        /* \"#utility.yul\":23931:23943   */\n      add\n        /* \"#utility.yul\":23924:23943   */\n      swap1\n      pop\n        /* \"#utility.yul\":23583:23949   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23955:24374   */\n    tag_216:\n        /* \"#utility.yul\":24121:24125   */\n      0x00\n        /* \"#utility.yul\":24159:24161   */\n      0x20\n        /* \"#utility.yul\":24148:24157   */\n      dup3\n        /* \"#utility.yul\":24144:24162   */\n      add\n        /* \"#utility.yul\":24136:24162   */\n      swap1\n      pop\n        /* \"#utility.yul\":24208:24217   */\n      dup2\n        /* \"#utility.yul\":24202:24206   */\n      dup2\n        /* \"#utility.yul\":24198:24218   */\n      sub\n        /* \"#utility.yul\":24194:24195   */\n      0x00\n        /* \"#utility.yul\":24183:24192   */\n      dup4\n        /* \"#utility.yul\":24179:24196   */\n      add\n        /* \"#utility.yul\":24172:24219   */\n      mstore\n        /* \"#utility.yul\":24236:24367   */\n      tag_544\n        /* \"#utility.yul\":24362:24366   */\n      dup2\n        /* \"#utility.yul\":24236:24367   */\n      tag_319\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":24228:24367   */\n      swap1\n      pop\n        /* \"#utility.yul\":23955:24374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24380:24560   */\n    tag_320:\n        /* \"#utility.yul\":24428:24505   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24425:24426   */\n      0x00\n        /* \"#utility.yul\":24418:24506   */\n      mstore\n        /* \"#utility.yul\":24525:24529   */\n      0x11\n        /* \"#utility.yul\":24522:24523   */\n      0x04\n        /* \"#utility.yul\":24515:24530   */\n      mstore\n        /* \"#utility.yul\":24549:24553   */\n      0x24\n        /* \"#utility.yul\":24546:24547   */\n      0x00\n        /* \"#utility.yul\":24539:24554   */\n      revert\n        /* \"#utility.yul\":24566:24760   */\n    tag_218:\n        /* \"#utility.yul\":24606:24610   */\n      0x00\n        /* \"#utility.yul\":24626:24646   */\n      tag_547\n        /* \"#utility.yul\":24644:24645   */\n      dup3\n        /* \"#utility.yul\":24626:24646   */\n      tag_282\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":24621:24646   */\n      swap2\n      pop\n        /* \"#utility.yul\":24660:24680   */\n      tag_548\n        /* \"#utility.yul\":24678:24679   */\n      dup4\n        /* \"#utility.yul\":24660:24680   */\n      tag_282\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":24655:24680   */\n      swap3\n      pop\n        /* \"#utility.yul\":24704:24705   */\n      dup3\n        /* \"#utility.yul\":24701:24702   */\n      dup3\n        /* \"#utility.yul\":24697:24706   */\n      sub\n        /* \"#utility.yul\":24689:24706   */\n      swap1\n      pop\n        /* \"#utility.yul\":24728:24729   */\n      dup2\n        /* \"#utility.yul\":24722:24726   */\n      dup2\n        /* \"#utility.yul\":24719:24730   */\n      gt\n        /* \"#utility.yul\":24716:24753   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":24733:24751   */\n      tag_550\n      tag_320\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":24716:24753   */\n    tag_549:\n        /* \"#utility.yul\":24566:24760   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24766:24864   */\n    tag_321:\n        /* \"#utility.yul\":24817:24823   */\n      0x00\n        /* \"#utility.yul\":24851:24856   */\n      dup2\n        /* \"#utility.yul\":24845:24857   */\n      mload\n        /* \"#utility.yul\":24835:24857   */\n      swap1\n      pop\n        /* \"#utility.yul\":24766:24864   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24870:25038   */\n    tag_322:\n        /* \"#utility.yul\":24953:24964   */\n      0x00\n        /* \"#utility.yul\":24987:24993   */\n      dup3\n        /* \"#utility.yul\":24982:24985   */\n      dup3\n        /* \"#utility.yul\":24975:24994   */\n      mstore\n        /* \"#utility.yul\":25027:25031   */\n      0x20\n        /* \"#utility.yul\":25022:25025   */\n      dup3\n        /* \"#utility.yul\":25018:25032   */\n      add\n        /* \"#utility.yul\":25003:25032   */\n      swap1\n      pop\n        /* \"#utility.yul\":24870:25038   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25044:25417   */\n    tag_323:\n        /* \"#utility.yul\":25130:25133   */\n      0x00\n        /* \"#utility.yul\":25158:25196   */\n      tag_554\n        /* \"#utility.yul\":25190:25195   */\n      dup3\n        /* \"#utility.yul\":25158:25196   */\n      tag_321\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":25212:25282   */\n      tag_555\n        /* \"#utility.yul\":25275:25281   */\n      dup2\n        /* \"#utility.yul\":25270:25273   */\n      dup6\n        /* \"#utility.yul\":25212:25282   */\n      tag_322\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":25205:25282   */\n      swap4\n      pop\n        /* \"#utility.yul\":25291:25356   */\n      tag_556\n        /* \"#utility.yul\":25349:25355   */\n      dup2\n        /* \"#utility.yul\":25344:25347   */\n      dup6\n        /* \"#utility.yul\":25337:25341   */\n      0x20\n        /* \"#utility.yul\":25330:25335   */\n      dup7\n        /* \"#utility.yul\":25326:25342   */\n      add\n        /* \"#utility.yul\":25291:25356   */\n      tag_274\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":25381:25410   */\n      tag_557\n        /* \"#utility.yul\":25403:25409   */\n      dup2\n        /* \"#utility.yul\":25381:25410   */\n      tag_275\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":25376:25379   */\n      dup5\n        /* \"#utility.yul\":25372:25411   */\n      add\n        /* \"#utility.yul\":25365:25411   */\n      swap2\n      pop\n        /* \"#utility.yul\":25134:25417   */\n      pop\n        /* \"#utility.yul\":25044:25417   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25423:26039   */\n    tag_220:\n        /* \"#utility.yul\":25608:25612   */\n      0x00\n        /* \"#utility.yul\":25646:25648   */\n      0x60\n        /* \"#utility.yul\":25635:25644   */\n      dup3\n        /* \"#utility.yul\":25631:25649   */\n      add\n        /* \"#utility.yul\":25623:25649   */\n      swap1\n      pop\n        /* \"#utility.yul\":25659:25730   */\n      tag_559\n        /* \"#utility.yul\":25727:25728   */\n      0x00\n        /* \"#utility.yul\":25716:25725   */\n      dup4\n        /* \"#utility.yul\":25712:25729   */\n      add\n        /* \"#utility.yul\":25703:25709   */\n      dup7\n        /* \"#utility.yul\":25659:25730   */\n      tag_287\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":25777:25786   */\n      dup2\n        /* \"#utility.yul\":25771:25775   */\n      dup2\n        /* \"#utility.yul\":25767:25787   */\n      sub\n        /* \"#utility.yul\":25762:25764   */\n      0x20\n        /* \"#utility.yul\":25751:25760   */\n      dup4\n        /* \"#utility.yul\":25747:25765   */\n      add\n        /* \"#utility.yul\":25740:25788   */\n      mstore\n        /* \"#utility.yul\":25805:25881   */\n      tag_560\n        /* \"#utility.yul\":25876:25880   */\n      dup2\n        /* \"#utility.yul\":25867:25873   */\n      dup6\n        /* \"#utility.yul\":25805:25881   */\n      tag_323\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":25797:25881   */\n      swap1\n      pop\n        /* \"#utility.yul\":25928:25937   */\n      dup2\n        /* \"#utility.yul\":25922:25926   */\n      dup2\n        /* \"#utility.yul\":25918:25938   */\n      sub\n        /* \"#utility.yul\":25913:25915   */\n      0x40\n        /* \"#utility.yul\":25902:25911   */\n      dup4\n        /* \"#utility.yul\":25898:25916   */\n      add\n        /* \"#utility.yul\":25891:25939   */\n      mstore\n        /* \"#utility.yul\":25956:26032   */\n      tag_561\n        /* \"#utility.yul\":26027:26031   */\n      dup2\n        /* \"#utility.yul\":26018:26024   */\n      dup5\n        /* \"#utility.yul\":25956:26032   */\n      tag_323\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":25948:26032   */\n      swap1\n      pop\n        /* \"#utility.yul\":25423:26039   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26045:26163   */\n    tag_324:\n        /* \"#utility.yul\":26132:26156   */\n      tag_563\n        /* \"#utility.yul\":26150:26155   */\n      dup2\n        /* \"#utility.yul\":26132:26156   */\n      tag_267\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":26127:26130   */\n      dup3\n        /* \"#utility.yul\":26120:26157   */\n      mstore\n        /* \"#utility.yul\":26045:26163   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26169:26246   */\n    tag_325:\n        /* \"#utility.yul\":26206:26213   */\n      0x00\n        /* \"#utility.yul\":26235:26240   */\n      dup2\n        /* \"#utility.yul\":26224:26240   */\n      swap1\n      pop\n        /* \"#utility.yul\":26169:26246   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26252:26370   */\n    tag_326:\n        /* \"#utility.yul\":26339:26363   */\n      tag_566\n        /* \"#utility.yul\":26357:26362   */\n      dup2\n        /* \"#utility.yul\":26339:26363   */\n      tag_325\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":26334:26337   */\n      dup3\n        /* \"#utility.yul\":26327:26364   */\n      mstore\n        /* \"#utility.yul\":26252:26370   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26376:26708   */\n    tag_224:\n        /* \"#utility.yul\":26497:26501   */\n      0x00\n        /* \"#utility.yul\":26535:26537   */\n      0x40\n        /* \"#utility.yul\":26524:26533   */\n      dup3\n        /* \"#utility.yul\":26520:26538   */\n      add\n        /* \"#utility.yul\":26512:26538   */\n      swap1\n      pop\n        /* \"#utility.yul\":26548:26619   */\n      tag_568\n        /* \"#utility.yul\":26616:26617   */\n      0x00\n        /* \"#utility.yul\":26605:26614   */\n      dup4\n        /* \"#utility.yul\":26601:26618   */\n      add\n        /* \"#utility.yul\":26592:26598   */\n      dup6\n        /* \"#utility.yul\":26548:26619   */\n      tag_324\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":26629:26701   */\n      tag_569\n        /* \"#utility.yul\":26697:26699   */\n      0x20\n        /* \"#utility.yul\":26686:26695   */\n      dup4\n        /* \"#utility.yul\":26682:26700   */\n      add\n        /* \"#utility.yul\":26673:26679   */\n      dup5\n        /* \"#utility.yul\":26629:26701   */\n      tag_326\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":26376:26708   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26714:26857   */\n    tag_327:\n        /* \"#utility.yul\":26771:26776   */\n      0x00\n        /* \"#utility.yul\":26802:26808   */\n      dup2\n        /* \"#utility.yul\":26796:26809   */\n      mload\n        /* \"#utility.yul\":26787:26809   */\n      swap1\n      pop\n        /* \"#utility.yul\":26818:26851   */\n      tag_571\n        /* \"#utility.yul\":26845:26850   */\n      dup2\n        /* \"#utility.yul\":26818:26851   */\n      tag_280\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":26714:26857   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26863:27214   */\n    tag_228:\n        /* \"#utility.yul\":26933:26939   */\n      0x00\n        /* \"#utility.yul\":26982:26984   */\n      0x20\n        /* \"#utility.yul\":26970:26979   */\n      dup3\n        /* \"#utility.yul\":26961:26968   */\n      dup5\n        /* \"#utility.yul\":26957:26980   */\n      sub\n        /* \"#utility.yul\":26953:26985   */\n      slt\n        /* \"#utility.yul\":26950:27069   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":26988:27067   */\n      tag_574\n      tag_278\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":26950:27069   */\n    tag_573:\n        /* \"#utility.yul\":27108:27109   */\n      0x00\n        /* \"#utility.yul\":27133:27197   */\n      tag_575\n        /* \"#utility.yul\":27189:27196   */\n      dup5\n        /* \"#utility.yul\":27180:27186   */\n      dup3\n        /* \"#utility.yul\":27169:27178   */\n      dup6\n        /* \"#utility.yul\":27165:27187   */\n      add\n        /* \"#utility.yul\":27133:27197   */\n      tag_327\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":27123:27197   */\n      swap2\n      pop\n        /* \"#utility.yul\":27079:27207   */\n      pop\n        /* \"#utility.yul\":26863:27214   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27220:28169   */\n    tag_231:\n        /* \"#utility.yul\":27489:27493   */\n      0x00\n        /* \"#utility.yul\":27527:27530   */\n      0xc0\n        /* \"#utility.yul\":27516:27525   */\n      dup3\n        /* \"#utility.yul\":27512:27531   */\n      add\n        /* \"#utility.yul\":27504:27531   */\n      swap1\n      pop\n        /* \"#utility.yul\":27541:27612   */\n      tag_577\n        /* \"#utility.yul\":27609:27610   */\n      0x00\n        /* \"#utility.yul\":27598:27607   */\n      dup4\n        /* \"#utility.yul\":27594:27611   */\n      add\n        /* \"#utility.yul\":27585:27591   */\n      dup10\n        /* \"#utility.yul\":27541:27612   */\n      tag_324\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":27622:27694   */\n      tag_578\n        /* \"#utility.yul\":27690:27692   */\n      0x20\n        /* \"#utility.yul\":27679:27688   */\n      dup4\n        /* \"#utility.yul\":27675:27693   */\n      add\n        /* \"#utility.yul\":27666:27672   */\n      dup9\n        /* \"#utility.yul\":27622:27694   */\n      tag_324\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":27704:27776   */\n      tag_579\n        /* \"#utility.yul\":27772:27774   */\n      0x40\n        /* \"#utility.yul\":27761:27770   */\n      dup4\n        /* \"#utility.yul\":27757:27775   */\n      add\n        /* \"#utility.yul\":27748:27754   */\n      dup8\n        /* \"#utility.yul\":27704:27776   */\n      tag_324\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":27786:27858   */\n      tag_580\n        /* \"#utility.yul\":27854:27856   */\n      0x60\n        /* \"#utility.yul\":27843:27852   */\n      dup4\n        /* \"#utility.yul\":27839:27857   */\n      add\n        /* \"#utility.yul\":27830:27836   */\n      dup7\n        /* \"#utility.yul\":27786:27858   */\n      tag_287\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":27906:27915   */\n      dup2\n        /* \"#utility.yul\":27900:27904   */\n      dup2\n        /* \"#utility.yul\":27896:27916   */\n      sub\n        /* \"#utility.yul\":27890:27893   */\n      0x80\n        /* \"#utility.yul\":27879:27888   */\n      dup4\n        /* \"#utility.yul\":27875:27894   */\n      add\n        /* \"#utility.yul\":27868:27917   */\n      mstore\n        /* \"#utility.yul\":27934:28010   */\n      tag_581\n        /* \"#utility.yul\":28005:28009   */\n      dup2\n        /* \"#utility.yul\":27996:28002   */\n      dup6\n        /* \"#utility.yul\":27934:28010   */\n      tag_323\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":27926:28010   */\n      swap1\n      pop\n        /* \"#utility.yul\":28058:28067   */\n      dup2\n        /* \"#utility.yul\":28052:28056   */\n      dup2\n        /* \"#utility.yul\":28048:28068   */\n      sub\n        /* \"#utility.yul\":28042:28045   */\n      0xa0\n        /* \"#utility.yul\":28031:28040   */\n      dup4\n        /* \"#utility.yul\":28027:28046   */\n      add\n        /* \"#utility.yul\":28020:28069   */\n      mstore\n        /* \"#utility.yul\":28086:28162   */\n      tag_582\n        /* \"#utility.yul\":28157:28161   */\n      dup2\n        /* \"#utility.yul\":28148:28154   */\n      dup5\n        /* \"#utility.yul\":28086:28162   */\n      tag_323\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":28078:28162   */\n      swap1\n      pop\n        /* \"#utility.yul\":27220:28169   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28175:28401   */\n    tag_328:\n        /* \"#utility.yul\":28315:28349   */\n      0x4552433737373a207472616e7366657220616d6f756e74206578636565647320\n        /* \"#utility.yul\":28311:28312   */\n      0x00\n        /* \"#utility.yul\":28303:28309   */\n      dup3\n        /* \"#utility.yul\":28299:28313   */\n      add\n        /* \"#utility.yul\":28292:28350   */\n      mstore\n        /* \"#utility.yul\":28384:28393   */\n      0x62616c616e636500000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28379:28381   */\n      0x20\n        /* \"#utility.yul\":28371:28377   */\n      dup3\n        /* \"#utility.yul\":28367:28382   */\n      add\n        /* \"#utility.yul\":28360:28394   */\n      mstore\n        /* \"#utility.yul\":28175:28401   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28407:28773   */\n    tag_329:\n        /* \"#utility.yul\":28549:28552   */\n      0x00\n        /* \"#utility.yul\":28570:28637   */\n      tag_585\n        /* \"#utility.yul\":28634:28636   */\n      0x27\n        /* \"#utility.yul\":28629:28632   */\n      dup4\n        /* \"#utility.yul\":28570:28637   */\n      tag_273\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":28563:28637   */\n      swap2\n      pop\n        /* \"#utility.yul\":28646:28739   */\n      tag_586\n        /* \"#utility.yul\":28735:28738   */\n      dup3\n        /* \"#utility.yul\":28646:28739   */\n      tag_328\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":28764:28766   */\n      0x40\n        /* \"#utility.yul\":28759:28762   */\n      dup3\n        /* \"#utility.yul\":28755:28767   */\n      add\n        /* \"#utility.yul\":28748:28767   */\n      swap1\n      pop\n        /* \"#utility.yul\":28407:28773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28779:29198   */\n    tag_239:\n        /* \"#utility.yul\":28945:28949   */\n      0x00\n        /* \"#utility.yul\":28983:28985   */\n      0x20\n        /* \"#utility.yul\":28972:28981   */\n      dup3\n        /* \"#utility.yul\":28968:28986   */\n      add\n        /* \"#utility.yul\":28960:28986   */\n      swap1\n      pop\n        /* \"#utility.yul\":29032:29041   */\n      dup2\n        /* \"#utility.yul\":29026:29030   */\n      dup2\n        /* \"#utility.yul\":29022:29042   */\n      sub\n        /* \"#utility.yul\":29018:29019   */\n      0x00\n        /* \"#utility.yul\":29007:29016   */\n      dup4\n        /* \"#utility.yul\":29003:29020   */\n      add\n        /* \"#utility.yul\":28996:29043   */\n      mstore\n        /* \"#utility.yul\":29060:29191   */\n      tag_588\n        /* \"#utility.yul\":29186:29190   */\n      dup2\n        /* \"#utility.yul\":29060:29191   */\n      tag_329\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":29052:29191   */\n      swap1\n      pop\n        /* \"#utility.yul\":28779:29198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29204:29395   */\n    tag_241:\n        /* \"#utility.yul\":29244:29247   */\n      0x00\n        /* \"#utility.yul\":29263:29283   */\n      tag_590\n        /* \"#utility.yul\":29281:29282   */\n      dup3\n        /* \"#utility.yul\":29263:29283   */\n      tag_282\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":29258:29283   */\n      swap2\n      pop\n        /* \"#utility.yul\":29297:29317   */\n      tag_591\n        /* \"#utility.yul\":29315:29316   */\n      dup4\n        /* \"#utility.yul\":29297:29317   */\n      tag_282\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":29292:29317   */\n      swap3\n      pop\n        /* \"#utility.yul\":29340:29341   */\n      dup3\n        /* \"#utility.yul\":29337:29338   */\n      dup3\n        /* \"#utility.yul\":29333:29342   */\n      add\n        /* \"#utility.yul\":29326:29342   */\n      swap1\n      pop\n        /* \"#utility.yul\":29361:29364   */\n      dup1\n        /* \"#utility.yul\":29358:29359   */\n      dup3\n        /* \"#utility.yul\":29355:29365   */\n      gt\n        /* \"#utility.yul\":29352:29388   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":29368:29386   */\n      tag_593\n      tag_320\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":29352:29388   */\n    tag_592:\n        /* \"#utility.yul\":29204:29395   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29401:29702   */\n    tag_330:\n        /* \"#utility.yul\":29541:29575   */\n      0x4552433737373a20746f6b656e20726563697069656e7420636f6e7472616374\n        /* \"#utility.yul\":29537:29538   */\n      0x00\n        /* \"#utility.yul\":29529:29535   */\n      dup3\n        /* \"#utility.yul\":29525:29539   */\n      add\n        /* \"#utility.yul\":29518:29576   */\n      mstore\n        /* \"#utility.yul\":29610:29644   */\n      0x20686173206e6f20696d706c656d656e74657220666f7220455243373737546f\n        /* \"#utility.yul\":29605:29607   */\n      0x20\n        /* \"#utility.yul\":29597:29603   */\n      dup3\n        /* \"#utility.yul\":29593:29608   */\n      add\n        /* \"#utility.yul\":29586:29645   */\n      mstore\n        /* \"#utility.yul\":29679:29694   */\n      0x6b656e73526563697069656e7400000000000000000000000000000000000000\n        /* \"#utility.yul\":29674:29676   */\n      0x40\n        /* \"#utility.yul\":29666:29672   */\n      dup3\n        /* \"#utility.yul\":29662:29677   */\n      add\n        /* \"#utility.yul\":29655:29695   */\n      mstore\n        /* \"#utility.yul\":29401:29702   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29708:30074   */\n    tag_331:\n        /* \"#utility.yul\":29850:29853   */\n      0x00\n        /* \"#utility.yul\":29871:29938   */\n      tag_596\n        /* \"#utility.yul\":29935:29937   */\n      0x4d\n        /* \"#utility.yul\":29930:29933   */\n      dup4\n        /* \"#utility.yul\":29871:29938   */\n      tag_273\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":29864:29938   */\n      swap2\n      pop\n        /* \"#utility.yul\":29947:30040   */\n      tag_597\n        /* \"#utility.yul\":30036:30039   */\n      dup3\n        /* \"#utility.yul\":29947:30040   */\n      tag_330\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":30065:30067   */\n      0x60\n        /* \"#utility.yul\":30060:30063   */\n      dup3\n        /* \"#utility.yul\":30056:30068   */\n      add\n        /* \"#utility.yul\":30049:30068   */\n      swap1\n      pop\n        /* \"#utility.yul\":29708:30074   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30080:30499   */\n    tag_260:\n        /* \"#utility.yul\":30246:30250   */\n      0x00\n        /* \"#utility.yul\":30284:30286   */\n      0x20\n        /* \"#utility.yul\":30273:30282   */\n      dup3\n        /* \"#utility.yul\":30269:30287   */\n      add\n        /* \"#utility.yul\":30261:30287   */\n      swap1\n      pop\n        /* \"#utility.yul\":30333:30342   */\n      dup2\n        /* \"#utility.yul\":30327:30331   */\n      dup2\n        /* \"#utility.yul\":30323:30343   */\n      sub\n        /* \"#utility.yul\":30319:30320   */\n      0x00\n        /* \"#utility.yul\":30308:30317   */\n      dup4\n        /* \"#utility.yul\":30304:30321   */\n      add\n        /* \"#utility.yul\":30297:30344   */\n      mstore\n        /* \"#utility.yul\":30361:30492   */\n      tag_599\n        /* \"#utility.yul\":30487:30491   */\n      dup2\n        /* \"#utility.yul\":30361:30492   */\n      tag_331\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":30353:30492   */\n      swap1\n      pop\n        /* \"#utility.yul\":30080:30499   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122014e10a8d34903e142f43c17b0e012419cb01a52347e233c23a63d3de79e661d964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_840": {
									"entryPoint": null,
									"id": 840,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1342,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed": {
									"entryPoint": 2727,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 786,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2126,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1019,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2559,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1705,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2512,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 806,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1236,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 811,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1855,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2011,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2054,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12437:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:1",
														"type": ""
													}
												],
												"src": "580:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:1"
															},
															"nodeType": "YulIf",
															"src": "1030:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:1",
														"type": ""
													}
												],
												"src": "874:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:1",
														"type": ""
													}
												],
												"src": "1161:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:1"
															},
															"nodeType": "YulIf",
															"src": "1434:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:1",
														"type": ""
													}
												],
												"src": "1296:308:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:1",
																"statements": []
															},
															"src": "1701:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:1",
														"type": ""
													}
												],
												"src": "1610:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:1"
															},
															"nodeType": "YulIf",
															"src": "2117:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:1",
														"type": ""
													}
												],
												"src": "1862:434:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:1"
															},
															"nodeType": "YulIf",
															"src": "2399:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:1",
														"type": ""
													}
												],
												"src": "2316:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2759:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2864:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2866:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2866:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2866:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2836:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2844:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2833:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:30:1"
															},
															"nodeType": "YulIf",
															"src": "2830:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2896:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2908:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2916:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2904:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2904:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2896:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2958:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2970:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2976:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2966:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2958:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2743:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2754:4:1",
														"type": ""
													}
												],
												"src": "2677:311:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3083:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3100:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3103:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3093:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3093:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3093:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "2994:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3162:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3172:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3187:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3194:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3183:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3183:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3172:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3144:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3154:7:1",
														"type": ""
													}
												],
												"src": "3117:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3294:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3304:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3333:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3315:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3315:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3304:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3276:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3286:7:1",
														"type": ""
													}
												],
												"src": "3249:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3394:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3451:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3460:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3463:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3453:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3453:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3453:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3417:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3442:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3424:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3424:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3414:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3414:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3407:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3407:43:1"
															},
															"nodeType": "YulIf",
															"src": "3404:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3387:5:1",
														"type": ""
													}
												],
												"src": "3351:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3542:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3552:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3567:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3561:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3561:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3552:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3610:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3583:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3583:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3583:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3520:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3528:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3536:5:1",
														"type": ""
													}
												],
												"src": "3479:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3758:619:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3768:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3850:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3793:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3793:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3777:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3777:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3768:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3867:16:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "3878:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3871:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3900:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3907:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3893:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3893:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3893:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3923:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3934:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3941:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3930:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3930:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3923:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3956:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3974:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3986:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3994:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3982:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3982:17:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3970:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3970:30:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3960:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4028:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "4042:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4042:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4042:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4015:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4023:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4012:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4012:15:1"
															},
															"nodeType": "YulIf",
															"src": "4009:122:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4216:155:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4231:21:1",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "4249:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "4235:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4273:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "4310:10:1"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "4322:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "4278:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4278:48:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4266:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4266:61:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4266:61:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4340:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4351:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4356:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4347:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4347:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4340:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4169:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4174:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4166:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4166:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4182:25:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4184:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4195:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4200:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4191:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4191:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4184:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4144:21:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4146:17:1",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "4157:6:1"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "4150:3:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4140:231:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3728:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3736:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3744:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3752:5:1",
														"type": ""
													}
												],
												"src": "3645:732:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4488:297:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4537:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4539:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4539:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4539:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4516:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4524:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4512:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4512:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4531:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4508:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4508:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4501:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4501:35:1"
															},
															"nodeType": "YulIf",
															"src": "4498:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4629:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4649:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4643:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4643:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4633:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4665:114:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4752:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4760:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4748:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4767:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4775:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4674:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:105:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4665:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4466:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4474:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4482:5:1",
														"type": ""
													}
												],
												"src": "4400:385:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4947:1056:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4993:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4995:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4995:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4995:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4968:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4977:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4964:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4964:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4989:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4960:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4960:32:1"
															},
															"nodeType": "YulIf",
															"src": "4957:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5086:291:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5101:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5125:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5136:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5121:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5121:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5115:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5115:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5105:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5186:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5188:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5188:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5188:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5158:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5166:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5155:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5155:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "5152:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5283:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5339:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5350:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5335:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5335:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5359:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5293:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5293:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5283:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5387:292:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5402:39:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5426:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5437:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5422:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5422:18:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5416:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5416:25:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5406:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5488:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5490:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5490:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5490:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5460:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5468:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5457:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5457:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "5454:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5585:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5641:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5652:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5637:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5637:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5661:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5595:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5595:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5585:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5689:307:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5704:39:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5728:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5739:2:1",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5724:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5724:18:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5718:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5718:25:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5708:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5790:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5792:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5792:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5792:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5762:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5770:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5759:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5759:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "5756:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5887:99:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5958:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5969:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5954:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5954:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5978:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5897:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5897:89:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5887:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4901:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4912:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4924:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4932:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4940:6:1",
														"type": ""
													}
												],
												"src": "4791:1212:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6068:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6079:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6095:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6089:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6089:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6079:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6051:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6061:6:1",
														"type": ""
													}
												],
												"src": "6009:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6142:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6159:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6162:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6152:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6152:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6152:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6256:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6259:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6249:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6249:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6249:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6280:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6283:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6273:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6273:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6114:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6351:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6361:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6375:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6381:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6371:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6371:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6361:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6392:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6422:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6428:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6418:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6418:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6396:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6469:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6483:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6497:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6505:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6493:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6493:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6483:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6449:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6442:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6442:26:1"
															},
															"nodeType": "YulIf",
															"src": "6439:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6572:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6586:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6586:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6586:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6536:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6559:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6567:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6556:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6556:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6533:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6533:38:1"
															},
															"nodeType": "YulIf",
															"src": "6530:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6335:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6344:6:1",
														"type": ""
													}
												],
												"src": "6300:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6680:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6690:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "6698:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6690:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6718:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6721:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6711:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6711:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6711:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6734:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6752:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6755:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "6742:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6742:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6734:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6667:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6675:4:1",
														"type": ""
													}
												],
												"src": "6626:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6817:49:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6827:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6845:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6852:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6841:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6841:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6857:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6837:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6837:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6827:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6800:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6810:6:1",
														"type": ""
													}
												],
												"src": "6773:93:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6925:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6935:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6960:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6966:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "6956:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6956:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6935:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6900:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6906:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6916:8:1",
														"type": ""
													}
												],
												"src": "6872:107:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7061:317:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7071:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "7092:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7104:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7088:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7088:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "7075:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7115:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "7146:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7157:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7127:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7127:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "7119:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7233:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "7264:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "7275:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7245:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7245:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "7233:8:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7293:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7306:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "7317:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7313:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7302:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7302:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7293:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7332:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7345:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "7356:8:1"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "7366:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7352:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7352:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7342:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7332:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7022:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "7029:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "7041:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7054:6:1",
														"type": ""
													}
												],
												"src": "6985:393:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7429:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7439:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7450:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7439:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7411:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7421:7:1",
														"type": ""
													}
												],
												"src": "7384:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7499:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7509:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7516:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7509:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7485:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7495:3:1",
														"type": ""
													}
												],
												"src": "7467:60:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7593:82:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7603:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7661:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "7643:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7643:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "7634:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7634:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7616:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7616:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7603:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7573:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7583:9:1",
														"type": ""
													}
												],
												"src": "7533:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7728:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7738:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7745:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7738:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7714:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7724:3:1",
														"type": ""
													}
												],
												"src": "7681:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7838:193:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7848:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "7903:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7872:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7872:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "7852:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7927:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "7967:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "7961:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7961:11:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7974:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "8006:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "7982:23:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7982:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "7933:27:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7933:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "7920:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7920:105:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7920:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7815:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7821:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "7829:7:1",
														"type": ""
													}
												],
												"src": "7762:269:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8086:24:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8096:8:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8103:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8096:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8082:3:1",
														"type": ""
													}
												],
												"src": "8037:73:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8169:136:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8179:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8193:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8193:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "8183:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "8278:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8284:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "8292:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8234:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8234:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8234:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "8155:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8161:6:1",
														"type": ""
													}
												],
												"src": "8116:189:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8361:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "8472:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8479:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "8442:29:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8442:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "8381:5:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8388:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8378:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8378:14:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8393:26:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8395:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "8408:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8415:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8404:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8404:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "8395:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8375:2:1",
																"statements": []
															},
															"src": "8371:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "8349:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8356:3:1",
														"type": ""
													}
												],
												"src": "8311:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8582:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8608:431:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8622:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "8670:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "8638:31:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8638:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "8626:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8689:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "8712:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "8740:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "8722:17:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8722:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8708:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8708:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "8693:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "8909:27:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "8911:23:1",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "8926:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "8911:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "8893:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8905:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "8890:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8890:18:1"
																		},
																		"nodeType": "YulIf",
																		"src": "8887:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "8978:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "8995:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "9023:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "9005:17:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9005:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8991:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8991:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "8949:28:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8949:80:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8949:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "8599:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8604:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8596:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8596:11:1"
															},
															"nodeType": "YulIf",
															"src": "8593:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8558:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "8565:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "8570:10:1",
														"type": ""
													}
												],
												"src": "8503:543:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9115:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9125:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "9150:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9156:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "9146:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9146:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "9125:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "9090:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9096:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "9106:8:1",
														"type": ""
													}
												],
												"src": "9052:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9226:118:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9236:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9285:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "9288:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "9281:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9281:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9300:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "9296:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9296:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "9252:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9252:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "9248:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9248:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "9240:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9313:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9327:4:1"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "9333:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9323:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9323:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9313:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9203:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "9209:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "9219:6:1",
														"type": ""
													}
												],
												"src": "9175:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9430:214:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9563:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9590:4:1"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "9596:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "9571:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9571:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9563:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9609:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9620:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9630:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "9633:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "9626:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9626:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9617:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9617:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "9609:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9411:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "9417:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "9425:4:1",
														"type": ""
													}
												],
												"src": "9349:295:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9741:1303:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9752:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "9799:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9766:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9766:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "9756:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9888:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9890:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9890:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9890:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "9860:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9868:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9857:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9857:30:1"
															},
															"nodeType": "YulIf",
															"src": "9854:56:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9920:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "9966:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "9960:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9960:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "9934:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9934:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "9924:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "10065:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "10071:6:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "10079:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "10019:45:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10019:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10019:67:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10096:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10113:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "10100:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10124:17:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10137:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "10124:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10188:611:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10202:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "10221:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "10233:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "10229:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10229:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "10217:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10217:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "10206:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10253:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "10299:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "10267:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10267:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "10257:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10317:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10326:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "10321:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10385:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "10410:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "10428:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "10433:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "10424:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "10424:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "10418:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10418:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "10403:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10403:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "10403:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "10462:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "10476:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10484:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10472:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10472:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "10462:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "10503:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "10520:9:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10531:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10516:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10516:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "10503:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10351:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "10354:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "10348:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10348:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "10363:21:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "10365:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "10374:1:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10377:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10370:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10370:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10365:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "10344:3:1",
																					"statements": []
																				},
																				"src": "10340:208:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10584:156:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "10602:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "10629:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "10634:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "10625:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10625:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "10619:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10619:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "10606:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "10669:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "10696:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "10711:6:1"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "10719:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "10707:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "10707:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "10677:18:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10677:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "10662:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10662:64:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "10662:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "10567:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "10576:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "10564:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10564:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "10561:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "10760:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "10774:6:1"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "10782:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "10770:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "10770:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "10786:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10766:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10766:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "10753:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10753:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10753:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10181:618:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10186:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10816:222:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10830:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10843:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "10834:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10867:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "10885:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "10904:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "10909:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "10900:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10900:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "10894:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10894:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "10885:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "10860:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "10857:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "10954:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "11013:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "11020:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "10960:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10960:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "10947:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10947:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10947:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10808:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "10161:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10169:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10158:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10158:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "10151:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "9730:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9736:3:1",
														"type": ""
													}
												],
												"src": "9649:1395:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11078:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11095:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11098:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11088:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11088:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11088:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11192:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11195:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11185:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11185:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11185:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11216:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11219:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11209:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11209:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11209:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11050:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11264:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11281:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11284:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11274:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11274:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11274:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11378:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11381:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11371:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11371:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11371:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11402:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11405:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11395:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11395:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11395:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11236:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11465:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11475:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11502:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11484:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11484:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11475:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11598:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11600:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11600:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11600:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11523:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11530:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11520:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11520:77:1"
															},
															"nodeType": "YulIf",
															"src": "11517:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11629:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11640:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11647:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11636:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11636:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11629:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11451:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11461:3:1",
														"type": ""
													}
												],
												"src": "11422:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11726:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11743:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11766:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11748:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11748:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11736:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11736:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11736:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11714:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11721:3:1",
														"type": ""
													}
												],
												"src": "11661:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11830:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11840:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11851:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11840:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11812:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11822:7:1",
														"type": ""
													}
												],
												"src": "11785:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11933:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11950:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11973:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "11955:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11955:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11943:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11943:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11943:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11921:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11928:3:1",
														"type": ""
													}
												],
												"src": "11868:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12146:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12156:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12168:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12179:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12164:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12164:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12156:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12236:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12249:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12260:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12245:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12245:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12192:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12192:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12192:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12317:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12330:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12341:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12326:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12326:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12273:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12273:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12273:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12399:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12412:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12423:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12408:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12408:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12355:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12355:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12355:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12102:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12114:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12122:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12130:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12141:4:1",
														"type": ""
													}
												],
												"src": "11992:442:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162003572380380620035728339818101604052810190620000379190620005e5565b8260029081620000489190620008e9565b5081600390816200005a9190620008e9565b5080600490805190602001906200007392919062000264565b5060005b81518110156200010c576001600560008484815181106200009d576200009c620009d0565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080620001039062000a2e565b91505062000077565b50731820a4b7618bde71dce8cdc73aab6c95905fad2473ffffffffffffffffffffffffffffffffffffffff166329965a1d307fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054306040518463ffffffff1660e01b8152600401620001809392919062000aa7565b600060405180830381600087803b1580156200019b57600080fd5b505af1158015620001b0573d6000803e3d6000fd5b50505050731820a4b7618bde71dce8cdc73aab6c95905fad2473ffffffffffffffffffffffffffffffffffffffff166329965a1d307faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a306040518463ffffffff1660e01b8152600401620002279392919062000aa7565b600060405180830381600087803b1580156200024257600080fd5b505af115801562000257573d6000803e3d6000fd5b5050505050505062000ae4565b828054828255906000526020600020908101928215620002e0579160200282015b82811115620002df5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019062000285565b5b509050620002ef9190620002f3565b5090565b5b808211156200030e576000816000905550600101620002f4565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200037b8262000330565b810181811067ffffffffffffffff821117156200039d576200039c62000341565b5b80604052505050565b6000620003b262000312565b9050620003c0828262000370565b919050565b600067ffffffffffffffff821115620003e357620003e262000341565b5b620003ee8262000330565b9050602081019050919050565b60005b838110156200041b578082015181840152602081019050620003fe565b60008484015250505050565b60006200043e6200043884620003c5565b620003a6565b9050828152602081018484840111156200045d576200045c6200032b565b5b6200046a848285620003fb565b509392505050565b600082601f8301126200048a576200048962000326565b5b81516200049c84826020860162000427565b91505092915050565b600067ffffffffffffffff821115620004c357620004c262000341565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200050682620004d9565b9050919050565b6200051881620004f9565b81146200052457600080fd5b50565b60008151905062000538816200050d565b92915050565b6000620005556200054f84620004a5565b620003a6565b905080838252602082019050602084028301858111156200057b576200057a620004d4565b5b835b81811015620005a8578062000593888262000527565b8452602084019350506020810190506200057d565b5050509392505050565b600082601f830112620005ca57620005c962000326565b5b8151620005dc8482602086016200053e565b91505092915050565b6000806000606084860312156200060157620006006200031c565b5b600084015167ffffffffffffffff81111562000622576200062162000321565b5b620006308682870162000472565b935050602084015167ffffffffffffffff81111562000654576200065362000321565b5b620006628682870162000472565b925050604084015167ffffffffffffffff81111562000686576200068562000321565b5b6200069486828701620005b2565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620006f157607f821691505b602082108103620007075762000706620006a9565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620007717fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000732565b6200077d868362000732565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620007ca620007c4620007be8462000795565b6200079f565b62000795565b9050919050565b6000819050919050565b620007e683620007a9565b620007fe620007f582620007d1565b8484546200073f565b825550505050565b600090565b6200081562000806565b62000822818484620007db565b505050565b5b818110156200084a576200083e6000826200080b565b60018101905062000828565b5050565b601f821115620008995762000863816200070d565b6200086e8462000722565b810160208510156200087e578190505b620008966200088d8562000722565b83018262000827565b50505b505050565b600082821c905092915050565b6000620008be600019846008026200089e565b1980831691505092915050565b6000620008d98383620008ab565b9150826002028217905092915050565b620008f4826200069e565b67ffffffffffffffff81111562000910576200090f62000341565b5b6200091c8254620006d8565b620009298282856200084e565b600060209050601f8311600181146200096157600084156200094c578287015190505b620009588582620008cb565b865550620009c8565b601f19841662000971866200070d565b60005b828110156200099b5784890151825560018201915060208501945060208101905062000974565b86831015620009bb5784890151620009b7601f891682620008ab565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000a3b8262000795565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000a705762000a6f620009ff565b5b600182019050919050565b62000a8681620004f9565b82525050565b6000819050919050565b62000aa18162000a8c565b82525050565b600060608201905062000abe600083018662000a7b565b62000acd602083018562000a96565b62000adc604083018462000a7b565b949350505050565b612a7e8062000af46000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063959b8c3f116100a2578063d95b637111610071578063d95b6371146102e3578063dd62ed3e14610313578063fad8b32a14610343578063fc673c4f1461035f578063fe9d93031461037b57610116565b8063959b8c3f1461025d57806395d89b41146102795780639bd9bbc614610297578063a9059cbb146102b357610116565b806323b872dd116100e957806323b872dd146101a5578063313ce567146101d5578063556f0dc7146101f357806362ad1b831461021157806370a082311461022d57610116565b806306e485381461011b57806306fdde0314610139578063095ea7b31461015757806318160ddd14610187575b600080fd5b610123610397565b6040516101309190611aaa565b60405180910390f35b610141610425565b60405161014e9190611b5c565b60405180910390f35b610171600480360381019061016c9190611bf4565b6104b7565b60405161017e9190611c4f565b60405180910390f35b61018f6104da565b60405161019c9190611c79565b60405180910390f35b6101bf60048036038101906101ba9190611c94565b6104e4565b6040516101cc9190611c4f565b60405180910390f35b6101dd610535565b6040516101ea9190611d03565b60405180910390f35b6101fb61053e565b6040516102089190611c79565b60405180910390f35b61022b60048036038101906102269190611e53565b610547565b005b61024760048036038101906102429190611f06565b6105ad565b6040516102549190611c79565b60405180910390f35b61027760048036038101906102729190611f06565b6105f5565b005b610281610855565b60405161028e9190611b5c565b60405180910390f35b6102b160048036038101906102ac9190611f33565b6108e7565b005b6102cd60048036038101906102c89190611bf4565b610911565b6040516102da9190611c4f565b60405180910390f35b6102fd60048036038101906102f89190611fa2565b610951565b60405161030a9190611c4f565b60405180910390f35b61032d60048036038101906103289190611fa2565b610b02565b60405161033a9190611c79565b60405180910390f35b61035d60048036038101906103589190611f06565b610b89565b005b61037960048036038101906103749190611fe2565b610de9565b005b61039560048036038101906103909190612081565b610e4b565b005b6060600480548060200260200160405190810160405280929190818152602001828054801561041b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103d1575b5050505050905090565b6060600280546104349061210c565b80601f01602080910402602001604051908101604052809291908181526020018280546104609061210c565b80156104ad5780601f10610482576101008083540402835291602001916104ad565b820191906000526020600020905b81548152906001019060200180831161049057829003601f168201915b5050505050905090565b6000806104c2610e71565b90506104cf818585610e79565b600191505092915050565b6000600154905090565b6000806104ef610e71565b90506104fc858285611042565b610529858585604051806020016040528060008152506040518060200160405280600081525060006110ce565b60019150509392505050565b60006012905090565b60006001905090565b610558610552610e71565b86610951565b610597576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058e906121af565b60405180910390fd5b6105a6858585858560016110ce565b5050505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b8073ffffffffffffffffffffffffffffffffffffffff16610614610e71565b73ffffffffffffffffffffffffffffffffffffffff160361066a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066190612241565b60405180910390fd5b600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561075457600760006106c8610e71565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690556107f1565b600160066000610762610e71565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6107f9610e71565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f960405160405180910390a350565b6060600380546108649061210c565b80601f01602080910402602001604051908101604052809291908181526020018280546108909061210c565b80156108dd5780601f106108b2576101008083540402835291602001916108dd565b820191906000526020600020905b8154815290600101906020018083116108c057829003601f168201915b5050505050905090565b61090c6108f2610e71565b8484846040518060200160405280600081525060016110ce565b505050565b600061094761091e610e71565b8484604051806020016040528060008152506040518060200160405280600081525060006110ce565b6001905092915050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480610a695750600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168015610a685750600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b5b80610afa5750600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b905092915050565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610b91610e71565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf5906122d3565b60405180910390fd5b600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610cf157600160076000610c5e610e71565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610d85565b60066000610cfd610e71565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690555b610d8d610e71565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa160405160405180910390a350565b610dfa610df4610e71565b85610951565b610e39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e30906121af565b60405180910390fd5b610e45848484846111ec565b50505050565b610e6d610e56610e71565b8383604051806020016040528060008152506111ec565b5050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ee8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edf90612365565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4e906123f7565b60405180910390fd5b80600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516110359190611c79565b60405180910390a3505050565b600061104e8484610b02565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110c857818110156110ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b190612463565b60405180910390fd5b6110c78484848403610e79565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff160361113d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611134906124f5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036111ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a390612587565b60405180910390fd5b60006111b6610e71565b90506111c681888888888861143e565b6111d48188888888886115a5565b6111e3818888888888886117bf565b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361125b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125290612619565b60405180910390fd5b6000611265610e71565b90506112768186600087878761143e565b6112838186600087611991565b60008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905084811015611309576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611300906126ab565b60405180910390fd5b8481036000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550846001600082825461136091906126fa565b925050819055508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a40988787876040516113c893929190612783565b60405180910390a3600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8760405161142e9190611c79565b60405180910390a3505050505050565b6000731820a4b7618bde71dce8cdc73aab6c95905fad2473ffffffffffffffffffffffffffffffffffffffff1663aabbb8ca877f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956040518363ffffffff1660e01b81526004016114af9291906127f0565b602060405180830381865afa1580156114cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f0919061282e565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461159c578073ffffffffffffffffffffffffffffffffffffffff166375ab97828888888888886040518763ffffffff1660e01b81526004016115699695949392919061285b565b600060405180830381600087803b15801561158357600080fd5b505af1158015611597573d6000803e3d6000fd5b505050505b50505050505050565b6115b186868686611991565b60008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015611637576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162e9061293c565b60405180910390fd5b8381036000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550836000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116ca919061295c565b925050819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc8261467798787878760405161174993929190612783565b60405180910390a48473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040516117ae9190611c79565b60405180910390a350505050505050565b6000731820a4b7618bde71dce8cdc73aab6c95905fad2473ffffffffffffffffffffffffffffffffffffffff1663aabbb8ca877fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6040518363ffffffff1660e01b81526004016118309291906127f0565b602060405180830381865afa15801561184d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611871919061282e565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611920578073ffffffffffffffffffffffffffffffffffffffff166223de298989898989896040518763ffffffff1660e01b81526004016118e99695949392919061285b565b600060405180830381600087803b15801561190357600080fd5b505af1158015611917573d6000803e3d6000fd5b50505050611987565b8115611986576119458673ffffffffffffffffffffffffffffffffffffffff16611997565b15611985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197c90612a28565b60405180910390fd5b5b5b5050505050505050565b50505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a11826119e6565b9050919050565b611a2181611a06565b82525050565b6000611a338383611a18565b60208301905092915050565b6000602082019050919050565b6000611a57826119ba565b611a6181856119c5565b9350611a6c836119d6565b8060005b83811015611a9d578151611a848882611a27565b9750611a8f83611a3f565b925050600181019050611a70565b5085935050505092915050565b60006020820190508181036000830152611ac48184611a4c565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611b06578082015181840152602081019050611aeb565b60008484015250505050565b6000601f19601f8301169050919050565b6000611b2e82611acc565b611b388185611ad7565b9350611b48818560208601611ae8565b611b5181611b12565b840191505092915050565b60006020820190508181036000830152611b768184611b23565b905092915050565b6000604051905090565b600080fd5b600080fd5b611b9b81611a06565b8114611ba657600080fd5b50565b600081359050611bb881611b92565b92915050565b6000819050919050565b611bd181611bbe565b8114611bdc57600080fd5b50565b600081359050611bee81611bc8565b92915050565b60008060408385031215611c0b57611c0a611b88565b5b6000611c1985828601611ba9565b9250506020611c2a85828601611bdf565b9150509250929050565b60008115159050919050565b611c4981611c34565b82525050565b6000602082019050611c646000830184611c40565b92915050565b611c7381611bbe565b82525050565b6000602082019050611c8e6000830184611c6a565b92915050565b600080600060608486031215611cad57611cac611b88565b5b6000611cbb86828701611ba9565b9350506020611ccc86828701611ba9565b9250506040611cdd86828701611bdf565b9150509250925092565b600060ff82169050919050565b611cfd81611ce7565b82525050565b6000602082019050611d186000830184611cf4565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d6082611b12565b810181811067ffffffffffffffff82111715611d7f57611d7e611d28565b5b80604052505050565b6000611d92611b7e565b9050611d9e8282611d57565b919050565b600067ffffffffffffffff821115611dbe57611dbd611d28565b5b611dc782611b12565b9050602081019050919050565b82818337600083830152505050565b6000611df6611df184611da3565b611d88565b905082815260208101848484011115611e1257611e11611d23565b5b611e1d848285611dd4565b509392505050565b600082601f830112611e3a57611e39611d1e565b5b8135611e4a848260208601611de3565b91505092915050565b600080600080600060a08688031215611e6f57611e6e611b88565b5b6000611e7d88828901611ba9565b9550506020611e8e88828901611ba9565b9450506040611e9f88828901611bdf565b935050606086013567ffffffffffffffff811115611ec057611ebf611b8d565b5b611ecc88828901611e25565b925050608086013567ffffffffffffffff811115611eed57611eec611b8d565b5b611ef988828901611e25565b9150509295509295909350565b600060208284031215611f1c57611f1b611b88565b5b6000611f2a84828501611ba9565b91505092915050565b600080600060608486031215611f4c57611f4b611b88565b5b6000611f5a86828701611ba9565b9350506020611f6b86828701611bdf565b925050604084013567ffffffffffffffff811115611f8c57611f8b611b8d565b5b611f9886828701611e25565b9150509250925092565b60008060408385031215611fb957611fb8611b88565b5b6000611fc785828601611ba9565b9250506020611fd885828601611ba9565b9150509250929050565b60008060008060808587031215611ffc57611ffb611b88565b5b600061200a87828801611ba9565b945050602061201b87828801611bdf565b935050604085013567ffffffffffffffff81111561203c5761203b611b8d565b5b61204887828801611e25565b925050606085013567ffffffffffffffff81111561206957612068611b8d565b5b61207587828801611e25565b91505092959194509250565b6000806040838503121561209857612097611b88565b5b60006120a685828601611bdf565b925050602083013567ffffffffffffffff8111156120c7576120c6611b8d565b5b6120d385828601611e25565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061212457607f821691505b602082108103612137576121366120dd565b5b50919050565b7f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60008201527f7220666f7220686f6c6465720000000000000000000000000000000000000000602082015250565b6000612199602c83611ad7565b91506121a48261213d565b604082019050919050565b600060208201905081810360008301526121c88161218c565b9050919050565b7f4552433737373a20617574686f72697a696e672073656c66206173206f70657260008201527f61746f7200000000000000000000000000000000000000000000000000000000602082015250565b600061222b602483611ad7565b9150612236826121cf565b604082019050919050565b6000602082019050818103600083015261225a8161221e565b9050919050565b7f4552433737373a207265766f6b696e672073656c66206173206f70657261746f60008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006122bd602183611ad7565b91506122c882612261565b604082019050919050565b600060208201905081810360008301526122ec816122b0565b9050919050565b7f4552433737373a20617070726f76652066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061234f602583611ad7565b915061235a826122f3565b604082019050919050565b6000602082019050818103600083015261237e81612342565b9050919050565b7f4552433737373a20617070726f766520746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006123e1602383611ad7565b91506123ec82612385565b604082019050919050565b60006020820190508181036000830152612410816123d4565b9050919050565b7f4552433737373a20696e73756666696369656e7420616c6c6f77616e63650000600082015250565b600061244d601e83611ad7565b915061245882612417565b602082019050919050565b6000602082019050818103600083015261247c81612440565b9050919050565b7f4552433737373a207472616e736665722066726f6d20746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006124df602683611ad7565b91506124ea82612483565b604082019050919050565b6000602082019050818103600083015261250e816124d2565b9050919050565b7f4552433737373a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612571602483611ad7565b915061257c82612515565b604082019050919050565b600060208201905081810360008301526125a081612564565b9050919050565b7f4552433737373a206275726e2066726f6d20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000612603602283611ad7565b915061260e826125a7565b604082019050919050565b60006020820190508181036000830152612632816125f6565b9050919050565b7f4552433737373a206275726e20616d6f756e7420657863656564732062616c6160008201527f6e63650000000000000000000000000000000000000000000000000000000000602082015250565b6000612695602383611ad7565b91506126a082612639565b604082019050919050565b600060208201905081810360008301526126c481612688565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061270582611bbe565b915061271083611bbe565b9250828203905081811115612728576127276126cb565b5b92915050565b600081519050919050565b600082825260208201905092915050565b60006127558261272e565b61275f8185612739565b935061276f818560208601611ae8565b61277881611b12565b840191505092915050565b60006060820190506127986000830186611c6a565b81810360208301526127aa818561274a565b905081810360408301526127be818461274a565b9050949350505050565b6127d181611a06565b82525050565b6000819050919050565b6127ea816127d7565b82525050565b600060408201905061280560008301856127c8565b61281260208301846127e1565b9392505050565b60008151905061282881611b92565b92915050565b60006020828403121561284457612843611b88565b5b600061285284828501612819565b91505092915050565b600060c08201905061287060008301896127c8565b61287d60208301886127c8565b61288a60408301876127c8565b6128976060830186611c6a565b81810360808301526128a9818561274a565b905081810360a08301526128bd818461274a565b9050979650505050505050565b7f4552433737373a207472616e7366657220616d6f756e7420657863656564732060008201527f62616c616e636500000000000000000000000000000000000000000000000000602082015250565b6000612926602783611ad7565b9150612931826128ca565b604082019050919050565b6000602082019050818103600083015261295581612919565b9050919050565b600061296782611bbe565b915061297283611bbe565b925082820190508082111561298a576129896126cb565b5b92915050565b7f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460008201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60208201527f6b656e73526563697069656e7400000000000000000000000000000000000000604082015250565b6000612a12604d83611ad7565b9150612a1d82612990565b606082019050919050565b60006020820190508181036000830152612a4181612a05565b905091905056fea264697066735822122014e10a8d34903e142f43c17b0e012419cb01a52347e233c23a63d3de79e661d964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3572 CODESIZE SUB DUP1 PUSH3 0x3572 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x5E5 JUMP JUMPDEST DUP3 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x8E9 JUMP JUMPDEST POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x8E9 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x73 SWAP3 SWAP2 SWAP1 PUSH3 0x264 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x10C JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x9D JUMPI PUSH3 0x9C PUSH3 0x9D0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH3 0x103 SWAP1 PUSH3 0xA2E JUMP JUMPDEST SWAP2 POP POP PUSH3 0x77 JUMP JUMPDEST POP PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x29965A1D ADDRESS PUSH32 0xAC7FBAB5F54A3CA8194167523C6753BFEB96A445279294B6125B68CCE2177054 ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x180 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xAA7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x29965A1D ADDRESS PUSH32 0xAEA199E31A596269B42CDAFD93407F14436DB6E4CAD65417994C2EB37381E05A ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x227 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xAA7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x257 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP PUSH3 0xAE4 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x2E0 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2DF JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x285 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2EF SWAP2 SWAP1 PUSH3 0x2F3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x30E JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2F4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x37B DUP3 PUSH3 0x330 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x39D JUMPI PUSH3 0x39C PUSH3 0x341 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3B2 PUSH3 0x312 JUMP JUMPDEST SWAP1 POP PUSH3 0x3C0 DUP3 DUP3 PUSH3 0x370 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x3E3 JUMPI PUSH3 0x3E2 PUSH3 0x341 JUMP JUMPDEST JUMPDEST PUSH3 0x3EE DUP3 PUSH3 0x330 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x41B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x3FE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x43E PUSH3 0x438 DUP5 PUSH3 0x3C5 JUMP JUMPDEST PUSH3 0x3A6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x45D JUMPI PUSH3 0x45C PUSH3 0x32B JUMP JUMPDEST JUMPDEST PUSH3 0x46A DUP5 DUP3 DUP6 PUSH3 0x3FB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x48A JUMPI PUSH3 0x489 PUSH3 0x326 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x49C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x427 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x4C3 JUMPI PUSH3 0x4C2 PUSH3 0x341 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x506 DUP3 PUSH3 0x4D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x518 DUP2 PUSH3 0x4F9 JUMP JUMPDEST DUP2 EQ PUSH3 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x538 DUP2 PUSH3 0x50D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x555 PUSH3 0x54F DUP5 PUSH3 0x4A5 JUMP JUMPDEST PUSH3 0x3A6 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x57B JUMPI PUSH3 0x57A PUSH3 0x4D4 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5A8 JUMPI DUP1 PUSH3 0x593 DUP9 DUP3 PUSH3 0x527 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x57D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x5CA JUMPI PUSH3 0x5C9 PUSH3 0x326 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x5DC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x53E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x601 JUMPI PUSH3 0x600 PUSH3 0x31C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x622 JUMPI PUSH3 0x621 PUSH3 0x321 JUMP JUMPDEST JUMPDEST PUSH3 0x630 DUP7 DUP3 DUP8 ADD PUSH3 0x472 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x654 JUMPI PUSH3 0x653 PUSH3 0x321 JUMP JUMPDEST JUMPDEST PUSH3 0x662 DUP7 DUP3 DUP8 ADD PUSH3 0x472 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x686 JUMPI PUSH3 0x685 PUSH3 0x321 JUMP JUMPDEST JUMPDEST PUSH3 0x694 DUP7 DUP3 DUP8 ADD PUSH3 0x5B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x6F1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x707 JUMPI PUSH3 0x706 PUSH3 0x6A9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x771 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x732 JUMP JUMPDEST PUSH3 0x77D DUP7 DUP4 PUSH3 0x732 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7CA PUSH3 0x7C4 PUSH3 0x7BE DUP5 PUSH3 0x795 JUMP JUMPDEST PUSH3 0x79F JUMP JUMPDEST PUSH3 0x795 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7E6 DUP4 PUSH3 0x7A9 JUMP JUMPDEST PUSH3 0x7FE PUSH3 0x7F5 DUP3 PUSH3 0x7D1 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x73F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x815 PUSH3 0x806 JUMP JUMPDEST PUSH3 0x822 DUP2 DUP5 DUP5 PUSH3 0x7DB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x84A JUMPI PUSH3 0x83E PUSH1 0x0 DUP3 PUSH3 0x80B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x828 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x899 JUMPI PUSH3 0x863 DUP2 PUSH3 0x70D JUMP JUMPDEST PUSH3 0x86E DUP5 PUSH3 0x722 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x87E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x896 PUSH3 0x88D DUP6 PUSH3 0x722 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x827 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8BE PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x89E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8D9 DUP4 DUP4 PUSH3 0x8AB JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x8F4 DUP3 PUSH3 0x69E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x910 JUMPI PUSH3 0x90F PUSH3 0x341 JUMP JUMPDEST JUMPDEST PUSH3 0x91C DUP3 SLOAD PUSH3 0x6D8 JUMP JUMPDEST PUSH3 0x929 DUP3 DUP3 DUP6 PUSH3 0x84E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x961 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x94C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x958 DUP6 DUP3 PUSH3 0x8CB JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x9C8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x971 DUP7 PUSH3 0x70D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x99B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x974 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x9BB JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x9B7 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x8AB JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xA3B DUP3 PUSH3 0x795 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0xA70 JUMPI PUSH3 0xA6F PUSH3 0x9FF JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xA86 DUP2 PUSH3 0x4F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xAA1 DUP2 PUSH3 0xA8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xABE PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0xA7B JUMP JUMPDEST PUSH3 0xACD PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xA96 JUMP JUMPDEST PUSH3 0xADC PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xA7B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2A7E DUP1 PUSH3 0xAF4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x959B8C3F GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD95B6371 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD95B6371 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xFAD8B32A EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xFC673C4F EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xFE9D9303 EQ PUSH2 0x37B JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x959B8C3F EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x9BD9BBC6 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2B3 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x556F0DC7 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x62AD1B83 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22D JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6E48538 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x187 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x397 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1BF4 JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1C94 JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x1D03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH2 0x53E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x547 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x281 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH2 0x8E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1BF4 JUMP JUMPDEST PUSH2 0x911 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0xB02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST PUSH2 0xB89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0xDE9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x2081 JUMP JUMPDEST PUSH2 0xE4B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x3D1 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x434 SWAP1 PUSH2 0x210C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x460 SWAP1 PUSH2 0x210C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x482 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x490 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4C2 PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP PUSH2 0x4CF DUP2 DUP6 DUP6 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4EF PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP PUSH2 0x4FC DUP6 DUP3 DUP6 PUSH2 0x1042 JUMP JUMPDEST PUSH2 0x529 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x10CE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x558 PUSH2 0x552 PUSH2 0xE71 JUMP JUMPDEST DUP7 PUSH2 0x951 JUMP JUMPDEST PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58E SWAP1 PUSH2 0x21AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A6 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x10CE JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x614 PUSH2 0xE71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x66A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x661 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x754 JUMPI PUSH1 0x7 PUSH1 0x0 PUSH2 0x6C8 PUSH2 0xE71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x762 PUSH2 0xE71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x7F9 PUSH2 0xE71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x864 SWAP1 PUSH2 0x210C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x890 SWAP1 PUSH2 0x210C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x90C PUSH2 0x8F2 PUSH2 0xE71 JUMP JUMPDEST DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x1 PUSH2 0x10CE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x947 PUSH2 0x91E PUSH2 0xE71 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x10CE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xA69 JUMPI POP PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xA68 JUMPI POP PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST JUMPDEST DUP1 PUSH2 0xAFA JUMPI POP PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB91 PUSH2 0xE71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF5 SWAP1 PUSH2 0x22D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCF1 JUMPI PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xC5E PUSH2 0xE71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD85 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 PUSH2 0xCFD PUSH2 0xE71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE JUMPDEST PUSH2 0xD8D PUSH2 0xE71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0xDFA PUSH2 0xDF4 PUSH2 0xE71 JUMP JUMPDEST DUP6 PUSH2 0x951 JUMP JUMPDEST PUSH2 0xE39 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE30 SWAP1 PUSH2 0x21AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE45 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11EC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xE6D PUSH2 0xE56 PUSH2 0xE71 JUMP JUMPDEST DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x11EC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDF SWAP1 PUSH2 0x2365 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4E SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1035 SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104E DUP5 DUP5 PUSH2 0xB02 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x10C8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x10BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B1 SWAP1 PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10C7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xE79 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x113D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1134 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A3 SWAP1 PUSH2 0x2587 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11B6 PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP PUSH2 0x11C6 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x11D4 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0x11E3 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x17BF JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x125B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1252 SWAP1 PUSH2 0x2619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1265 PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP PUSH2 0x1276 DUP2 DUP7 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x1283 DUP2 DUP7 PUSH1 0x0 DUP8 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x1309 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1300 SWAP1 PUSH2 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP2 SUB PUSH1 0x0 DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1360 SWAP2 SWAP1 PUSH2 0x26FA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x13C8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2783 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP8 PUSH1 0x40 MLOAD PUSH2 0x142E SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAABBB8CA DUP8 PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14AF SWAP3 SWAP2 SWAP1 PUSH2 0x27F0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14F0 SWAP2 SWAP1 PUSH2 0x282E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x159C JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x75AB9782 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1569 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x285B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1597 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15B1 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1637 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162E SWAP1 PUSH2 0x293C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP2 SUB PUSH1 0x0 DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16CA SWAP2 SWAP1 PUSH2 0x295C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1749 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2783 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0x17AE SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAABBB8CA DUP8 PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1830 SWAP3 SWAP2 SWAP1 PUSH2 0x27F0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x184D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1871 SWAP2 SWAP1 PUSH2 0x282E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1920 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x23DE29 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18E9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x285B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1917 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1987 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1986 JUMPI PUSH2 0x1945 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1997 JUMP JUMPDEST ISZERO PUSH2 0x1985 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x197C SWAP1 PUSH2 0x2A28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A11 DUP3 PUSH2 0x19E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A21 DUP2 PUSH2 0x1A06 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A33 DUP4 DUP4 PUSH2 0x1A18 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A57 DUP3 PUSH2 0x19BA JUMP JUMPDEST PUSH2 0x1A61 DUP2 DUP6 PUSH2 0x19C5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A6C DUP4 PUSH2 0x19D6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A9D JUMPI DUP2 MLOAD PUSH2 0x1A84 DUP9 DUP3 PUSH2 0x1A27 JUMP JUMPDEST SWAP8 POP PUSH2 0x1A8F DUP4 PUSH2 0x1A3F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A70 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AC4 DUP2 DUP5 PUSH2 0x1A4C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B06 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AEB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B2E DUP3 PUSH2 0x1ACC JUMP JUMPDEST PUSH2 0x1B38 DUP2 DUP6 PUSH2 0x1AD7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B48 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AE8 JUMP JUMPDEST PUSH2 0x1B51 DUP2 PUSH2 0x1B12 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B76 DUP2 DUP5 PUSH2 0x1B23 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B9B DUP2 PUSH2 0x1A06 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BB8 DUP2 PUSH2 0x1B92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD1 DUP2 PUSH2 0x1BBE JUMP JUMPDEST DUP2 EQ PUSH2 0x1BDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BEE DUP2 PUSH2 0x1BC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C0B JUMPI PUSH2 0x1C0A PUSH2 0x1B88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C19 DUP6 DUP3 DUP7 ADD PUSH2 0x1BA9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C2A DUP6 DUP3 DUP7 ADD PUSH2 0x1BDF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C49 DUP2 PUSH2 0x1C34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C64 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C73 DUP2 PUSH2 0x1BBE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C8E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CAD JUMPI PUSH2 0x1CAC PUSH2 0x1B88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CBB DUP7 DUP3 DUP8 ADD PUSH2 0x1BA9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1CCC DUP7 DUP3 DUP8 ADD PUSH2 0x1BA9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1CDD DUP7 DUP3 DUP8 ADD PUSH2 0x1BDF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CFD DUP2 PUSH2 0x1CE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1D60 DUP3 PUSH2 0x1B12 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D7F JUMPI PUSH2 0x1D7E PUSH2 0x1D28 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D92 PUSH2 0x1B7E JUMP JUMPDEST SWAP1 POP PUSH2 0x1D9E DUP3 DUP3 PUSH2 0x1D57 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DBE JUMPI PUSH2 0x1DBD PUSH2 0x1D28 JUMP JUMPDEST JUMPDEST PUSH2 0x1DC7 DUP3 PUSH2 0x1B12 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF6 PUSH2 0x1DF1 DUP5 PUSH2 0x1DA3 JUMP JUMPDEST PUSH2 0x1D88 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E12 JUMPI PUSH2 0x1E11 PUSH2 0x1D23 JUMP JUMPDEST JUMPDEST PUSH2 0x1E1D DUP5 DUP3 DUP6 PUSH2 0x1DD4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E3A JUMPI PUSH2 0x1E39 PUSH2 0x1D1E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E4A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E6F JUMPI PUSH2 0x1E6E PUSH2 0x1B88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E7D DUP9 DUP3 DUP10 ADD PUSH2 0x1BA9 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1E8E DUP9 DUP3 DUP10 ADD PUSH2 0x1BA9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1E9F DUP9 DUP3 DUP10 ADD PUSH2 0x1BDF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EC0 JUMPI PUSH2 0x1EBF PUSH2 0x1B8D JUMP JUMPDEST JUMPDEST PUSH2 0x1ECC DUP9 DUP3 DUP10 ADD PUSH2 0x1E25 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EED JUMPI PUSH2 0x1EEC PUSH2 0x1B8D JUMP JUMPDEST JUMPDEST PUSH2 0x1EF9 DUP9 DUP3 DUP10 ADD PUSH2 0x1E25 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F1C JUMPI PUSH2 0x1F1B PUSH2 0x1B88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F2A DUP5 DUP3 DUP6 ADD PUSH2 0x1BA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F4C JUMPI PUSH2 0x1F4B PUSH2 0x1B88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F5A DUP7 DUP3 DUP8 ADD PUSH2 0x1BA9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F6B DUP7 DUP3 DUP8 ADD PUSH2 0x1BDF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F8C JUMPI PUSH2 0x1F8B PUSH2 0x1B8D JUMP JUMPDEST JUMPDEST PUSH2 0x1F98 DUP7 DUP3 DUP8 ADD PUSH2 0x1E25 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FB9 JUMPI PUSH2 0x1FB8 PUSH2 0x1B88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FC7 DUP6 DUP3 DUP7 ADD PUSH2 0x1BA9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FD8 DUP6 DUP3 DUP7 ADD PUSH2 0x1BA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1FFC JUMPI PUSH2 0x1FFB PUSH2 0x1B88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x200A DUP8 DUP3 DUP9 ADD PUSH2 0x1BA9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x201B DUP8 DUP3 DUP9 ADD PUSH2 0x1BDF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x203C JUMPI PUSH2 0x203B PUSH2 0x1B8D JUMP JUMPDEST JUMPDEST PUSH2 0x2048 DUP8 DUP3 DUP9 ADD PUSH2 0x1E25 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2069 JUMPI PUSH2 0x2068 PUSH2 0x1B8D JUMP JUMPDEST JUMPDEST PUSH2 0x2075 DUP8 DUP3 DUP9 ADD PUSH2 0x1E25 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2098 JUMPI PUSH2 0x2097 PUSH2 0x1B88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20A6 DUP6 DUP3 DUP7 ADD PUSH2 0x1BDF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20C7 JUMPI PUSH2 0x20C6 PUSH2 0x1B8D JUMP JUMPDEST JUMPDEST PUSH2 0x20D3 DUP6 DUP3 DUP7 ADD PUSH2 0x1E25 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2124 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2137 JUMPI PUSH2 0x2136 PUSH2 0x20DD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7220666F7220686F6C6465720000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2199 PUSH1 0x2C DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x21A4 DUP3 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21C8 DUP2 PUSH2 0x218C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433737373A20617574686F72697A696E672073656C66206173206F706572 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x61746F7200000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222B PUSH1 0x24 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2236 DUP3 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x225A DUP2 PUSH2 0x221E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BD PUSH1 0x21 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x22C8 DUP3 PUSH2 0x2261 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22EC DUP2 PUSH2 0x22B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x234F PUSH1 0x25 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x235A DUP3 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x237E DUP2 PUSH2 0x2342 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433737373A20617070726F766520746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E1 PUSH1 0x23 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x23EC DUP3 PUSH2 0x2385 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2410 DUP2 PUSH2 0x23D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433737373A20696E73756666696369656E7420616C6C6F77616E63650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x244D PUSH1 0x1E DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2458 DUP3 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x247C DUP2 PUSH2 0x2440 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24DF PUSH1 0x26 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x24EA DUP3 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x250E DUP2 PUSH2 0x24D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433737373A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2571 PUSH1 0x24 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x257C DUP3 PUSH2 0x2515 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25A0 DUP2 PUSH2 0x2564 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2603 PUSH1 0x22 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x260E DUP3 PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2632 DUP2 PUSH2 0x25F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E63650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2695 PUSH1 0x23 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x26A0 DUP3 PUSH2 0x2639 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26C4 DUP2 PUSH2 0x2688 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2705 DUP3 PUSH2 0x1BBE JUMP JUMPDEST SWAP2 POP PUSH2 0x2710 DUP4 PUSH2 0x1BBE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2728 JUMPI PUSH2 0x2727 PUSH2 0x26CB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2755 DUP3 PUSH2 0x272E JUMP JUMPDEST PUSH2 0x275F DUP2 DUP6 PUSH2 0x2739 JUMP JUMPDEST SWAP4 POP PUSH2 0x276F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AE8 JUMP JUMPDEST PUSH2 0x2778 DUP2 PUSH2 0x1B12 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2798 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1C6A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x27AA DUP2 DUP6 PUSH2 0x274A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x27BE DUP2 DUP5 PUSH2 0x274A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x27D1 DUP2 PUSH2 0x1A06 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27EA DUP2 PUSH2 0x27D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2805 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x2812 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x27E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2828 DUP2 PUSH2 0x1B92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2844 JUMPI PUSH2 0x2843 PUSH2 0x1B88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2852 DUP5 DUP3 DUP6 ADD PUSH2 0x2819 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2870 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x287D PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x288A PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x2897 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1C6A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x28A9 DUP2 DUP6 PUSH2 0x274A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x28BD DUP2 DUP5 PUSH2 0x274A JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x62616C616E636500000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2926 PUSH1 0x27 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2931 DUP3 PUSH2 0x28CA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2955 DUP2 PUSH2 0x2919 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2967 DUP3 PUSH2 0x1BBE JUMP JUMPDEST SWAP2 POP PUSH2 0x2972 DUP4 PUSH2 0x1BBE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x298A JUMPI PUSH2 0x2989 PUSH2 0x26CB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6B656E73526563697069656E7400000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A12 PUSH1 0x4D DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A1D DUP3 PUSH2 0x2990 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A41 DUP2 PUSH2 0x2A05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ 0xE1 EXP DUP14 CALLVALUE SWAP1 RETURNDATACOPY EQ 0x2F NUMBER 0xC1 PUSH28 0xE012419CB01A52347E233C23A63D3DE79E661D964736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "24363:17821:0:-:0;;;25622:606;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25733:5;25725;:13;;;;;;:::i;:::-;;25759:7;25749;:17;;;;;;:::i;:::-;;25804;25779:22;:42;;;;;;;;;;;;:::i;:::-;;25837:9;25832:128;25856:17;:24;25852:1;:28;25832:128;;;25944:4;25902:17;:39;25920:17;25938:1;25920:20;;;;;;;;:::i;:::-;;;;;;;;25902:39;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;25882:3;;;;;:::i;:::-;;;;25832:128;;;;24520:42;26004:41;;;26054:4;26061:24;26095:4;26004:97;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24520:42;26112:41;;;26162:4;26169:23;26202:4;26112:96;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25622:606;;;24363:17821;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:311::-;2754:4;2844:18;2836:6;2833:30;2830:56;;;2866:18;;:::i;:::-;2830:56;2916:4;2908:6;2904:17;2896:25;;2976:4;2970;2966:15;2958:23;;2677:311;;;:::o;2994:117::-;3103:1;3100;3093:12;3117:126;3154:7;3194:42;3187:5;3183:54;3172:65;;3117:126;;;:::o;3249:96::-;3286:7;3315:24;3333:5;3315:24;:::i;:::-;3304:35;;3249:96;;;:::o;3351:122::-;3424:24;3442:5;3424:24;:::i;:::-;3417:5;3414:35;3404:63;;3463:1;3460;3453:12;3404:63;3351:122;:::o;3479:143::-;3536:5;3567:6;3561:13;3552:22;;3583:33;3610:5;3583:33;:::i;:::-;3479:143;;;;:::o;3645:732::-;3752:5;3777:81;3793:64;3850:6;3793:64;:::i;:::-;3777:81;:::i;:::-;3768:90;;3878:5;3907:6;3900:5;3893:21;3941:4;3934:5;3930:16;3923:23;;3994:4;3986:6;3982:17;3974:6;3970:30;4023:3;4015:6;4012:15;4009:122;;;4042:79;;:::i;:::-;4009:122;4157:6;4140:231;4174:6;4169:3;4166:15;4140:231;;;4249:3;4278:48;4322:3;4310:10;4278:48;:::i;:::-;4273:3;4266:61;4356:4;4351:3;4347:14;4340:21;;4216:155;4200:4;4195:3;4191:14;4184:21;;4140:231;;;4144:21;3758:619;;3645:732;;;;;:::o;4400:385::-;4482:5;4531:3;4524:4;4516:6;4512:17;4508:27;4498:122;;4539:79;;:::i;:::-;4498:122;4649:6;4643:13;4674:105;4775:3;4767:6;4760:4;4752:6;4748:17;4674:105;:::i;:::-;4665:114;;4488:297;4400:385;;;;:::o;4791:1212::-;4924:6;4932;4940;4989:2;4977:9;4968:7;4964:23;4960:32;4957:119;;;4995:79;;:::i;:::-;4957:119;5136:1;5125:9;5121:17;5115:24;5166:18;5158:6;5155:30;5152:117;;;5188:79;;:::i;:::-;5152:117;5293:74;5359:7;5350:6;5339:9;5335:22;5293:74;:::i;:::-;5283:84;;5086:291;5437:2;5426:9;5422:18;5416:25;5468:18;5460:6;5457:30;5454:117;;;5490:79;;:::i;:::-;5454:117;5595:74;5661:7;5652:6;5641:9;5637:22;5595:74;:::i;:::-;5585:84;;5387:292;5739:2;5728:9;5724:18;5718:25;5770:18;5762:6;5759:30;5756:117;;;5792:79;;:::i;:::-;5756:117;5897:89;5978:7;5969:6;5958:9;5954:22;5897:89;:::i;:::-;5887:99;;5689:307;4791:1212;;;;;:::o;6009:99::-;6061:6;6095:5;6089:12;6079:22;;6009:99;;;:::o;6114:180::-;6162:77;6159:1;6152:88;6259:4;6256:1;6249:15;6283:4;6280:1;6273:15;6300:320;6344:6;6381:1;6375:4;6371:12;6361:22;;6428:1;6422:4;6418:12;6449:18;6439:81;;6505:4;6497:6;6493:17;6483:27;;6439:81;6567:2;6559:6;6556:14;6536:18;6533:38;6530:84;;6586:18;;:::i;:::-;6530:84;6351:269;6300:320;;;:::o;6626:141::-;6675:4;6698:3;6690:11;;6721:3;6718:1;6711:14;6755:4;6752:1;6742:18;6734:26;;6626:141;;;:::o;6773:93::-;6810:6;6857:2;6852;6845:5;6841:14;6837:23;6827:33;;6773:93;;;:::o;6872:107::-;6916:8;6966:5;6960:4;6956:16;6935:37;;6872:107;;;;:::o;6985:393::-;7054:6;7104:1;7092:10;7088:18;7127:97;7157:66;7146:9;7127:97;:::i;:::-;7245:39;7275:8;7264:9;7245:39;:::i;:::-;7233:51;;7317:4;7313:9;7306:5;7302:21;7293:30;;7366:4;7356:8;7352:19;7345:5;7342:30;7332:40;;7061:317;;6985:393;;;;;:::o;7384:77::-;7421:7;7450:5;7439:16;;7384:77;;;:::o;7467:60::-;7495:3;7516:5;7509:12;;7467:60;;;:::o;7533:142::-;7583:9;7616:53;7634:34;7643:24;7661:5;7643:24;:::i;:::-;7634:34;:::i;:::-;7616:53;:::i;:::-;7603:66;;7533:142;;;:::o;7681:75::-;7724:3;7745:5;7738:12;;7681:75;;;:::o;7762:269::-;7872:39;7903:7;7872:39;:::i;:::-;7933:91;7982:41;8006:16;7982:41;:::i;:::-;7974:6;7967:4;7961:11;7933:91;:::i;:::-;7927:4;7920:105;7838:193;7762:269;;;:::o;8037:73::-;8082:3;8037:73;:::o;8116:189::-;8193:32;;:::i;:::-;8234:65;8292:6;8284;8278:4;8234:65;:::i;:::-;8169:136;8116:189;;:::o;8311:186::-;8371:120;8388:3;8381:5;8378:14;8371:120;;;8442:39;8479:1;8472:5;8442:39;:::i;:::-;8415:1;8408:5;8404:13;8395:22;;8371:120;;;8311:186;;:::o;8503:543::-;8604:2;8599:3;8596:11;8593:446;;;8638:38;8670:5;8638:38;:::i;:::-;8722:29;8740:10;8722:29;:::i;:::-;8712:8;8708:44;8905:2;8893:10;8890:18;8887:49;;;8926:8;8911:23;;8887:49;8949:80;9005:22;9023:3;9005:22;:::i;:::-;8995:8;8991:37;8978:11;8949:80;:::i;:::-;8608:431;;8593:446;8503:543;;;:::o;9052:117::-;9106:8;9156:5;9150:4;9146:16;9125:37;;9052:117;;;;:::o;9175:169::-;9219:6;9252:51;9300:1;9296:6;9288:5;9285:1;9281:13;9252:51;:::i;:::-;9248:56;9333:4;9327;9323:15;9313:25;;9226:118;9175:169;;;;:::o;9349:295::-;9425:4;9571:29;9596:3;9590:4;9571:29;:::i;:::-;9563:37;;9633:3;9630:1;9626:11;9620:4;9617:21;9609:29;;9349:295;;;;:::o;9649:1395::-;9766:37;9799:3;9766:37;:::i;:::-;9868:18;9860:6;9857:30;9854:56;;;9890:18;;:::i;:::-;9854:56;9934:38;9966:4;9960:11;9934:38;:::i;:::-;10019:67;10079:6;10071;10065:4;10019:67;:::i;:::-;10113:1;10137:4;10124:17;;10169:2;10161:6;10158:14;10186:1;10181:618;;;;10843:1;10860:6;10857:77;;;10909:9;10904:3;10900:19;10894:26;10885:35;;10857:77;10960:67;11020:6;11013:5;10960:67;:::i;:::-;10954:4;10947:81;10816:222;10151:887;;10181:618;10233:4;10229:9;10221:6;10217:22;10267:37;10299:4;10267:37;:::i;:::-;10326:1;10340:208;10354:7;10351:1;10348:14;10340:208;;;10433:9;10428:3;10424:19;10418:26;10410:6;10403:42;10484:1;10476:6;10472:14;10462:24;;10531:2;10520:9;10516:18;10503:31;;10377:4;10374:1;10370:12;10365:17;;10340:208;;;10576:6;10567:7;10564:19;10561:179;;;10634:9;10629:3;10625:19;10619:26;10677:48;10719:4;10711:6;10707:17;10696:9;10677:48;:::i;:::-;10669:6;10662:64;10584:156;10561:179;10786:1;10782;10774:6;10770:14;10766:22;10760:4;10753:36;10188:611;;;10151:887;;9741:1303;;;9649:1395;;:::o;11050:180::-;11098:77;11095:1;11088:88;11195:4;11192:1;11185:15;11219:4;11216:1;11209:15;11236:180;11284:77;11281:1;11274:88;11381:4;11378:1;11371:15;11405:4;11402:1;11395:15;11422:233;11461:3;11484:24;11502:5;11484:24;:::i;:::-;11475:33;;11530:66;11523:5;11520:77;11517:103;;11600:18;;:::i;:::-;11517:103;11647:1;11640:5;11636:13;11629:20;;11422:233;;;:::o;11661:118::-;11748:24;11766:5;11748:24;:::i;:::-;11743:3;11736:37;11661:118;;:::o;11785:77::-;11822:7;11851:5;11840:16;;11785:77;;;:::o;11868:118::-;11955:24;11973:5;11955:24;:::i;:::-;11950:3;11943:37;11868:118;;:::o;11992:442::-;12141:4;12179:2;12168:9;12164:18;12156:26;;12192:71;12260:1;12249:9;12245:17;12236:6;12192:71;:::i;:::-;12273:72;12341:2;12330:9;12326:18;12317:6;12273:72;:::i;:::-;12355;12423:2;12412:9;12408:18;12399:6;12355:72;:::i;:::-;11992:442;;;;;;:::o;24363:17821:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1624": {
									"entryPoint": 3705,
									"id": 1624,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1783": {
									"entryPoint": 6545,
									"id": 1783,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1513": {
									"entryPoint": 4588,
									"id": 1513,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_callTokensReceived_1727": {
									"entryPoint": 6079,
									"id": 1727,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_callTokensToSend_1669": {
									"entryPoint": 5182,
									"id": 1669,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_move_1579": {
									"entryPoint": 5541,
									"id": 1579,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_606": {
									"entryPoint": 3697,
									"id": 606,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_send_1420": {
									"entryPoint": 4302,
									"id": 1420,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_spendAllowance_1770": {
									"entryPoint": 4162,
									"id": 1770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_1188": {
									"entryPoint": 2818,
									"id": 1188,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1213": {
									"entryPoint": 1207,
									"id": 1213,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@authorizeOperator_1050": {
									"entryPoint": 1525,
									"id": 1050,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceOf_907": {
									"entryPoint": 1453,
									"id": 907,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_971": {
									"entryPoint": 3659,
									"id": 971,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_869": {
									"entryPoint": 1333,
									"id": 869,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@defaultOperators_1106": {
									"entryPoint": 919,
									"id": 1106,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@granularity_879": {
									"entryPoint": 1342,
									"id": 879,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isContract_285": {
									"entryPoint": 6551,
									"id": 285,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isOperatorFor_1005": {
									"entryPoint": 2385,
									"id": 1005,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_850": {
									"entryPoint": 1061,
									"id": 850,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@operatorBurn_1170": {
									"entryPoint": 3561,
									"id": 1170,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@operatorSend_1140": {
									"entryPoint": 1351,
									"id": 1140,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@revokeOperator_1095": {
									"entryPoint": 2953,
									"id": 1095,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@send_929": {
									"entryPoint": 2279,
									"id": 929,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@symbol_860": {
									"entryPoint": 2133,
									"id": 860,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_891": {
									"entryPoint": 1242,
									"id": 891,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1249": {
									"entryPoint": 1252,
									"id": 1249,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_953": {
									"entryPoint": 2321,
									"id": 953,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7651,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 10265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 10286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 7763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 8162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256t_bytes_memory_ptr": {
									"entryPoint": 8321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 6695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 6680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 10184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 10209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_43a72b1be6b1964d60860b54d1c331016464b9d17c1d10dbea6a002344132abb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10331,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 10224,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_43a72b1be6b1964d60860b54d1c331016464b9d17c1d10dbea6a002344132abb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10115,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7038,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 10199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7636,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6888,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 9931,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8413,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7464,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7454,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7459,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7053,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7048,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7": {
									"entryPoint": 8947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b": {
									"entryPoint": 10442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c": {
									"entryPoint": 9639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_43a72b1be6b1964d60860b54d1c331016464b9d17c1d10dbea6a002344132abb": {
									"entryPoint": 9239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c": {
									"entryPoint": 8655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5": {
									"entryPoint": 8801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80": {
									"entryPoint": 10640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a": {
									"entryPoint": 9493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235": {
									"entryPoint": 8509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a": {
									"entryPoint": 9347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe": {
									"entryPoint": 9785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d": {
									"entryPoint": 9093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:30502:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "81:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "92:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "108:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "102:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "102:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "92:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "74:6:1",
														"type": ""
													}
												],
												"src": "7:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "238:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "255:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "260:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "248:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "248:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "248:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "276:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "295:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "300:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "291:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "276:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "210:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "215:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "226:11:1",
														"type": ""
													}
												],
												"src": "127:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "389:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "399:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "407:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "399:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "420:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "432:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "437:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "428:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "376:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "384:4:1",
														"type": ""
													}
												],
												"src": "317:132:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "500:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "510:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "525:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "532:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "521:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "510:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "482:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "492:7:1",
														"type": ""
													}
												],
												"src": "455:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "632:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "642:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "653:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "614:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "624:7:1",
														"type": ""
													}
												],
												"src": "587:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "744:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "761:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "784:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "766:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "754:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "754:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "732:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "739:3:1",
														"type": ""
													}
												],
												"src": "689:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "883:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "927:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "935:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "893:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "893:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "893:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "948:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "966:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "971:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "962:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "948:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "856:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "864:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "872:10:1",
														"type": ""
													}
												],
												"src": "803:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1063:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1073:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1085:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "1073:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1050:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "1058:4:1",
														"type": ""
													}
												],
												"src": "988:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1261:608:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1271:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1333:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1285:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1285:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1275:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1348:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1429:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1434:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1355:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1355:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1348:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1450:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1515:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1465:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1465:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "1454:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1530:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "1544:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1534:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1620:224:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1634:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1661:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1655:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1655:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "1638:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1681:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "1732:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1747:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "1688:43:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1688:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1681:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1764:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1827:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "1774:52:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1774:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1764:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1582:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1585:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1579:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1579:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1593:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1595:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1604:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1607:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1600:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1600:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1595:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1564:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1566:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1575:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "1570:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1560:284:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1853:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1860:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1853:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1240:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1247:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1256:3:1",
														"type": ""
													}
												],
												"src": "1137:732:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2023:225:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2033:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2045:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2056:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2041:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2041:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2033:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2080:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2091:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2076:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2076:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2099:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2105:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2095:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2095:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2069:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2069:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2069:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2125:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2227:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2236:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2133:93:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2133:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2125:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1995:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2007:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2018:4:1",
														"type": ""
													}
												],
												"src": "1875:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2313:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2324:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2340:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2334:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2334:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2296:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2306:6:1",
														"type": ""
													}
												],
												"src": "2254:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2455:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2472:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2477:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2465:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2465:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2493:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2512:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2517:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2508:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2508:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2493:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2427:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2432:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2443:11:1",
														"type": ""
													}
												],
												"src": "2359:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2596:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2606:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2615:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2610:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2675:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2700:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2705:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2696:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2696:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2719:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2724:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2715:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2715:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2709:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2709:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2689:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2689:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2689:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2636:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2639:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2633:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2633:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2647:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2649:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2658:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2661:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2654:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2654:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2649:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2629:3:1",
																"statements": []
															},
															"src": "2625:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2758:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2763:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2754:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2754:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2772:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2747:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2747:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2747:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2578:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2583:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2588:6:1",
														"type": ""
													}
												],
												"src": "2534:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2834:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2844:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2862:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2869:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2858:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2858:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2878:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2874:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2874:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2854:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2854:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2844:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2817:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2827:6:1",
														"type": ""
													}
												],
												"src": "2786:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2996:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3043:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3010:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3010:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3000:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3058:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3124:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3129:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3065:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3065:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3058:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3184:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3191:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3180:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3180:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3198:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3203:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3145:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3145:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3219:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3230:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3257:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3235:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3235:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3226:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3226:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3219:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2967:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2974:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2982:3:1",
														"type": ""
													}
												],
												"src": "2894:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3395:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3405:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3417:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3428:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3413:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3405:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3452:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3463:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3448:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3448:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3471:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3477:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3467:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3467:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3441:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3441:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3441:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3569:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3578:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3505:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3505:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3497:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3367:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3379:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3390:4:1",
														"type": ""
													}
												],
												"src": "3277:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3636:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3646:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3662:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3656:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3656:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3646:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3629:6:1",
														"type": ""
													}
												],
												"src": "3596:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3766:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3677:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3889:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3906:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3909:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3899:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3899:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3899:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3800:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3966:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4023:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4035:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4025:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4025:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4025:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3989:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4014:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3996:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3996:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3986:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3986:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3979:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3979:43:1"
															},
															"nodeType": "YulIf",
															"src": "3976:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3959:5:1",
														"type": ""
													}
												],
												"src": "3923:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4103:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4113:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4135:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4122:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4113:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4178:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4151:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4151:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4151:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4081:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4089:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4097:5:1",
														"type": ""
													}
												],
												"src": "4051:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4241:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4251:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4262:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4251:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4223:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4233:7:1",
														"type": ""
													}
												],
												"src": "4196:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4322:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4379:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4388:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4391:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4381:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4381:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4381:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4345:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4370:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4352:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4352:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4342:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4342:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4335:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4335:43:1"
															},
															"nodeType": "YulIf",
															"src": "4332:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4315:5:1",
														"type": ""
													}
												],
												"src": "4279:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4459:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4469:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4491:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4478:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4478:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4469:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4534:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4507:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4507:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4507:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4437:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4445:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4453:5:1",
														"type": ""
													}
												],
												"src": "4407:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4635:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4681:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4683:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4683:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4683:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4656:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4665:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4652:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4652:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4677:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4648:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4648:32:1"
															},
															"nodeType": "YulIf",
															"src": "4645:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4774:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4789:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4803:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4793:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4818:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4853:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4864:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4849:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4849:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4873:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4828:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4828:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4818:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4901:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4916:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4930:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4920:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4946:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4981:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4992:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4977:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4977:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5001:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4956:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4956:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4946:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4597:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4608:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4620:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4628:6:1",
														"type": ""
													}
												],
												"src": "4552:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5074:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5084:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5109:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5102:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5095:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5095:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5084:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5056:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5066:7:1",
														"type": ""
													}
												],
												"src": "5032:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5187:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5204:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5224:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5209:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5209:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5197:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5197:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5197:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5175:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5182:3:1",
														"type": ""
													}
												],
												"src": "5128:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5335:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5345:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5357:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5368:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5353:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5353:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5345:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5419:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5432:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5443:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5428:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5428:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5381:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5381:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5381:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5307:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5319:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5330:4:1",
														"type": ""
													}
												],
												"src": "5243:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5524:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5541:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5564:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5546:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5546:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5534:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5512:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5519:3:1",
														"type": ""
													}
												],
												"src": "5459:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5681:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5691:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5703:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5714:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5699:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5699:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5691:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5771:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5784:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5795:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5780:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5780:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5727:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5727:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5727:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5653:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5665:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5676:4:1",
														"type": ""
													}
												],
												"src": "5583:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5911:519:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5957:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5959:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5959:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5959:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5932:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5941:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5928:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5928:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5953:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5924:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5924:32:1"
															},
															"nodeType": "YulIf",
															"src": "5921:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "6050:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6065:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6069:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6094:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6129:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6140:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6125:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6125:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6149:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6104:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6104:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6094:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6177:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6192:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6206:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6196:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6222:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6257:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6268:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6253:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6253:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6277:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6232:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6232:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6222:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6305:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6320:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6334:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6324:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6350:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6385:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6396:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6381:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6381:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6405:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6360:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6360:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6350:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5865:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5876:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5888:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5896:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5904:6:1",
														"type": ""
													}
												],
												"src": "5811:619:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6479:43:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6489:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6504:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6511:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6500:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6500:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6489:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6461:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6471:7:1",
														"type": ""
													}
												],
												"src": "6436:86:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6589:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6606:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6627:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "6611:15:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6611:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6599:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6599:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6599:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6577:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6584:3:1",
														"type": ""
													}
												],
												"src": "6528:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6740:120:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6750:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6762:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6773:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6758:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6758:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6750:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6826:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6839:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6850:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6835:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6835:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6786:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6786:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6786:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6712:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6724:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6735:4:1",
														"type": ""
													}
												],
												"src": "6646:214:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6955:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6972:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6975:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6965:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6965:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6965:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6866:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7078:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7095:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7098:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7088:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7088:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7088:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "6989:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7140:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7157:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7160:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7150:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7150:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7150:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7254:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7257:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7247:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7247:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7247:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7278:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7281:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7271:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7271:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7271:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7112:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7341:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7351:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7373:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7403:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7381:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7381:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7369:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7369:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7355:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7520:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7522:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7522:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7522:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7463:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7475:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7460:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7460:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7499:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7511:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7496:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7496:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7457:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7457:62:1"
															},
															"nodeType": "YulIf",
															"src": "7454:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7558:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7562:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7551:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7551:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7551:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7327:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7335:4:1",
														"type": ""
													}
												],
												"src": "7298:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7626:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7636:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7646:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7646:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7636:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7695:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7703:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7675:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7675:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7675:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7610:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7619:6:1",
														"type": ""
													}
												],
												"src": "7585:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7786:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7891:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7893:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7893:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7893:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7863:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7871:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7860:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7860:30:1"
															},
															"nodeType": "YulIf",
															"src": "7857:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7923:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7953:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "7931:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7923:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7997:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8009:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8015:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8005:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8005:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7997:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7770:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7781:4:1",
														"type": ""
													}
												],
												"src": "7720:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8097:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8120:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8125:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8130:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8107:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8107:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8107:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8157:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8162:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8153:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8153:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8171:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8146:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8146:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8146:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8079:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8084:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8089:6:1",
														"type": ""
													}
												],
												"src": "8033:146:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8268:340:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8278:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8344:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8303:40:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8303:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8287:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8287:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8368:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8375:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8361:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8361:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8361:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8391:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8406:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8413:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8402:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8402:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8395:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8456:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8458:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8458:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8458:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8437:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8442:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8433:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8433:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8451:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8430:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8430:25:1"
															},
															"nodeType": "YulIf",
															"src": "8427:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8585:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8590:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8595:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8548:36:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8548:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8548:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8241:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8246:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8254:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8262:5:1",
														"type": ""
													}
												],
												"src": "8185:423:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8688:277:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8737:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8739:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8739:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8716:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8724:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8712:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8712:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8731:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8708:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8708:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8701:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8701:35:1"
															},
															"nodeType": "YulIf",
															"src": "8698:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8829:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8856:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8843:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8843:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8833:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8872:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8932:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8940:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8928:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8928:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8947:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8955:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8881:46:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8881:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8872:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8666:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8674:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8682:5:1",
														"type": ""
													}
												],
												"src": "8627:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9123:1115:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9170:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9172:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9172:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9172:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9144:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9153:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9140:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9140:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9165:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9136:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9136:33:1"
															},
															"nodeType": "YulIf",
															"src": "9133:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "9263:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9278:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9292:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9282:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9307:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9342:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9353:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9338:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9338:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9362:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9317:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9317:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9307:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9390:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9405:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9419:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9409:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9435:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9470:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9481:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9466:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9466:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9490:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9445:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9445:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9435:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9518:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9533:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9547:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9537:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9563:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9598:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9609:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9594:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9594:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9618:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9573:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9573:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9563:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9646:287:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9661:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9692:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9703:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9688:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9688:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9675:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9675:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9665:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9754:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9756:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9756:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9756:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9726:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9734:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9723:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9723:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "9720:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9851:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9895:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9906:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9891:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9891:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9915:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9861:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9861:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9851:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9943:288:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9958:47:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9989:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10000:3:1",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9985:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9985:19:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9972:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9972:33:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9962:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10052:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "10054:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10054:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10054:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10024:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10032:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10021:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10021:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "10018:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10149:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10193:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10204:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10189:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10189:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10213:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10159:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10159:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "10149:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9061:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9072:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9084:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9092:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9100:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9108:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9116:6:1",
														"type": ""
													}
												],
												"src": "8971:1267:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10310:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10356:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10358:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10358:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10358:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10331:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10340:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10327:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10327:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10352:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10323:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10323:32:1"
															},
															"nodeType": "YulIf",
															"src": "10320:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "10449:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10464:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10478:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10468:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10493:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10528:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10539:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10524:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10524:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10548:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10503:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10503:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10493:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10280:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10291:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10303:6:1",
														"type": ""
													}
												],
												"src": "10244:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10688:688:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10734:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10736:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10736:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10736:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10709:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10718:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10705:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10705:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10730:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10701:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10701:32:1"
															},
															"nodeType": "YulIf",
															"src": "10698:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "10827:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10842:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10856:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10846:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10871:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10906:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10917:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10902:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10902:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10926:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10881:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10881:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10871:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10954:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10969:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10983:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10973:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10999:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11034:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11045:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11030:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11030:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11054:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "11009:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11009:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10999:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11082:287:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11097:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11128:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11139:2:1",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11124:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11124:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11111:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11111:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11101:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11190:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11192:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11192:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11192:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11162:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11170:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11159:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11159:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "11156:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11287:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11331:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11342:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11327:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11327:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11351:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11297:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11297:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "11287:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10642:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10653:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10665:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10673:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10681:6:1",
														"type": ""
													}
												],
												"src": "10579:797:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11465:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11511:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11513:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11513:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11513:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11486:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11495:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11482:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11482:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11507:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11478:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11478:32:1"
															},
															"nodeType": "YulIf",
															"src": "11475:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "11604:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11619:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11633:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11623:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11648:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11683:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11694:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11679:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11679:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11703:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11658:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11658:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11648:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11731:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11746:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11760:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11750:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11776:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11811:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11822:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11807:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11807:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11831:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11786:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11786:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "11776:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11427:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11438:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11450:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11458:6:1",
														"type": ""
													}
												],
												"src": "11382:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11997:986:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12044:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12046:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12046:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12046:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12018:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12027:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12014:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12014:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12039:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12010:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12010:33:1"
															},
															"nodeType": "YulIf",
															"src": "12007:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "12137:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12152:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12166:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12156:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12181:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12216:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12227:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12212:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12212:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12236:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12191:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12191:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12181:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12264:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12279:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12293:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12283:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12309:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12344:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12355:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12340:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12340:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12364:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12319:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12319:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12309:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12392:287:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12407:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12438:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12449:2:1",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12434:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12434:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "12421:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12421:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12411:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12500:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "12502:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12502:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12502:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12472:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12480:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12469:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12469:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "12466:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12597:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12641:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12652:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12637:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12637:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12661:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12607:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12607:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "12597:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12689:287:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12704:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12735:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12746:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12731:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12731:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "12718:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12718:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12708:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12797:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "12799:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12799:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12799:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12769:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12777:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12766:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12766:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "12763:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12894:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12938:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12949:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12934:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12934:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12958:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12904:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12904:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "12894:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11943:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11954:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11966:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11974:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11982:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11990:6:1",
														"type": ""
													}
												],
												"src": "11862:1121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13081:560:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13127:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13129:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13129:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13129:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13102:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13111:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13098:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13098:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13123:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13094:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13094:32:1"
															},
															"nodeType": "YulIf",
															"src": "13091:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "13220:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13235:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13249:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13239:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13264:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13299:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13310:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13295:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13295:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13319:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "13274:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13274:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13264:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13347:287:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13362:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13393:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13404:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13389:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13389:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "13376:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13376:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13366:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "13455:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "13457:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13457:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "13457:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "13427:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13435:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13424:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13424:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "13421:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13552:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13596:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13607:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13592:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13592:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13616:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "13562:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13562:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "13552:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13043:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13054:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13066:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13074:6:1",
														"type": ""
													}
												],
												"src": "12989:652:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13675:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13692:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13695:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13685:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13685:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13685:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13789:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13792:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13782:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13782:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13782:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13813:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13816:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13806:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13806:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "13647:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13884:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13894:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "13908:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13914:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "13904:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13904:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13894:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13925:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "13955:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13961:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13951:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13951:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "13929:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14002:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14016:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "14030:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14038:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "14026:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14026:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14016:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "13982:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13975:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13975:26:1"
															},
															"nodeType": "YulIf",
															"src": "13972:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14105:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "14119:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14119:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14119:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14069:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14092:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14100:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "14089:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14089:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14066:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14066:38:1"
															},
															"nodeType": "YulIf",
															"src": "14063:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "13868:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13877:6:1",
														"type": ""
													}
												],
												"src": "13833:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14265:125:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14287:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14295:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14283:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14283:14:1"
																	},
																	{
																		"hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14299:34:1",
																		"type": "",
																		"value": "ERC777: caller is not an operato"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14276:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14276:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14276:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14355:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14363:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14351:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14351:15:1"
																	},
																	{
																		"hexValue": "7220666f7220686f6c646572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14368:14:1",
																		"type": "",
																		"value": "r for holder"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14344:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14344:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14344:39:1"
														}
													]
												},
												"name": "store_literal_in_memory_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14257:6:1",
														"type": ""
													}
												],
												"src": "14159:231:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14542:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14552:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14618:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14623:2:1",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14559:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14559:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14552:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14724:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
																	"nodeType": "YulIdentifier",
																	"src": "14635:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14635:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14635:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14737:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14748:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14753:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14744:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14744:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14737:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14530:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14538:3:1",
														"type": ""
													}
												],
												"src": "14396:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14939:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14949:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14961:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14972:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14957:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14957:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14949:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14996:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15007:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14992:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14992:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15015:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15021:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15011:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15011:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14985:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14985:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14985:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15041:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15175:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15049:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15049:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15041:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14919:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14934:4:1",
														"type": ""
													}
												],
												"src": "14768:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15299:117:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15321:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15329:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15317:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15317:14:1"
																	},
																	{
																		"hexValue": "4552433737373a20617574686f72697a696e672073656c66206173206f706572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15333:34:1",
																		"type": "",
																		"value": "ERC777: authorizing self as oper"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15310:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15310:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15389:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15397:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15385:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15385:15:1"
																	},
																	{
																		"hexValue": "61746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15402:6:1",
																		"type": "",
																		"value": "ator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15378:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15378:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15378:31:1"
														}
													]
												},
												"name": "store_literal_in_memory_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15291:6:1",
														"type": ""
													}
												],
												"src": "15193:223:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15568:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15578:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15644:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15649:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15585:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15585:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15578:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15750:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c",
																	"nodeType": "YulIdentifier",
																	"src": "15661:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15661:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15661:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15763:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15774:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15779:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15770:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15770:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15763:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15556:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15564:3:1",
														"type": ""
													}
												],
												"src": "15422:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15965:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15975:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15987:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15998:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15983:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15983:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15975:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16022:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16033:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16018:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16018:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16041:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16047:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16037:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16037:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16011:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16011:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16011:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16067:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16201:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16075:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16075:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16067:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15945:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15960:4:1",
														"type": ""
													}
												],
												"src": "15794:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16325:114:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16347:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16355:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16343:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16343:14:1"
																	},
																	{
																		"hexValue": "4552433737373a207265766f6b696e672073656c66206173206f70657261746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16359:34:1",
																		"type": "",
																		"value": "ERC777: revoking self as operato"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16336:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16336:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16336:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16415:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16423:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16411:15:1"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16428:3:1",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16404:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16404:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16404:28:1"
														}
													]
												},
												"name": "store_literal_in_memory_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16317:6:1",
														"type": ""
													}
												],
												"src": "16219:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16591:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16601:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16667:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16672:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16608:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16608:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16601:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16773:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5",
																	"nodeType": "YulIdentifier",
																	"src": "16684:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16684:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16684:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16786:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16797:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16802:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16793:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16793:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16786:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16579:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16587:3:1",
														"type": ""
													}
												],
												"src": "16445:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16988:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16998:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17010:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17021:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17006:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17006:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16998:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17045:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17056:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17041:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17041:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17064:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17070:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17060:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17060:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17034:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17034:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17034:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17090:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17224:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17098:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17098:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17090:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16968:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16983:4:1",
														"type": ""
													}
												],
												"src": "16817:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17348:118:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17370:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17378:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17366:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17366:14:1"
																	},
																	{
																		"hexValue": "4552433737373a20617070726f76652066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17382:34:1",
																		"type": "",
																		"value": "ERC777: approve from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17359:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17359:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17359:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17438:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17446:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17434:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17434:15:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17451:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17427:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17427:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17427:32:1"
														}
													]
												},
												"name": "store_literal_in_memory_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17340:6:1",
														"type": ""
													}
												],
												"src": "17242:224:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17618:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17628:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17694:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17699:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17635:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17635:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17628:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17800:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7",
																	"nodeType": "YulIdentifier",
																	"src": "17711:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17711:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17711:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17813:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17824:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17829:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17820:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17820:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17813:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17606:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17614:3:1",
														"type": ""
													}
												],
												"src": "17472:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18015:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18025:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18037:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18048:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18033:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18033:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18025:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18072:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18083:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18068:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18068:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18091:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18097:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18087:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18087:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18061:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18061:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18061:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18117:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18251:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18125:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18125:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18117:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17995:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18010:4:1",
														"type": ""
													}
												],
												"src": "17844:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18375:116:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18397:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18405:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18393:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18393:14:1"
																	},
																	{
																		"hexValue": "4552433737373a20617070726f766520746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18409:34:1",
																		"type": "",
																		"value": "ERC777: approve to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18386:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18386:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18386:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18465:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18473:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18461:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18461:15:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18478:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18454:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18454:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18454:30:1"
														}
													]
												},
												"name": "store_literal_in_memory_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18367:6:1",
														"type": ""
													}
												],
												"src": "18269:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18643:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18653:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18719:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18724:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18660:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18660:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18653:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18825:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d",
																	"nodeType": "YulIdentifier",
																	"src": "18736:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18736:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18736:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18838:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18849:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18854:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18845:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18845:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18838:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18631:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18639:3:1",
														"type": ""
													}
												],
												"src": "18497:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19040:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19050:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19062:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19073:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19058:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19058:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19050:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19097:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19108:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19093:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19093:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19116:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19122:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19112:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19086:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19086:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19086:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19142:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19276:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19150:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19150:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19142:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19020:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19035:4:1",
														"type": ""
													}
												],
												"src": "18869:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19400:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19422:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19430:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19418:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19418:14:1"
																	},
																	{
																		"hexValue": "4552433737373a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19434:32:1",
																		"type": "",
																		"value": "ERC777: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19411:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19411:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19411:56:1"
														}
													]
												},
												"name": "store_literal_in_memory_43a72b1be6b1964d60860b54d1c331016464b9d17c1d10dbea6a002344132abb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19392:6:1",
														"type": ""
													}
												],
												"src": "19294:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19626:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19636:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19702:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19707:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19643:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19643:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19636:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19808:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_43a72b1be6b1964d60860b54d1c331016464b9d17c1d10dbea6a002344132abb",
																	"nodeType": "YulIdentifier",
																	"src": "19719:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19719:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19719:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19821:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19832:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19837:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19828:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19828:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19821:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_43a72b1be6b1964d60860b54d1c331016464b9d17c1d10dbea6a002344132abb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19614:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19622:3:1",
														"type": ""
													}
												],
												"src": "19480:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20023:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20033:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20045:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20056:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20041:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20041:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20033:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20080:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20091:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20076:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20076:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20099:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20105:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20095:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20095:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20069:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20069:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20069:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20125:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20259:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_43a72b1be6b1964d60860b54d1c331016464b9d17c1d10dbea6a002344132abb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20133:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20133:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20125:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_43a72b1be6b1964d60860b54d1c331016464b9d17c1d10dbea6a002344132abb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20003:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20018:4:1",
														"type": ""
													}
												],
												"src": "19852:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20383:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20405:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20413:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20401:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20401:14:1"
																	},
																	{
																		"hexValue": "4552433737373a207472616e736665722066726f6d20746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20417:34:1",
																		"type": "",
																		"value": "ERC777: transfer from the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20394:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20394:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20394:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20473:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20481:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20469:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20469:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20486:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20462:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20462:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20462:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20375:6:1",
														"type": ""
													}
												],
												"src": "20277:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20654:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20664:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20730:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20735:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20671:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20671:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20664:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20836:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a",
																	"nodeType": "YulIdentifier",
																	"src": "20747:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20747:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20747:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20849:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20860:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20865:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20856:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20856:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20849:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20642:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20650:3:1",
														"type": ""
													}
												],
												"src": "20508:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21051:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21061:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21073:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21084:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21069:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21069:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21061:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21108:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21119:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21104:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21104:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21127:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21133:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21123:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21123:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21097:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21097:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21097:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21153:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21287:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21161:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21161:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21153:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21031:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21046:4:1",
														"type": ""
													}
												],
												"src": "20880:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21411:117:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21433:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21441:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21429:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21429:14:1"
																	},
																	{
																		"hexValue": "4552433737373a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21445:34:1",
																		"type": "",
																		"value": "ERC777: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21422:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21422:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21422:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21501:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21509:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21497:15:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21514:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21490:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21490:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21490:31:1"
														}
													]
												},
												"name": "store_literal_in_memory_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21403:6:1",
														"type": ""
													}
												],
												"src": "21305:223:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21680:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21690:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21756:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21761:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21697:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21697:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21690:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21862:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
																	"nodeType": "YulIdentifier",
																	"src": "21773:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21773:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21773:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21875:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21886:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21891:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21882:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21882:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21875:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21668:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21676:3:1",
														"type": ""
													}
												],
												"src": "21534:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22077:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22087:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22099:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22110:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22095:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22095:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22087:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22134:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22145:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22130:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22130:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22153:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22159:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22149:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22149:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22123:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22123:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22123:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22179:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22313:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22187:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22187:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22179:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22057:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22072:4:1",
														"type": ""
													}
												],
												"src": "21906:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22437:115:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22459:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22467:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22455:14:1"
																	},
																	{
																		"hexValue": "4552433737373a206275726e2066726f6d20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22471:34:1",
																		"type": "",
																		"value": "ERC777: burn from the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22448:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22448:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22448:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22527:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22535:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22523:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22523:15:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22540:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22516:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22516:29:1"
														}
													]
												},
												"name": "store_literal_in_memory_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22429:6:1",
														"type": ""
													}
												],
												"src": "22331:221:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22704:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22714:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22780:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22785:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22721:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22721:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22714:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22886:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c",
																	"nodeType": "YulIdentifier",
																	"src": "22797:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22797:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22797:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22899:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22910:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22915:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22906:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22906:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22899:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22692:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22700:3:1",
														"type": ""
													}
												],
												"src": "22558:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23101:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23111:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23123:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23134:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23119:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23119:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23111:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23158:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23169:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23154:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23154:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23177:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23183:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23173:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23173:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23147:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23147:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23147:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23203:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23337:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23211:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23211:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23203:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23081:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23096:4:1",
														"type": ""
													}
												],
												"src": "22930:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23461:116:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23483:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23491:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23479:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23479:14:1"
																	},
																	{
																		"hexValue": "4552433737373a206275726e20616d6f756e7420657863656564732062616c61",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23495:34:1",
																		"type": "",
																		"value": "ERC777: burn amount exceeds bala"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23472:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23472:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23472:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23551:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23559:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23547:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23547:15:1"
																	},
																	{
																		"hexValue": "6e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23564:5:1",
																		"type": "",
																		"value": "nce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23540:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23540:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23540:30:1"
														}
													]
												},
												"name": "store_literal_in_memory_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23453:6:1",
														"type": ""
													}
												],
												"src": "23355:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23729:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23739:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23805:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23810:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23746:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23746:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23739:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23911:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe",
																	"nodeType": "YulIdentifier",
																	"src": "23822:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23822:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23822:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23924:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23935:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23940:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23931:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23931:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23924:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23717:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23725:3:1",
														"type": ""
													}
												],
												"src": "23583:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24126:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24136:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24148:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24159:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24144:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24144:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24136:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24183:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24194:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24179:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24179:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24202:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24208:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24198:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24172:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24172:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24172:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24228:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24362:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24236:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24236:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24228:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24106:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24121:4:1",
														"type": ""
													}
												],
												"src": "23955:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24408:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24425:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24428:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24418:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24418:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24418:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24522:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24525:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24515:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24515:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24515:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24546:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24549:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "24539:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24539:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24539:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "24380:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24611:149:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24621:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24644:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24626:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24626:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "24621:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24655:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24678:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24660:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24660:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "24655:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24689:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24701:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24704:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "24697:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24697:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "24689:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24731:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "24733:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24733:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24733:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "24722:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24728:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24719:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24719:11:1"
															},
															"nodeType": "YulIf",
															"src": "24716:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "24597:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "24600:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "24606:4:1",
														"type": ""
													}
												],
												"src": "24566:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24824:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24835:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24851:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24845:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24845:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24835:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24807:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24817:6:1",
														"type": ""
													}
												],
												"src": "24766:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24965:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24982:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24987:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24975:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24975:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24975:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25003:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25022:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25027:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25018:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25018:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "25003:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24937:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24942:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24953:11:1",
														"type": ""
													}
												],
												"src": "24870:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25134:283:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25144:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25190:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "25158:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25158:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "25148:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25205:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25270:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25275:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25212:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25212:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25205:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25330:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25337:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25326:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25326:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25344:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25349:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "25291:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25291:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25291:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25365:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25376:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "25403:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "25381:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25381:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25372:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25372:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25365:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25115:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25122:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25130:3:1",
														"type": ""
													}
												],
												"src": "25044:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25613:426:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25623:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25635:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25646:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25631:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25631:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25623:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25703:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25716:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25727:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25712:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25712:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25659:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25659:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25659:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25751:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25762:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25747:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25747:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25771:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25777:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25767:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25740:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25740:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25740:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25797:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25867:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25876:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25805:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25805:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25797:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25902:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25913:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25898:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25898:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25922:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25928:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25918:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25918:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25891:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25891:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25891:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25948:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "26018:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26027:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25956:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25956:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25948:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25569:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "25581:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25589:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25597:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25608:4:1",
														"type": ""
													}
												],
												"src": "25423:616:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26110:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26127:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26150:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "26132:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26132:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26120:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26120:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26098:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26105:3:1",
														"type": ""
													}
												],
												"src": "26045:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26214:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26224:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "26235:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26224:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26196:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26206:7:1",
														"type": ""
													}
												],
												"src": "26169:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26317:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26334:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26357:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "26339:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26339:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26327:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26327:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26327:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26305:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26312:3:1",
														"type": ""
													}
												],
												"src": "26252:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26502:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26512:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26524:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26535:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26520:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26520:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26512:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26592:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26605:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26616:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26601:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26601:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26548:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26548:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26548:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26673:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26686:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26697:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26682:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26682:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26629:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26629:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26629:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26466:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "26478:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26486:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26497:4:1",
														"type": ""
													}
												],
												"src": "26376:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26777:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26787:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "26802:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26796:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26796:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "26787:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26845:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "26818:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26818:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26818:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "26755:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26763:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26771:5:1",
														"type": ""
													}
												],
												"src": "26714:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26940:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26986:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "26988:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26988:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26988:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "26961:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26970:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26957:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26957:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26982:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "26953:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26953:32:1"
															},
															"nodeType": "YulIf",
															"src": "26950:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "27079:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "27094:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27108:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "27098:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "27123:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "27169:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "27180:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "27165:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27165:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "27189:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "27133:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27133:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "27123:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26910:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "26921:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26933:6:1",
														"type": ""
													}
												],
												"src": "26863:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27494:675:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27504:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27516:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27527:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27512:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27512:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27504:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27585:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27598:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27609:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27594:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27594:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27541:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27541:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27541:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "27666:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27679:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27690:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27675:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27675:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27622:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27622:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27622:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "27748:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27761:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27772:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27757:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27757:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27704:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27704:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27704:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "27830:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27843:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27854:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27839:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27839:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27786:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27786:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27786:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27879:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27890:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27875:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27875:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27900:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27906:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27896:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27896:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27868:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27868:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27868:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27926:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "27996:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28005:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27934:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27934:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27926:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28031:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28042:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28027:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28027:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28052:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28058:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28048:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28048:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28020:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28020:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28020:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28078:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "28148:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28157:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28086:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28086:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28078:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27426:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "27438:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "27446:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "27454:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "27462:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27470:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27478:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27489:4:1",
														"type": ""
													}
												],
												"src": "27220:949:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28281:120:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28303:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28311:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28299:14:1"
																	},
																	{
																		"hexValue": "4552433737373a207472616e7366657220616d6f756e74206578636565647320",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28315:34:1",
																		"type": "",
																		"value": "ERC777: transfer amount exceeds "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28292:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28292:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28371:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28379:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28367:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28367:15:1"
																	},
																	{
																		"hexValue": "62616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28384:9:1",
																		"type": "",
																		"value": "balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28360:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28360:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28360:34:1"
														}
													]
												},
												"name": "store_literal_in_memory_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28273:6:1",
														"type": ""
													}
												],
												"src": "28175:226:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28553:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28563:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28629:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28634:2:1",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28570:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28570:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28563:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28735:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b",
																	"nodeType": "YulIdentifier",
																	"src": "28646:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28646:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28646:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28748:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28759:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28764:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28755:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28755:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28748:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28541:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28549:3:1",
														"type": ""
													}
												],
												"src": "28407:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28950:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28960:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28972:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28983:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28968:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28968:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28960:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29007:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29018:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29003:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29003:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29026:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29032:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29022:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29022:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28996:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28996:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28996:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29052:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29186:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29060:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29060:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29052:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28930:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28945:4:1",
														"type": ""
													}
												],
												"src": "28779:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29248:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29258:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29281:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "29263:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29263:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "29258:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29292:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "29315:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "29297:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29297:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "29292:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29326:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29337:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "29340:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29333:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29333:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "29326:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29366:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "29368:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29368:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29368:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29358:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "29361:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "29355:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29355:10:1"
															},
															"nodeType": "YulIf",
															"src": "29352:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "29235:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "29238:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "29244:3:1",
														"type": ""
													}
												],
												"src": "29204:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29507:195:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29529:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29537:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29525:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29525:14:1"
																	},
																	{
																		"hexValue": "4552433737373a20746f6b656e20726563697069656e7420636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29541:34:1",
																		"type": "",
																		"value": "ERC777: token recipient contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29518:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29518:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29518:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29597:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29605:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29593:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29593:15:1"
																	},
																	{
																		"hexValue": "20686173206e6f20696d706c656d656e74657220666f7220455243373737546f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29610:34:1",
																		"type": "",
																		"value": " has no implementer for ERC777To"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29586:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29586:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29586:59:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29666:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29674:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29662:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29662:15:1"
																	},
																	{
																		"hexValue": "6b656e73526563697069656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29679:15:1",
																		"type": "",
																		"value": "kensRecipient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29655:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29655:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29655:40:1"
														}
													]
												},
												"name": "store_literal_in_memory_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29499:6:1",
														"type": ""
													}
												],
												"src": "29401:301:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29854:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29864:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29930:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29935:2:1",
																		"type": "",
																		"value": "77"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29871:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29871:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "29864:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30036:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80",
																	"nodeType": "YulIdentifier",
																	"src": "29947:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29947:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29947:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30049:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30060:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30065:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30056:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30056:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "30049:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "29842:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "29850:3:1",
														"type": ""
													}
												],
												"src": "29708:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30251:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30261:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30273:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30284:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30269:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30269:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30261:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30308:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30319:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30304:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30304:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30327:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30333:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30323:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30323:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30297:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30297:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30297:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30353:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30487:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30361:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30361:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30353:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30231:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30246:4:1",
														"type": ""
													}
												],
												"src": "30080:419:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC777: caller is not an operato\")\n\n        mstore(add(memPtr, 32), \"r for holder\")\n\n    }\n\n    function abi_encode_t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC777: authorizing self as oper\")\n\n        mstore(add(memPtr, 32), \"ator\")\n\n    }\n\n    function abi_encode_t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC777: revoking self as operato\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC777: approve from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC777: approve to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_43a72b1be6b1964d60860b54d1c331016464b9d17c1d10dbea6a002344132abb(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC777: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_43a72b1be6b1964d60860b54d1c331016464b9d17c1d10dbea6a002344132abb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_43a72b1be6b1964d60860b54d1c331016464b9d17c1d10dbea6a002344132abb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_43a72b1be6b1964d60860b54d1c331016464b9d17c1d10dbea6a002344132abb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_43a72b1be6b1964d60860b54d1c331016464b9d17c1d10dbea6a002344132abb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC777: transfer from the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC777: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC777: burn from the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC777: burn amount exceeds bala\")\n\n        mstore(add(memPtr, 32), \"nce\")\n\n    }\n\n    function abi_encode_t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value5,  tail)\n\n    }\n\n    function store_literal_in_memory_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC777: transfer amount exceeds \")\n\n        mstore(add(memPtr, 32), \"balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC777: token recipient contract\")\n\n        mstore(add(memPtr, 32), \" has no implementer for ERC777To\")\n\n        mstore(add(memPtr, 64), \"kensRecipient\")\n\n    }\n\n    function abi_encode_t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 77)\n        store_literal_in_memory_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101165760003560e01c8063959b8c3f116100a2578063d95b637111610071578063d95b6371146102e3578063dd62ed3e14610313578063fad8b32a14610343578063fc673c4f1461035f578063fe9d93031461037b57610116565b8063959b8c3f1461025d57806395d89b41146102795780639bd9bbc614610297578063a9059cbb146102b357610116565b806323b872dd116100e957806323b872dd146101a5578063313ce567146101d5578063556f0dc7146101f357806362ad1b831461021157806370a082311461022d57610116565b806306e485381461011b57806306fdde0314610139578063095ea7b31461015757806318160ddd14610187575b600080fd5b610123610397565b6040516101309190611aaa565b60405180910390f35b610141610425565b60405161014e9190611b5c565b60405180910390f35b610171600480360381019061016c9190611bf4565b6104b7565b60405161017e9190611c4f565b60405180910390f35b61018f6104da565b60405161019c9190611c79565b60405180910390f35b6101bf60048036038101906101ba9190611c94565b6104e4565b6040516101cc9190611c4f565b60405180910390f35b6101dd610535565b6040516101ea9190611d03565b60405180910390f35b6101fb61053e565b6040516102089190611c79565b60405180910390f35b61022b60048036038101906102269190611e53565b610547565b005b61024760048036038101906102429190611f06565b6105ad565b6040516102549190611c79565b60405180910390f35b61027760048036038101906102729190611f06565b6105f5565b005b610281610855565b60405161028e9190611b5c565b60405180910390f35b6102b160048036038101906102ac9190611f33565b6108e7565b005b6102cd60048036038101906102c89190611bf4565b610911565b6040516102da9190611c4f565b60405180910390f35b6102fd60048036038101906102f89190611fa2565b610951565b60405161030a9190611c4f565b60405180910390f35b61032d60048036038101906103289190611fa2565b610b02565b60405161033a9190611c79565b60405180910390f35b61035d60048036038101906103589190611f06565b610b89565b005b61037960048036038101906103749190611fe2565b610de9565b005b61039560048036038101906103909190612081565b610e4b565b005b6060600480548060200260200160405190810160405280929190818152602001828054801561041b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103d1575b5050505050905090565b6060600280546104349061210c565b80601f01602080910402602001604051908101604052809291908181526020018280546104609061210c565b80156104ad5780601f10610482576101008083540402835291602001916104ad565b820191906000526020600020905b81548152906001019060200180831161049057829003601f168201915b5050505050905090565b6000806104c2610e71565b90506104cf818585610e79565b600191505092915050565b6000600154905090565b6000806104ef610e71565b90506104fc858285611042565b610529858585604051806020016040528060008152506040518060200160405280600081525060006110ce565b60019150509392505050565b60006012905090565b60006001905090565b610558610552610e71565b86610951565b610597576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058e906121af565b60405180910390fd5b6105a6858585858560016110ce565b5050505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b8073ffffffffffffffffffffffffffffffffffffffff16610614610e71565b73ffffffffffffffffffffffffffffffffffffffff160361066a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066190612241565b60405180910390fd5b600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561075457600760006106c8610e71565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690556107f1565b600160066000610762610e71565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6107f9610e71565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f960405160405180910390a350565b6060600380546108649061210c565b80601f01602080910402602001604051908101604052809291908181526020018280546108909061210c565b80156108dd5780601f106108b2576101008083540402835291602001916108dd565b820191906000526020600020905b8154815290600101906020018083116108c057829003601f168201915b5050505050905090565b61090c6108f2610e71565b8484846040518060200160405280600081525060016110ce565b505050565b600061094761091e610e71565b8484604051806020016040528060008152506040518060200160405280600081525060006110ce565b6001905092915050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480610a695750600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168015610a685750600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b5b80610afa5750600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b905092915050565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610b91610e71565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf5906122d3565b60405180910390fd5b600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610cf157600160076000610c5e610e71565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610d85565b60066000610cfd610e71565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690555b610d8d610e71565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa160405160405180910390a350565b610dfa610df4610e71565b85610951565b610e39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e30906121af565b60405180910390fd5b610e45848484846111ec565b50505050565b610e6d610e56610e71565b8383604051806020016040528060008152506111ec565b5050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ee8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edf90612365565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4e906123f7565b60405180910390fd5b80600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516110359190611c79565b60405180910390a3505050565b600061104e8484610b02565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110c857818110156110ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b190612463565b60405180910390fd5b6110c78484848403610e79565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff160361113d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611134906124f5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036111ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a390612587565b60405180910390fd5b60006111b6610e71565b90506111c681888888888861143e565b6111d48188888888886115a5565b6111e3818888888888886117bf565b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361125b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125290612619565b60405180910390fd5b6000611265610e71565b90506112768186600087878761143e565b6112838186600087611991565b60008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905084811015611309576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611300906126ab565b60405180910390fd5b8481036000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550846001600082825461136091906126fa565b925050819055508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a40988787876040516113c893929190612783565b60405180910390a3600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8760405161142e9190611c79565b60405180910390a3505050505050565b6000731820a4b7618bde71dce8cdc73aab6c95905fad2473ffffffffffffffffffffffffffffffffffffffff1663aabbb8ca877f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956040518363ffffffff1660e01b81526004016114af9291906127f0565b602060405180830381865afa1580156114cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f0919061282e565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461159c578073ffffffffffffffffffffffffffffffffffffffff166375ab97828888888888886040518763ffffffff1660e01b81526004016115699695949392919061285b565b600060405180830381600087803b15801561158357600080fd5b505af1158015611597573d6000803e3d6000fd5b505050505b50505050505050565b6115b186868686611991565b60008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015611637576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162e9061293c565b60405180910390fd5b8381036000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550836000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116ca919061295c565b925050819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc8261467798787878760405161174993929190612783565b60405180910390a48473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040516117ae9190611c79565b60405180910390a350505050505050565b6000731820a4b7618bde71dce8cdc73aab6c95905fad2473ffffffffffffffffffffffffffffffffffffffff1663aabbb8ca877fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6040518363ffffffff1660e01b81526004016118309291906127f0565b602060405180830381865afa15801561184d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611871919061282e565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611920578073ffffffffffffffffffffffffffffffffffffffff166223de298989898989896040518763ffffffff1660e01b81526004016118e99695949392919061285b565b600060405180830381600087803b15801561190357600080fd5b505af1158015611917573d6000803e3d6000fd5b50505050611987565b8115611986576119458673ffffffffffffffffffffffffffffffffffffffff16611997565b15611985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197c90612a28565b60405180910390fd5b5b5b5050505050505050565b50505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a11826119e6565b9050919050565b611a2181611a06565b82525050565b6000611a338383611a18565b60208301905092915050565b6000602082019050919050565b6000611a57826119ba565b611a6181856119c5565b9350611a6c836119d6565b8060005b83811015611a9d578151611a848882611a27565b9750611a8f83611a3f565b925050600181019050611a70565b5085935050505092915050565b60006020820190508181036000830152611ac48184611a4c565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611b06578082015181840152602081019050611aeb565b60008484015250505050565b6000601f19601f8301169050919050565b6000611b2e82611acc565b611b388185611ad7565b9350611b48818560208601611ae8565b611b5181611b12565b840191505092915050565b60006020820190508181036000830152611b768184611b23565b905092915050565b6000604051905090565b600080fd5b600080fd5b611b9b81611a06565b8114611ba657600080fd5b50565b600081359050611bb881611b92565b92915050565b6000819050919050565b611bd181611bbe565b8114611bdc57600080fd5b50565b600081359050611bee81611bc8565b92915050565b60008060408385031215611c0b57611c0a611b88565b5b6000611c1985828601611ba9565b9250506020611c2a85828601611bdf565b9150509250929050565b60008115159050919050565b611c4981611c34565b82525050565b6000602082019050611c646000830184611c40565b92915050565b611c7381611bbe565b82525050565b6000602082019050611c8e6000830184611c6a565b92915050565b600080600060608486031215611cad57611cac611b88565b5b6000611cbb86828701611ba9565b9350506020611ccc86828701611ba9565b9250506040611cdd86828701611bdf565b9150509250925092565b600060ff82169050919050565b611cfd81611ce7565b82525050565b6000602082019050611d186000830184611cf4565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d6082611b12565b810181811067ffffffffffffffff82111715611d7f57611d7e611d28565b5b80604052505050565b6000611d92611b7e565b9050611d9e8282611d57565b919050565b600067ffffffffffffffff821115611dbe57611dbd611d28565b5b611dc782611b12565b9050602081019050919050565b82818337600083830152505050565b6000611df6611df184611da3565b611d88565b905082815260208101848484011115611e1257611e11611d23565b5b611e1d848285611dd4565b509392505050565b600082601f830112611e3a57611e39611d1e565b5b8135611e4a848260208601611de3565b91505092915050565b600080600080600060a08688031215611e6f57611e6e611b88565b5b6000611e7d88828901611ba9565b9550506020611e8e88828901611ba9565b9450506040611e9f88828901611bdf565b935050606086013567ffffffffffffffff811115611ec057611ebf611b8d565b5b611ecc88828901611e25565b925050608086013567ffffffffffffffff811115611eed57611eec611b8d565b5b611ef988828901611e25565b9150509295509295909350565b600060208284031215611f1c57611f1b611b88565b5b6000611f2a84828501611ba9565b91505092915050565b600080600060608486031215611f4c57611f4b611b88565b5b6000611f5a86828701611ba9565b9350506020611f6b86828701611bdf565b925050604084013567ffffffffffffffff811115611f8c57611f8b611b8d565b5b611f9886828701611e25565b9150509250925092565b60008060408385031215611fb957611fb8611b88565b5b6000611fc785828601611ba9565b9250506020611fd885828601611ba9565b9150509250929050565b60008060008060808587031215611ffc57611ffb611b88565b5b600061200a87828801611ba9565b945050602061201b87828801611bdf565b935050604085013567ffffffffffffffff81111561203c5761203b611b8d565b5b61204887828801611e25565b925050606085013567ffffffffffffffff81111561206957612068611b8d565b5b61207587828801611e25565b91505092959194509250565b6000806040838503121561209857612097611b88565b5b60006120a685828601611bdf565b925050602083013567ffffffffffffffff8111156120c7576120c6611b8d565b5b6120d385828601611e25565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061212457607f821691505b602082108103612137576121366120dd565b5b50919050565b7f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60008201527f7220666f7220686f6c6465720000000000000000000000000000000000000000602082015250565b6000612199602c83611ad7565b91506121a48261213d565b604082019050919050565b600060208201905081810360008301526121c88161218c565b9050919050565b7f4552433737373a20617574686f72697a696e672073656c66206173206f70657260008201527f61746f7200000000000000000000000000000000000000000000000000000000602082015250565b600061222b602483611ad7565b9150612236826121cf565b604082019050919050565b6000602082019050818103600083015261225a8161221e565b9050919050565b7f4552433737373a207265766f6b696e672073656c66206173206f70657261746f60008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006122bd602183611ad7565b91506122c882612261565b604082019050919050565b600060208201905081810360008301526122ec816122b0565b9050919050565b7f4552433737373a20617070726f76652066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061234f602583611ad7565b915061235a826122f3565b604082019050919050565b6000602082019050818103600083015261237e81612342565b9050919050565b7f4552433737373a20617070726f766520746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006123e1602383611ad7565b91506123ec82612385565b604082019050919050565b60006020820190508181036000830152612410816123d4565b9050919050565b7f4552433737373a20696e73756666696369656e7420616c6c6f77616e63650000600082015250565b600061244d601e83611ad7565b915061245882612417565b602082019050919050565b6000602082019050818103600083015261247c81612440565b9050919050565b7f4552433737373a207472616e736665722066726f6d20746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006124df602683611ad7565b91506124ea82612483565b604082019050919050565b6000602082019050818103600083015261250e816124d2565b9050919050565b7f4552433737373a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612571602483611ad7565b915061257c82612515565b604082019050919050565b600060208201905081810360008301526125a081612564565b9050919050565b7f4552433737373a206275726e2066726f6d20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000612603602283611ad7565b915061260e826125a7565b604082019050919050565b60006020820190508181036000830152612632816125f6565b9050919050565b7f4552433737373a206275726e20616d6f756e7420657863656564732062616c6160008201527f6e63650000000000000000000000000000000000000000000000000000000000602082015250565b6000612695602383611ad7565b91506126a082612639565b604082019050919050565b600060208201905081810360008301526126c481612688565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061270582611bbe565b915061271083611bbe565b9250828203905081811115612728576127276126cb565b5b92915050565b600081519050919050565b600082825260208201905092915050565b60006127558261272e565b61275f8185612739565b935061276f818560208601611ae8565b61277881611b12565b840191505092915050565b60006060820190506127986000830186611c6a565b81810360208301526127aa818561274a565b905081810360408301526127be818461274a565b9050949350505050565b6127d181611a06565b82525050565b6000819050919050565b6127ea816127d7565b82525050565b600060408201905061280560008301856127c8565b61281260208301846127e1565b9392505050565b60008151905061282881611b92565b92915050565b60006020828403121561284457612843611b88565b5b600061285284828501612819565b91505092915050565b600060c08201905061287060008301896127c8565b61287d60208301886127c8565b61288a60408301876127c8565b6128976060830186611c6a565b81810360808301526128a9818561274a565b905081810360a08301526128bd818461274a565b9050979650505050505050565b7f4552433737373a207472616e7366657220616d6f756e7420657863656564732060008201527f62616c616e636500000000000000000000000000000000000000000000000000602082015250565b6000612926602783611ad7565b9150612931826128ca565b604082019050919050565b6000602082019050818103600083015261295581612919565b9050919050565b600061296782611bbe565b915061297283611bbe565b925082820190508082111561298a576129896126cb565b5b92915050565b7f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460008201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60208201527f6b656e73526563697069656e7400000000000000000000000000000000000000604082015250565b6000612a12604d83611ad7565b9150612a1d82612990565b606082019050919050565b60006020820190508181036000830152612a4181612a05565b905091905056fea264697066735822122014e10a8d34903e142f43c17b0e012419cb01a52347e233c23a63d3de79e661d964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x959B8C3F GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD95B6371 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD95B6371 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xFAD8B32A EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xFC673C4F EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xFE9D9303 EQ PUSH2 0x37B JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x959B8C3F EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x9BD9BBC6 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2B3 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x556F0DC7 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x62AD1B83 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22D JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6E48538 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x187 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x397 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1BF4 JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1C94 JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x1D03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH2 0x53E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x547 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x281 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH2 0x8E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1BF4 JUMP JUMPDEST PUSH2 0x911 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0xB02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST PUSH2 0xB89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0xDE9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x2081 JUMP JUMPDEST PUSH2 0xE4B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x3D1 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x434 SWAP1 PUSH2 0x210C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x460 SWAP1 PUSH2 0x210C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x482 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x490 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4C2 PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP PUSH2 0x4CF DUP2 DUP6 DUP6 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4EF PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP PUSH2 0x4FC DUP6 DUP3 DUP6 PUSH2 0x1042 JUMP JUMPDEST PUSH2 0x529 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x10CE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x558 PUSH2 0x552 PUSH2 0xE71 JUMP JUMPDEST DUP7 PUSH2 0x951 JUMP JUMPDEST PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58E SWAP1 PUSH2 0x21AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A6 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x10CE JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x614 PUSH2 0xE71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x66A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x661 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x754 JUMPI PUSH1 0x7 PUSH1 0x0 PUSH2 0x6C8 PUSH2 0xE71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x762 PUSH2 0xE71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x7F9 PUSH2 0xE71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x864 SWAP1 PUSH2 0x210C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x890 SWAP1 PUSH2 0x210C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x90C PUSH2 0x8F2 PUSH2 0xE71 JUMP JUMPDEST DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x1 PUSH2 0x10CE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x947 PUSH2 0x91E PUSH2 0xE71 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x10CE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xA69 JUMPI POP PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xA68 JUMPI POP PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST JUMPDEST DUP1 PUSH2 0xAFA JUMPI POP PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB91 PUSH2 0xE71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF5 SWAP1 PUSH2 0x22D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCF1 JUMPI PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xC5E PUSH2 0xE71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD85 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 PUSH2 0xCFD PUSH2 0xE71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE JUMPDEST PUSH2 0xD8D PUSH2 0xE71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0xDFA PUSH2 0xDF4 PUSH2 0xE71 JUMP JUMPDEST DUP6 PUSH2 0x951 JUMP JUMPDEST PUSH2 0xE39 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE30 SWAP1 PUSH2 0x21AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE45 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11EC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xE6D PUSH2 0xE56 PUSH2 0xE71 JUMP JUMPDEST DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x11EC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDF SWAP1 PUSH2 0x2365 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4E SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1035 SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104E DUP5 DUP5 PUSH2 0xB02 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x10C8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x10BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B1 SWAP1 PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10C7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xE79 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x113D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1134 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A3 SWAP1 PUSH2 0x2587 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11B6 PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP PUSH2 0x11C6 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x11D4 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0x11E3 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x17BF JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x125B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1252 SWAP1 PUSH2 0x2619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1265 PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP PUSH2 0x1276 DUP2 DUP7 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x1283 DUP2 DUP7 PUSH1 0x0 DUP8 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x1309 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1300 SWAP1 PUSH2 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP2 SUB PUSH1 0x0 DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1360 SWAP2 SWAP1 PUSH2 0x26FA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x13C8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2783 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP8 PUSH1 0x40 MLOAD PUSH2 0x142E SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAABBB8CA DUP8 PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14AF SWAP3 SWAP2 SWAP1 PUSH2 0x27F0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14F0 SWAP2 SWAP1 PUSH2 0x282E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x159C JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x75AB9782 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1569 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x285B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1597 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15B1 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1637 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162E SWAP1 PUSH2 0x293C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP2 SUB PUSH1 0x0 DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16CA SWAP2 SWAP1 PUSH2 0x295C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1749 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2783 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0x17AE SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAABBB8CA DUP8 PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1830 SWAP3 SWAP2 SWAP1 PUSH2 0x27F0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x184D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1871 SWAP2 SWAP1 PUSH2 0x282E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1920 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x23DE29 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18E9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x285B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1917 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1987 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1986 JUMPI PUSH2 0x1945 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1997 JUMP JUMPDEST ISZERO PUSH2 0x1985 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x197C SWAP1 PUSH2 0x2A28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A11 DUP3 PUSH2 0x19E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A21 DUP2 PUSH2 0x1A06 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A33 DUP4 DUP4 PUSH2 0x1A18 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A57 DUP3 PUSH2 0x19BA JUMP JUMPDEST PUSH2 0x1A61 DUP2 DUP6 PUSH2 0x19C5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A6C DUP4 PUSH2 0x19D6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A9D JUMPI DUP2 MLOAD PUSH2 0x1A84 DUP9 DUP3 PUSH2 0x1A27 JUMP JUMPDEST SWAP8 POP PUSH2 0x1A8F DUP4 PUSH2 0x1A3F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A70 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AC4 DUP2 DUP5 PUSH2 0x1A4C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B06 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AEB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B2E DUP3 PUSH2 0x1ACC JUMP JUMPDEST PUSH2 0x1B38 DUP2 DUP6 PUSH2 0x1AD7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B48 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AE8 JUMP JUMPDEST PUSH2 0x1B51 DUP2 PUSH2 0x1B12 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B76 DUP2 DUP5 PUSH2 0x1B23 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B9B DUP2 PUSH2 0x1A06 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BB8 DUP2 PUSH2 0x1B92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD1 DUP2 PUSH2 0x1BBE JUMP JUMPDEST DUP2 EQ PUSH2 0x1BDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BEE DUP2 PUSH2 0x1BC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C0B JUMPI PUSH2 0x1C0A PUSH2 0x1B88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C19 DUP6 DUP3 DUP7 ADD PUSH2 0x1BA9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C2A DUP6 DUP3 DUP7 ADD PUSH2 0x1BDF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C49 DUP2 PUSH2 0x1C34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C64 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C73 DUP2 PUSH2 0x1BBE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C8E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CAD JUMPI PUSH2 0x1CAC PUSH2 0x1B88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CBB DUP7 DUP3 DUP8 ADD PUSH2 0x1BA9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1CCC DUP7 DUP3 DUP8 ADD PUSH2 0x1BA9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1CDD DUP7 DUP3 DUP8 ADD PUSH2 0x1BDF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CFD DUP2 PUSH2 0x1CE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1D60 DUP3 PUSH2 0x1B12 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D7F JUMPI PUSH2 0x1D7E PUSH2 0x1D28 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D92 PUSH2 0x1B7E JUMP JUMPDEST SWAP1 POP PUSH2 0x1D9E DUP3 DUP3 PUSH2 0x1D57 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DBE JUMPI PUSH2 0x1DBD PUSH2 0x1D28 JUMP JUMPDEST JUMPDEST PUSH2 0x1DC7 DUP3 PUSH2 0x1B12 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF6 PUSH2 0x1DF1 DUP5 PUSH2 0x1DA3 JUMP JUMPDEST PUSH2 0x1D88 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E12 JUMPI PUSH2 0x1E11 PUSH2 0x1D23 JUMP JUMPDEST JUMPDEST PUSH2 0x1E1D DUP5 DUP3 DUP6 PUSH2 0x1DD4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E3A JUMPI PUSH2 0x1E39 PUSH2 0x1D1E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E4A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E6F JUMPI PUSH2 0x1E6E PUSH2 0x1B88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E7D DUP9 DUP3 DUP10 ADD PUSH2 0x1BA9 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1E8E DUP9 DUP3 DUP10 ADD PUSH2 0x1BA9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1E9F DUP9 DUP3 DUP10 ADD PUSH2 0x1BDF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EC0 JUMPI PUSH2 0x1EBF PUSH2 0x1B8D JUMP JUMPDEST JUMPDEST PUSH2 0x1ECC DUP9 DUP3 DUP10 ADD PUSH2 0x1E25 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EED JUMPI PUSH2 0x1EEC PUSH2 0x1B8D JUMP JUMPDEST JUMPDEST PUSH2 0x1EF9 DUP9 DUP3 DUP10 ADD PUSH2 0x1E25 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F1C JUMPI PUSH2 0x1F1B PUSH2 0x1B88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F2A DUP5 DUP3 DUP6 ADD PUSH2 0x1BA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F4C JUMPI PUSH2 0x1F4B PUSH2 0x1B88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F5A DUP7 DUP3 DUP8 ADD PUSH2 0x1BA9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F6B DUP7 DUP3 DUP8 ADD PUSH2 0x1BDF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F8C JUMPI PUSH2 0x1F8B PUSH2 0x1B8D JUMP JUMPDEST JUMPDEST PUSH2 0x1F98 DUP7 DUP3 DUP8 ADD PUSH2 0x1E25 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FB9 JUMPI PUSH2 0x1FB8 PUSH2 0x1B88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FC7 DUP6 DUP3 DUP7 ADD PUSH2 0x1BA9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FD8 DUP6 DUP3 DUP7 ADD PUSH2 0x1BA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1FFC JUMPI PUSH2 0x1FFB PUSH2 0x1B88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x200A DUP8 DUP3 DUP9 ADD PUSH2 0x1BA9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x201B DUP8 DUP3 DUP9 ADD PUSH2 0x1BDF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x203C JUMPI PUSH2 0x203B PUSH2 0x1B8D JUMP JUMPDEST JUMPDEST PUSH2 0x2048 DUP8 DUP3 DUP9 ADD PUSH2 0x1E25 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2069 JUMPI PUSH2 0x2068 PUSH2 0x1B8D JUMP JUMPDEST JUMPDEST PUSH2 0x2075 DUP8 DUP3 DUP9 ADD PUSH2 0x1E25 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2098 JUMPI PUSH2 0x2097 PUSH2 0x1B88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20A6 DUP6 DUP3 DUP7 ADD PUSH2 0x1BDF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20C7 JUMPI PUSH2 0x20C6 PUSH2 0x1B8D JUMP JUMPDEST JUMPDEST PUSH2 0x20D3 DUP6 DUP3 DUP7 ADD PUSH2 0x1E25 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2124 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2137 JUMPI PUSH2 0x2136 PUSH2 0x20DD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7220666F7220686F6C6465720000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2199 PUSH1 0x2C DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x21A4 DUP3 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21C8 DUP2 PUSH2 0x218C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433737373A20617574686F72697A696E672073656C66206173206F706572 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x61746F7200000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222B PUSH1 0x24 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2236 DUP3 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x225A DUP2 PUSH2 0x221E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BD PUSH1 0x21 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x22C8 DUP3 PUSH2 0x2261 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22EC DUP2 PUSH2 0x22B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x234F PUSH1 0x25 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x235A DUP3 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x237E DUP2 PUSH2 0x2342 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433737373A20617070726F766520746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E1 PUSH1 0x23 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x23EC DUP3 PUSH2 0x2385 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2410 DUP2 PUSH2 0x23D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433737373A20696E73756666696369656E7420616C6C6F77616E63650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x244D PUSH1 0x1E DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2458 DUP3 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x247C DUP2 PUSH2 0x2440 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24DF PUSH1 0x26 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x24EA DUP3 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x250E DUP2 PUSH2 0x24D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433737373A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2571 PUSH1 0x24 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x257C DUP3 PUSH2 0x2515 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25A0 DUP2 PUSH2 0x2564 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2603 PUSH1 0x22 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x260E DUP3 PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2632 DUP2 PUSH2 0x25F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E63650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2695 PUSH1 0x23 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x26A0 DUP3 PUSH2 0x2639 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26C4 DUP2 PUSH2 0x2688 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2705 DUP3 PUSH2 0x1BBE JUMP JUMPDEST SWAP2 POP PUSH2 0x2710 DUP4 PUSH2 0x1BBE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2728 JUMPI PUSH2 0x2727 PUSH2 0x26CB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2755 DUP3 PUSH2 0x272E JUMP JUMPDEST PUSH2 0x275F DUP2 DUP6 PUSH2 0x2739 JUMP JUMPDEST SWAP4 POP PUSH2 0x276F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AE8 JUMP JUMPDEST PUSH2 0x2778 DUP2 PUSH2 0x1B12 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2798 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1C6A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x27AA DUP2 DUP6 PUSH2 0x274A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x27BE DUP2 DUP5 PUSH2 0x274A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x27D1 DUP2 PUSH2 0x1A06 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27EA DUP2 PUSH2 0x27D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2805 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x2812 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x27E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2828 DUP2 PUSH2 0x1B92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2844 JUMPI PUSH2 0x2843 PUSH2 0x1B88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2852 DUP5 DUP3 DUP6 ADD PUSH2 0x2819 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2870 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x287D PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x288A PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x2897 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1C6A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x28A9 DUP2 DUP6 PUSH2 0x274A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x28BD DUP2 DUP5 PUSH2 0x274A JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x62616C616E636500000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2926 PUSH1 0x27 DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2931 DUP3 PUSH2 0x28CA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2955 DUP2 PUSH2 0x2919 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2967 DUP3 PUSH2 0x1BBE JUMP JUMPDEST SWAP2 POP PUSH2 0x2972 DUP4 PUSH2 0x1BBE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x298A JUMPI PUSH2 0x2989 PUSH2 0x26CB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6B656E73526563697069656E7400000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A12 PUSH1 0x4D DUP4 PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A1D DUP3 PUSH2 0x2990 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A41 DUP2 PUSH2 0x2A05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ 0xE1 EXP DUP14 CALLVALUE SWAP1 RETURNDATACOPY EQ 0x2F NUMBER 0xC1 PUSH28 0xE012419CB01A52347E233C23A63D3DE79E661D964736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "24363:17821:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29921:132;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26287:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31733:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27113:125;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32430:292;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26744:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26950:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;30179:375;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;27343:152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28946:422;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;26448:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27632:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28038:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28558:316;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31263:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29437:413;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30682:333;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28361:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29921:132;29987:16;30023:22;30016:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29921:132;:::o;26287:100::-;26341:13;26374:5;26367:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26287:100;:::o;31733:201::-;31815:4;31832:14;31849:12;:10;:12::i;:::-;31832:29;;31872:32;31881:6;31889:7;31898:5;31872:8;:32::i;:::-;31922:4;31915:11;;;31733:201;;;;:::o;27113:125::-;27191:7;27218:12;;27211:19;;27113:125;:::o;32430:292::-;32536:4;32553:15;32571:12;:10;:12::i;:::-;32553:30;;32594:40;32610:6;32618:7;32627:6;32594:15;:40::i;:::-;32645:47;32651:6;32659:9;32670:6;32645:47;;;;;;;;;;;;;;;;;;;;;;;;32686:5;32645;:47::i;:::-;32710:4;32703:11;;;32430:292;;;;;:::o;26744:84::-;26793:5;26818:2;26811:9;;26744:84;:::o;26950:97::-;27011:7;27038:1;27031:8;;26950:97;:::o;30179:375::-;30393:35;30407:12;:10;:12::i;:::-;30421:6;30393:13;:35::i;:::-;30385:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;30488:58;30494:6;30502:9;30513:6;30521:4;30527:12;30541:4;30488:5;:58::i;:::-;30179:375;;;;;:::o;27343:152::-;27438:7;27465:9;:22;27475:11;27465:22;;;;;;;;;;;;;;;;27458:29;;27343:152;;;:::o;28946:422::-;29050:8;29034:24;;:12;:10;:12::i;:::-;:24;;;29026:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;29116:17;:27;29134:8;29116:27;;;;;;;;;;;;;;;;;;;;;;;;;29112:189;;;29167:24;:38;29192:12;:10;:12::i;:::-;29167:38;;;;;;;;;;;;;;;:48;29206:8;29167:48;;;;;;;;;;;;;;;;29160:55;;;;;;;;;;;29112:189;;;29285:4;29248:10;:24;29259:12;:10;:12::i;:::-;29248:24;;;;;;;;;;;;;;;:34;29273:8;29248:34;;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;29112:189;29347:12;:10;:12::i;:::-;29318:42;;29337:8;29318:42;;;;;;;;;;;;28946:422;:::o;26448:104::-;26504:13;26537:7;26530:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26448:104;:::o;27632:165::-;27735:54;27741:12;:10;:12::i;:::-;27755:9;27766:6;27774:4;27735:54;;;;;;;;;;;;27784:4;27735:5;:54::i;:::-;27632:165;;;:::o;28038:186::-;28124:4;28141:53;28147:12;:10;:12::i;:::-;28161:9;28172:6;28141:53;;;;;;;;;;;;;;;;;;;;;;;;28188:5;28141;:53::i;:::-;28212:4;28205:11;;28038:186;;;;:::o;28558:316::-;28658:4;28707:11;28695:23;;:8;:23;;;:121;;;;28736:17;:27;28754:8;28736:27;;;;;;;;;;;;;;;;;;;;;;;;;:79;;;;;28768:24;:37;28793:11;28768:37;;;;;;;;;;;;;;;:47;28806:8;28768:47;;;;;;;;;;;;;;;;;;;;;;;;;28767:48;28736:79;28695:121;:171;;;;28833:10;:23;28844:11;28833:23;;;;;;;;;;;;;;;:33;28857:8;28833:33;;;;;;;;;;;;;;;;;;;;;;;;;28695:171;28675:191;;28558:316;;;;:::o;31263:153::-;31353:7;31380:11;:19;31392:6;31380:19;;;;;;;;;;;;;;;:28;31400:7;31380:28;;;;;;;;;;;;;;;;31373:35;;31263:153;;;;:::o;29437:413::-;29534:12;:10;:12::i;:::-;29522:24;;:8;:24;;;29514:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;29601:17;:27;29619:8;29601:27;;;;;;;;;;;;;;;;;;;;;;;;;29597:189;;;29696:4;29645:24;:38;29670:12;:10;:12::i;:::-;29645:38;;;;;;;;;;;;;;;:48;29684:8;29645:48;;;;;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;29597:189;;;29740:10;:24;29751:12;:10;:12::i;:::-;29740:24;;;;;;;;;;;;;;;:34;29765:8;29740:34;;;;;;;;;;;;;;;;29733:41;;;;;;;;;;;29597:189;29829:12;:10;:12::i;:::-;29803:39;;29819:8;29803:39;;;;;;;;;;;;29437:413;:::o;30682:333::-;30869:36;30883:12;:10;:12::i;:::-;30897:7;30869:13;:36::i;:::-;30861:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;30965:42;30971:7;30980:6;30988:4;30994:12;30965:5;:42::i;:::-;30682:333;;;;:::o;28361:129::-;28445:37;28451:12;:10;:12::i;:::-;28465:6;28473:4;28445:37;;;;;;;;;;;;:5;:37::i;:::-;28361:129;;:::o;19988:98::-;20041:7;20068:10;20061:17;;19988:98;:::o;37984:349::-;38104:1;38086:20;;:6;:20;;;38078:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;38186:1;38167:21;;:7;:21;;;38159:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;38272:5;38241:11;:19;38253:6;38241:19;;;;;;;;;;;;;;;:28;38261:7;38241:28;;;;;;;;;;;;;;;:36;;;;38310:7;38293:32;;38302:6;38293:32;;;38319:5;38293:32;;;;;;:::i;:::-;;;;;;;;37984:349;;;:::o;40992:420::-;41093:24;41120:25;41130:5;41137:7;41120:9;:25::i;:::-;41093:52;;41180:17;41160:16;:37;41156:249;;41242:6;41222:16;:26;;41214:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;41327:51;41336:5;41343:7;41371:6;41352:16;:25;41327:8;:51::i;:::-;41156:249;41082:330;40992:420;;;:::o;35419:676::-;35665:1;35649:18;;:4;:18;;;35641:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;35743:1;35729:16;;:2;:16;;;35721:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;35799:16;35818:12;:10;:12::i;:::-;35799:31;;35843:69;35861:8;35871:4;35877:2;35881:6;35889:8;35899:12;35843:17;:69::i;:::-;35925:57;35931:8;35941:4;35947:2;35951:6;35959:8;35969:12;35925:5;:57::i;:::-;35995:92;36015:8;36025:4;36031:2;36035:6;36043:8;36053:12;36067:19;35995;:92::i;:::-;35630:465;35419:676;;;;;;:::o;36409:792::-;36552:1;36536:18;;:4;:18;;;36528:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;36606:16;36625:12;:10;:12::i;:::-;36606:31;;36650:73;36668:8;36678:4;36692:1;36696:6;36704:4;36710:12;36650:17;:73::i;:::-;36736:56;36757:8;36767:4;36781:1;36785:6;36736:20;:56::i;:::-;36840:19;36862:9;:15;36872:4;36862:15;;;;;;;;;;;;;;;;36840:37;;36911:6;36896:11;:21;;36888:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;37025:6;37011:11;:20;36993:9;:15;37003:4;36993:15;;;;;;;;;;;;;;;:38;;;;37069:6;37053:12;;:22;;;;;;;:::i;:::-;;;;;;;;37110:4;37093:50;;37100:8;37093:50;;;37116:6;37124:4;37130:12;37093:50;;;;;;;;:::i;:::-;;;;;;;;37182:1;37159:34;;37168:4;37159:34;;;37186:6;37159:34;;;;;;:::i;:::-;;;;;;;;36517:684;;36409:792;;;;:::o;38817:484::-;39034:19;24520:42;39056:41;;;39098:4;24778:31;39056:78;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;39034:100;;39172:1;39149:25;;:11;:25;;;39145:149;;39205:11;39191:39;;;39231:8;39241:4;39247:2;39251:6;39259:8;39269:12;39191:91;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39145:149;39023:278;38817:484;;;;;;:::o;37209:630::-;37414:48;37435:8;37445:4;37451:2;37455:6;37414:20;:48::i;:::-;37475:19;37497:9;:15;37507:4;37497:15;;;;;;;;;;;;;;;;37475:37;;37546:6;37531:11;:21;;37523:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;37664:6;37650:11;:20;37632:9;:15;37642:4;37632:15;;;;;;;;;;;;;;;:38;;;;37709:6;37692:9;:13;37702:2;37692:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;37754:2;37733:56;;37748:4;37733:56;;37738:8;37733:56;;;37758:6;37766:8;37776:12;37733:56;;;;;;;;:::i;:::-;;;;;;;;37820:2;37805:26;;37814:4;37805:26;;;37824:6;37805:26;;;;;;:::i;:::-;;;;;;;;37403:436;37209:630;;;;;;:::o;40003:691::-;40257:19;24520:42;40279:41;;;40321:2;24876:34;40279:79;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;40257:101;;40396:1;40373:25;;:11;:25;;;40369:318;;40432:11;40415:44;;;40460:8;40470:4;40476:2;40480:6;40488:8;40498:12;40415:96;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40369:318;;;40533:19;40529:158;;;40578:15;:2;:13;;;:15::i;:::-;40577:16;40569:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;40529:158;40369:318;40246:448;40003:691;;;;;;;:::o;42072:109::-;;;;;:::o;11797:326::-;11857:4;12114:1;12092:7;:19;;;:23;12085:30;;11797:326;;;:::o;7:114:1:-;74:6;108:5;102:12;92:22;;7:114;;;:::o;127:184::-;226:11;260:6;255:3;248:19;300:4;295:3;291:14;276:29;;127:184;;;;:::o;317:132::-;384:4;407:3;399:11;;437:4;432:3;428:14;420:22;;317:132;;;:::o;455:126::-;492:7;532:42;525:5;521:54;510:65;;455:126;;;:::o;587:96::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;587:96;;;:::o;689:108::-;766:24;784:5;766:24;:::i;:::-;761:3;754:37;689:108;;:::o;803:179::-;872:10;893:46;935:3;927:6;893:46;:::i;:::-;971:4;966:3;962:14;948:28;;803:179;;;;:::o;988:113::-;1058:4;1090;1085:3;1081:14;1073:22;;988:113;;;:::o;1137:732::-;1256:3;1285:54;1333:5;1285:54;:::i;:::-;1355:86;1434:6;1429:3;1355:86;:::i;:::-;1348:93;;1465:56;1515:5;1465:56;:::i;:::-;1544:7;1575:1;1560:284;1585:6;1582:1;1579:13;1560:284;;;1661:6;1655:13;1688:63;1747:3;1732:13;1688:63;:::i;:::-;1681:70;;1774:60;1827:6;1774:60;:::i;:::-;1764:70;;1620:224;1607:1;1604;1600:9;1595:14;;1560:284;;;1564:14;1860:3;1853:10;;1261:608;;;1137:732;;;;:::o;1875:373::-;2018:4;2056:2;2045:9;2041:18;2033:26;;2105:9;2099:4;2095:20;2091:1;2080:9;2076:17;2069:47;2133:108;2236:4;2227:6;2133:108;:::i;:::-;2125:116;;1875:373;;;;:::o;2254:99::-;2306:6;2340:5;2334:12;2324:22;;2254:99;;;:::o;2359:169::-;2443:11;2477:6;2472:3;2465:19;2517:4;2512:3;2508:14;2493:29;;2359:169;;;;:::o;2534:246::-;2615:1;2625:113;2639:6;2636:1;2633:13;2625:113;;;2724:1;2719:3;2715:11;2709:18;2705:1;2700:3;2696:11;2689:39;2661:2;2658:1;2654:10;2649:15;;2625:113;;;2772:1;2763:6;2758:3;2754:16;2747:27;2596:184;2534:246;;;:::o;2786:102::-;2827:6;2878:2;2874:7;2869:2;2862:5;2858:14;2854:28;2844:38;;2786:102;;;:::o;2894:377::-;2982:3;3010:39;3043:5;3010:39;:::i;:::-;3065:71;3129:6;3124:3;3065:71;:::i;:::-;3058:78;;3145:65;3203:6;3198:3;3191:4;3184:5;3180:16;3145:65;:::i;:::-;3235:29;3257:6;3235:29;:::i;:::-;3230:3;3226:39;3219:46;;2986:285;2894:377;;;;:::o;3277:313::-;3390:4;3428:2;3417:9;3413:18;3405:26;;3477:9;3471:4;3467:20;3463:1;3452:9;3448:17;3441:47;3505:78;3578:4;3569:6;3505:78;:::i;:::-;3497:86;;3277:313;;;;:::o;3596:75::-;3629:6;3662:2;3656:9;3646:19;;3596:75;:::o;3677:117::-;3786:1;3783;3776:12;3800:117;3909:1;3906;3899:12;3923:122;3996:24;4014:5;3996:24;:::i;:::-;3989:5;3986:35;3976:63;;4035:1;4032;4025:12;3976:63;3923:122;:::o;4051:139::-;4097:5;4135:6;4122:20;4113:29;;4151:33;4178:5;4151:33;:::i;:::-;4051:139;;;;:::o;4196:77::-;4233:7;4262:5;4251:16;;4196:77;;;:::o;4279:122::-;4352:24;4370:5;4352:24;:::i;:::-;4345:5;4342:35;4332:63;;4391:1;4388;4381:12;4332:63;4279:122;:::o;4407:139::-;4453:5;4491:6;4478:20;4469:29;;4507:33;4534:5;4507:33;:::i;:::-;4407:139;;;;:::o;4552:474::-;4620:6;4628;4677:2;4665:9;4656:7;4652:23;4648:32;4645:119;;;4683:79;;:::i;:::-;4645:119;4803:1;4828:53;4873:7;4864:6;4853:9;4849:22;4828:53;:::i;:::-;4818:63;;4774:117;4930:2;4956:53;5001:7;4992:6;4981:9;4977:22;4956:53;:::i;:::-;4946:63;;4901:118;4552:474;;;;;:::o;5032:90::-;5066:7;5109:5;5102:13;5095:21;5084:32;;5032:90;;;:::o;5128:109::-;5209:21;5224:5;5209:21;:::i;:::-;5204:3;5197:34;5128:109;;:::o;5243:210::-;5330:4;5368:2;5357:9;5353:18;5345:26;;5381:65;5443:1;5432:9;5428:17;5419:6;5381:65;:::i;:::-;5243:210;;;;:::o;5459:118::-;5546:24;5564:5;5546:24;:::i;:::-;5541:3;5534:37;5459:118;;:::o;5583:222::-;5676:4;5714:2;5703:9;5699:18;5691:26;;5727:71;5795:1;5784:9;5780:17;5771:6;5727:71;:::i;:::-;5583:222;;;;:::o;5811:619::-;5888:6;5896;5904;5953:2;5941:9;5932:7;5928:23;5924:32;5921:119;;;5959:79;;:::i;:::-;5921:119;6079:1;6104:53;6149:7;6140:6;6129:9;6125:22;6104:53;:::i;:::-;6094:63;;6050:117;6206:2;6232:53;6277:7;6268:6;6257:9;6253:22;6232:53;:::i;:::-;6222:63;;6177:118;6334:2;6360:53;6405:7;6396:6;6385:9;6381:22;6360:53;:::i;:::-;6350:63;;6305:118;5811:619;;;;;:::o;6436:86::-;6471:7;6511:4;6504:5;6500:16;6489:27;;6436:86;;;:::o;6528:112::-;6611:22;6627:5;6611:22;:::i;:::-;6606:3;6599:35;6528:112;;:::o;6646:214::-;6735:4;6773:2;6762:9;6758:18;6750:26;;6786:67;6850:1;6839:9;6835:17;6826:6;6786:67;:::i;:::-;6646:214;;;;:::o;6866:117::-;6975:1;6972;6965:12;6989:117;7098:1;7095;7088:12;7112:180;7160:77;7157:1;7150:88;7257:4;7254:1;7247:15;7281:4;7278:1;7271:15;7298:281;7381:27;7403:4;7381:27;:::i;:::-;7373:6;7369:40;7511:6;7499:10;7496:22;7475:18;7463:10;7460:34;7457:62;7454:88;;;7522:18;;:::i;:::-;7454:88;7562:10;7558:2;7551:22;7341:238;7298:281;;:::o;7585:129::-;7619:6;7646:20;;:::i;:::-;7636:30;;7675:33;7703:4;7695:6;7675:33;:::i;:::-;7585:129;;;:::o;7720:307::-;7781:4;7871:18;7863:6;7860:30;7857:56;;;7893:18;;:::i;:::-;7857:56;7931:29;7953:6;7931:29;:::i;:::-;7923:37;;8015:4;8009;8005:15;7997:23;;7720:307;;;:::o;8033:146::-;8130:6;8125:3;8120;8107:30;8171:1;8162:6;8157:3;8153:16;8146:27;8033:146;;;:::o;8185:423::-;8262:5;8287:65;8303:48;8344:6;8303:48;:::i;:::-;8287:65;:::i;:::-;8278:74;;8375:6;8368:5;8361:21;8413:4;8406:5;8402:16;8451:3;8442:6;8437:3;8433:16;8430:25;8427:112;;;8458:79;;:::i;:::-;8427:112;8548:54;8595:6;8590:3;8585;8548:54;:::i;:::-;8268:340;8185:423;;;;;:::o;8627:338::-;8682:5;8731:3;8724:4;8716:6;8712:17;8708:27;8698:122;;8739:79;;:::i;:::-;8698:122;8856:6;8843:20;8881:78;8955:3;8947:6;8940:4;8932:6;8928:17;8881:78;:::i;:::-;8872:87;;8688:277;8627:338;;;;:::o;8971:1267::-;9084:6;9092;9100;9108;9116;9165:3;9153:9;9144:7;9140:23;9136:33;9133:120;;;9172:79;;:::i;:::-;9133:120;9292:1;9317:53;9362:7;9353:6;9342:9;9338:22;9317:53;:::i;:::-;9307:63;;9263:117;9419:2;9445:53;9490:7;9481:6;9470:9;9466:22;9445:53;:::i;:::-;9435:63;;9390:118;9547:2;9573:53;9618:7;9609:6;9598:9;9594:22;9573:53;:::i;:::-;9563:63;;9518:118;9703:2;9692:9;9688:18;9675:32;9734:18;9726:6;9723:30;9720:117;;;9756:79;;:::i;:::-;9720:117;9861:62;9915:7;9906:6;9895:9;9891:22;9861:62;:::i;:::-;9851:72;;9646:287;10000:3;9989:9;9985:19;9972:33;10032:18;10024:6;10021:30;10018:117;;;10054:79;;:::i;:::-;10018:117;10159:62;10213:7;10204:6;10193:9;10189:22;10159:62;:::i;:::-;10149:72;;9943:288;8971:1267;;;;;;;;:::o;10244:329::-;10303:6;10352:2;10340:9;10331:7;10327:23;10323:32;10320:119;;;10358:79;;:::i;:::-;10320:119;10478:1;10503:53;10548:7;10539:6;10528:9;10524:22;10503:53;:::i;:::-;10493:63;;10449:117;10244:329;;;;:::o;10579:797::-;10665:6;10673;10681;10730:2;10718:9;10709:7;10705:23;10701:32;10698:119;;;10736:79;;:::i;:::-;10698:119;10856:1;10881:53;10926:7;10917:6;10906:9;10902:22;10881:53;:::i;:::-;10871:63;;10827:117;10983:2;11009:53;11054:7;11045:6;11034:9;11030:22;11009:53;:::i;:::-;10999:63;;10954:118;11139:2;11128:9;11124:18;11111:32;11170:18;11162:6;11159:30;11156:117;;;11192:79;;:::i;:::-;11156:117;11297:62;11351:7;11342:6;11331:9;11327:22;11297:62;:::i;:::-;11287:72;;11082:287;10579:797;;;;;:::o;11382:474::-;11450:6;11458;11507:2;11495:9;11486:7;11482:23;11478:32;11475:119;;;11513:79;;:::i;:::-;11475:119;11633:1;11658:53;11703:7;11694:6;11683:9;11679:22;11658:53;:::i;:::-;11648:63;;11604:117;11760:2;11786:53;11831:7;11822:6;11811:9;11807:22;11786:53;:::i;:::-;11776:63;;11731:118;11382:474;;;;;:::o;11862:1121::-;11966:6;11974;11982;11990;12039:3;12027:9;12018:7;12014:23;12010:33;12007:120;;;12046:79;;:::i;:::-;12007:120;12166:1;12191:53;12236:7;12227:6;12216:9;12212:22;12191:53;:::i;:::-;12181:63;;12137:117;12293:2;12319:53;12364:7;12355:6;12344:9;12340:22;12319:53;:::i;:::-;12309:63;;12264:118;12449:2;12438:9;12434:18;12421:32;12480:18;12472:6;12469:30;12466:117;;;12502:79;;:::i;:::-;12466:117;12607:62;12661:7;12652:6;12641:9;12637:22;12607:62;:::i;:::-;12597:72;;12392:287;12746:2;12735:9;12731:18;12718:32;12777:18;12769:6;12766:30;12763:117;;;12799:79;;:::i;:::-;12763:117;12904:62;12958:7;12949:6;12938:9;12934:22;12904:62;:::i;:::-;12894:72;;12689:287;11862:1121;;;;;;;:::o;12989:652::-;13066:6;13074;13123:2;13111:9;13102:7;13098:23;13094:32;13091:119;;;13129:79;;:::i;:::-;13091:119;13249:1;13274:53;13319:7;13310:6;13299:9;13295:22;13274:53;:::i;:::-;13264:63;;13220:117;13404:2;13393:9;13389:18;13376:32;13435:18;13427:6;13424:30;13421:117;;;13457:79;;:::i;:::-;13421:117;13562:62;13616:7;13607:6;13596:9;13592:22;13562:62;:::i;:::-;13552:72;;13347:287;12989:652;;;;;:::o;13647:180::-;13695:77;13692:1;13685:88;13792:4;13789:1;13782:15;13816:4;13813:1;13806:15;13833:320;13877:6;13914:1;13908:4;13904:12;13894:22;;13961:1;13955:4;13951:12;13982:18;13972:81;;14038:4;14030:6;14026:17;14016:27;;13972:81;14100:2;14092:6;14089:14;14069:18;14066:38;14063:84;;14119:18;;:::i;:::-;14063:84;13884:269;13833:320;;;:::o;14159:231::-;14299:34;14295:1;14287:6;14283:14;14276:58;14368:14;14363:2;14355:6;14351:15;14344:39;14159:231;:::o;14396:366::-;14538:3;14559:67;14623:2;14618:3;14559:67;:::i;:::-;14552:74;;14635:93;14724:3;14635:93;:::i;:::-;14753:2;14748:3;14744:12;14737:19;;14396:366;;;:::o;14768:419::-;14934:4;14972:2;14961:9;14957:18;14949:26;;15021:9;15015:4;15011:20;15007:1;14996:9;14992:17;14985:47;15049:131;15175:4;15049:131;:::i;:::-;15041:139;;14768:419;;;:::o;15193:223::-;15333:34;15329:1;15321:6;15317:14;15310:58;15402:6;15397:2;15389:6;15385:15;15378:31;15193:223;:::o;15422:366::-;15564:3;15585:67;15649:2;15644:3;15585:67;:::i;:::-;15578:74;;15661:93;15750:3;15661:93;:::i;:::-;15779:2;15774:3;15770:12;15763:19;;15422:366;;;:::o;15794:419::-;15960:4;15998:2;15987:9;15983:18;15975:26;;16047:9;16041:4;16037:20;16033:1;16022:9;16018:17;16011:47;16075:131;16201:4;16075:131;:::i;:::-;16067:139;;15794:419;;;:::o;16219:220::-;16359:34;16355:1;16347:6;16343:14;16336:58;16428:3;16423:2;16415:6;16411:15;16404:28;16219:220;:::o;16445:366::-;16587:3;16608:67;16672:2;16667:3;16608:67;:::i;:::-;16601:74;;16684:93;16773:3;16684:93;:::i;:::-;16802:2;16797:3;16793:12;16786:19;;16445:366;;;:::o;16817:419::-;16983:4;17021:2;17010:9;17006:18;16998:26;;17070:9;17064:4;17060:20;17056:1;17045:9;17041:17;17034:47;17098:131;17224:4;17098:131;:::i;:::-;17090:139;;16817:419;;;:::o;17242:224::-;17382:34;17378:1;17370:6;17366:14;17359:58;17451:7;17446:2;17438:6;17434:15;17427:32;17242:224;:::o;17472:366::-;17614:3;17635:67;17699:2;17694:3;17635:67;:::i;:::-;17628:74;;17711:93;17800:3;17711:93;:::i;:::-;17829:2;17824:3;17820:12;17813:19;;17472:366;;;:::o;17844:419::-;18010:4;18048:2;18037:9;18033:18;18025:26;;18097:9;18091:4;18087:20;18083:1;18072:9;18068:17;18061:47;18125:131;18251:4;18125:131;:::i;:::-;18117:139;;17844:419;;;:::o;18269:222::-;18409:34;18405:1;18397:6;18393:14;18386:58;18478:5;18473:2;18465:6;18461:15;18454:30;18269:222;:::o;18497:366::-;18639:3;18660:67;18724:2;18719:3;18660:67;:::i;:::-;18653:74;;18736:93;18825:3;18736:93;:::i;:::-;18854:2;18849:3;18845:12;18838:19;;18497:366;;;:::o;18869:419::-;19035:4;19073:2;19062:9;19058:18;19050:26;;19122:9;19116:4;19112:20;19108:1;19097:9;19093:17;19086:47;19150:131;19276:4;19150:131;:::i;:::-;19142:139;;18869:419;;;:::o;19294:180::-;19434:32;19430:1;19422:6;19418:14;19411:56;19294:180;:::o;19480:366::-;19622:3;19643:67;19707:2;19702:3;19643:67;:::i;:::-;19636:74;;19719:93;19808:3;19719:93;:::i;:::-;19837:2;19832:3;19828:12;19821:19;;19480:366;;;:::o;19852:419::-;20018:4;20056:2;20045:9;20041:18;20033:26;;20105:9;20099:4;20095:20;20091:1;20080:9;20076:17;20069:47;20133:131;20259:4;20133:131;:::i;:::-;20125:139;;19852:419;;;:::o;20277:225::-;20417:34;20413:1;20405:6;20401:14;20394:58;20486:8;20481:2;20473:6;20469:15;20462:33;20277:225;:::o;20508:366::-;20650:3;20671:67;20735:2;20730:3;20671:67;:::i;:::-;20664:74;;20747:93;20836:3;20747:93;:::i;:::-;20865:2;20860:3;20856:12;20849:19;;20508:366;;;:::o;20880:419::-;21046:4;21084:2;21073:9;21069:18;21061:26;;21133:9;21127:4;21123:20;21119:1;21108:9;21104:17;21097:47;21161:131;21287:4;21161:131;:::i;:::-;21153:139;;20880:419;;;:::o;21305:223::-;21445:34;21441:1;21433:6;21429:14;21422:58;21514:6;21509:2;21501:6;21497:15;21490:31;21305:223;:::o;21534:366::-;21676:3;21697:67;21761:2;21756:3;21697:67;:::i;:::-;21690:74;;21773:93;21862:3;21773:93;:::i;:::-;21891:2;21886:3;21882:12;21875:19;;21534:366;;;:::o;21906:419::-;22072:4;22110:2;22099:9;22095:18;22087:26;;22159:9;22153:4;22149:20;22145:1;22134:9;22130:17;22123:47;22187:131;22313:4;22187:131;:::i;:::-;22179:139;;21906:419;;;:::o;22331:221::-;22471:34;22467:1;22459:6;22455:14;22448:58;22540:4;22535:2;22527:6;22523:15;22516:29;22331:221;:::o;22558:366::-;22700:3;22721:67;22785:2;22780:3;22721:67;:::i;:::-;22714:74;;22797:93;22886:3;22797:93;:::i;:::-;22915:2;22910:3;22906:12;22899:19;;22558:366;;;:::o;22930:419::-;23096:4;23134:2;23123:9;23119:18;23111:26;;23183:9;23177:4;23173:20;23169:1;23158:9;23154:17;23147:47;23211:131;23337:4;23211:131;:::i;:::-;23203:139;;22930:419;;;:::o;23355:222::-;23495:34;23491:1;23483:6;23479:14;23472:58;23564:5;23559:2;23551:6;23547:15;23540:30;23355:222;:::o;23583:366::-;23725:3;23746:67;23810:2;23805:3;23746:67;:::i;:::-;23739:74;;23822:93;23911:3;23822:93;:::i;:::-;23940:2;23935:3;23931:12;23924:19;;23583:366;;;:::o;23955:419::-;24121:4;24159:2;24148:9;24144:18;24136:26;;24208:9;24202:4;24198:20;24194:1;24183:9;24179:17;24172:47;24236:131;24362:4;24236:131;:::i;:::-;24228:139;;23955:419;;;:::o;24380:180::-;24428:77;24425:1;24418:88;24525:4;24522:1;24515:15;24549:4;24546:1;24539:15;24566:194;24606:4;24626:20;24644:1;24626:20;:::i;:::-;24621:25;;24660:20;24678:1;24660:20;:::i;:::-;24655:25;;24704:1;24701;24697:9;24689:17;;24728:1;24722:4;24719:11;24716:37;;;24733:18;;:::i;:::-;24716:37;24566:194;;;;:::o;24766:98::-;24817:6;24851:5;24845:12;24835:22;;24766:98;;;:::o;24870:168::-;24953:11;24987:6;24982:3;24975:19;25027:4;25022:3;25018:14;25003:29;;24870:168;;;;:::o;25044:373::-;25130:3;25158:38;25190:5;25158:38;:::i;:::-;25212:70;25275:6;25270:3;25212:70;:::i;:::-;25205:77;;25291:65;25349:6;25344:3;25337:4;25330:5;25326:16;25291:65;:::i;:::-;25381:29;25403:6;25381:29;:::i;:::-;25376:3;25372:39;25365:46;;25134:283;25044:373;;;;:::o;25423:616::-;25608:4;25646:2;25635:9;25631:18;25623:26;;25659:71;25727:1;25716:9;25712:17;25703:6;25659:71;:::i;:::-;25777:9;25771:4;25767:20;25762:2;25751:9;25747:18;25740:48;25805:76;25876:4;25867:6;25805:76;:::i;:::-;25797:84;;25928:9;25922:4;25918:20;25913:2;25902:9;25898:18;25891:48;25956:76;26027:4;26018:6;25956:76;:::i;:::-;25948:84;;25423:616;;;;;;:::o;26045:118::-;26132:24;26150:5;26132:24;:::i;:::-;26127:3;26120:37;26045:118;;:::o;26169:77::-;26206:7;26235:5;26224:16;;26169:77;;;:::o;26252:118::-;26339:24;26357:5;26339:24;:::i;:::-;26334:3;26327:37;26252:118;;:::o;26376:332::-;26497:4;26535:2;26524:9;26520:18;26512:26;;26548:71;26616:1;26605:9;26601:17;26592:6;26548:71;:::i;:::-;26629:72;26697:2;26686:9;26682:18;26673:6;26629:72;:::i;:::-;26376:332;;;;;:::o;26714:143::-;26771:5;26802:6;26796:13;26787:22;;26818:33;26845:5;26818:33;:::i;:::-;26714:143;;;;:::o;26863:351::-;26933:6;26982:2;26970:9;26961:7;26957:23;26953:32;26950:119;;;26988:79;;:::i;:::-;26950:119;27108:1;27133:64;27189:7;27180:6;27169:9;27165:22;27133:64;:::i;:::-;27123:74;;27079:128;26863:351;;;;:::o;27220:949::-;27489:4;27527:3;27516:9;27512:19;27504:27;;27541:71;27609:1;27598:9;27594:17;27585:6;27541:71;:::i;:::-;27622:72;27690:2;27679:9;27675:18;27666:6;27622:72;:::i;:::-;27704;27772:2;27761:9;27757:18;27748:6;27704:72;:::i;:::-;27786;27854:2;27843:9;27839:18;27830:6;27786:72;:::i;:::-;27906:9;27900:4;27896:20;27890:3;27879:9;27875:19;27868:49;27934:76;28005:4;27996:6;27934:76;:::i;:::-;27926:84;;28058:9;28052:4;28048:20;28042:3;28031:9;28027:19;28020:49;28086:76;28157:4;28148:6;28086:76;:::i;:::-;28078:84;;27220:949;;;;;;;;;:::o;28175:226::-;28315:34;28311:1;28303:6;28299:14;28292:58;28384:9;28379:2;28371:6;28367:15;28360:34;28175:226;:::o;28407:366::-;28549:3;28570:67;28634:2;28629:3;28570:67;:::i;:::-;28563:74;;28646:93;28735:3;28646:93;:::i;:::-;28764:2;28759:3;28755:12;28748:19;;28407:366;;;:::o;28779:419::-;28945:4;28983:2;28972:9;28968:18;28960:26;;29032:9;29026:4;29022:20;29018:1;29007:9;29003:17;28996:47;29060:131;29186:4;29060:131;:::i;:::-;29052:139;;28779:419;;;:::o;29204:191::-;29244:3;29263:20;29281:1;29263:20;:::i;:::-;29258:25;;29297:20;29315:1;29297:20;:::i;:::-;29292:25;;29340:1;29337;29333:9;29326:16;;29361:3;29358:1;29355:10;29352:36;;;29368:18;;:::i;:::-;29352:36;29204:191;;;;:::o;29401:301::-;29541:34;29537:1;29529:6;29525:14;29518:58;29610:34;29605:2;29597:6;29593:15;29586:59;29679:15;29674:2;29666:6;29662:15;29655:40;29401:301;:::o;29708:366::-;29850:3;29871:67;29935:2;29930:3;29871:67;:::i;:::-;29864:74;;29947:93;30036:3;29947:93;:::i;:::-;30065:2;30060:3;30056:12;30049:19;;29708:366;;;:::o;30080:419::-;30246:4;30284:2;30273:9;30269:18;30261:26;;30333:9;30327:4;30323:20;30319:1;30308:9;30304:17;30297:47;30361:131;30487:4;30361:131;:::i;:::-;30353:139;;30080:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2175600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"authorizeOperator(address)": "infinite",
								"balanceOf(address)": "2952",
								"burn(uint256,bytes)": "infinite",
								"decimals()": "388",
								"defaultOperators()": "infinite",
								"granularity()": "404",
								"isOperatorFor(address,address)": "infinite",
								"name()": "infinite",
								"operatorBurn(address,uint256,bytes,bytes)": "infinite",
								"operatorSend(address,address,uint256,bytes,bytes)": "infinite",
								"revokeOperator(address)": "infinite",
								"send(address,uint256,bytes)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2527",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256)": "17",
								"_burn(address,uint256,bytes memory,bytes memory)": "infinite",
								"_callTokensReceived(address,address,address,uint256,bytes memory,bytes memory,bool)": "infinite",
								"_callTokensToSend(address,address,address,uint256,bytes memory,bytes memory)": "infinite",
								"_mint(address,uint256,bytes memory,bytes memory)": "infinite",
								"_mint(address,uint256,bytes memory,bytes memory,bool)": "infinite",
								"_move(address,address,address,uint256,bytes memory,bytes memory)": "infinite",
								"_send(address,address,uint256,bytes memory,bytes memory,bool)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 25622,
									"end": 26228,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25733,
									"end": 25738,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25725,
									"end": 25730,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25725,
									"end": 25738,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25725,
									"end": 25738,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25725,
									"end": 25738,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 25725,
									"end": 25738,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25725,
									"end": 25738,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25725,
									"end": 25738,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 25725,
									"end": 25738,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25725,
									"end": 25738,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 25725,
									"end": 25738,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25725,
									"end": 25738,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25759,
									"end": 25766,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25749,
									"end": 25756,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 25749,
									"end": 25766,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25749,
									"end": 25766,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25749,
									"end": 25766,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 25749,
									"end": 25766,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25749,
									"end": 25766,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25749,
									"end": 25766,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 25749,
									"end": 25766,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25749,
									"end": 25766,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 25749,
									"end": 25766,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25749,
									"end": 25766,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25804,
									"end": 25821,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25779,
									"end": 25801,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 25779,
									"end": 25821,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25779,
									"end": 25821,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25779,
									"end": 25821,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25779,
									"end": 25821,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25779,
									"end": 25821,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25779,
									"end": 25821,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25779,
									"end": 25821,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25779,
									"end": 25821,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 25779,
									"end": 25821,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 25779,
									"end": 25821,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25779,
									"end": 25821,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25779,
									"end": 25821,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 25779,
									"end": 25821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25779,
									"end": 25821,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 25779,
									"end": 25821,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25779,
									"end": 25821,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25837,
									"end": 25846,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25832,
									"end": 25960,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 25832,
									"end": 25960,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25856,
									"end": 25873,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25856,
									"end": 25880,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25852,
									"end": 25853,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25852,
									"end": 25880,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 25832,
									"end": 25960,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25832,
									"end": 25960,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 25832,
									"end": 25960,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25944,
									"end": 25948,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25902,
									"end": 25919,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 25902,
									"end": 25941,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25920,
									"end": 25937,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 25938,
									"end": 25939,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 25920,
									"end": 25940,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25920,
									"end": 25940,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25920,
									"end": 25940,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25920,
									"end": 25940,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 25920,
									"end": 25940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 25920,
									"end": 25940,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25920,
									"end": 25940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 25920,
									"end": 25940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 25920,
									"end": 25940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25920,
									"end": 25940,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 25920,
									"end": 25940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25920,
									"end": 25940,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 25920,
									"end": 25940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25920,
									"end": 25940,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25920,
									"end": 25940,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25920,
									"end": 25940,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25920,
									"end": 25940,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25920,
									"end": 25940,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25920,
									"end": 25940,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25941,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25902,
									"end": 25941,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25941,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25902,
									"end": 25941,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25941,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25941,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25941,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25902,
									"end": 25941,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25941,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25941,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25941,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25902,
									"end": 25941,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25941,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25902,
									"end": 25941,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25941,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25902,
									"end": 25948,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25902,
									"end": 25948,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25948,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25948,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25948,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25948,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 25902,
									"end": 25948,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25948,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25948,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25948,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25948,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25948,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25948,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25948,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25948,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25948,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25948,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25902,
									"end": 25948,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25882,
									"end": 25885,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25882,
									"end": 25885,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25882,
									"end": 25885,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 25882,
									"end": 25885,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25882,
									"end": 25885,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 25882,
									"end": 25885,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25882,
									"end": 25885,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 25882,
									"end": 25885,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25882,
									"end": 25885,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25882,
									"end": 25885,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25882,
									"end": 25885,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25832,
									"end": 25960,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 25832,
									"end": 25960,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25832,
									"end": 25960,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 25832,
									"end": 25960,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25832,
									"end": 25960,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24520,
									"end": 24562,
									"name": "PUSH",
									"source": 0,
									"value": "1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
								},
								{
									"begin": 26004,
									"end": 26045,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 26004,
									"end": 26045,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26045,
									"name": "PUSH",
									"source": 0,
									"value": "29965A1D"
								},
								{
									"begin": 26054,
									"end": 26058,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 26061,
									"end": 26085,
									"name": "PUSH",
									"source": 0,
									"value": "AC7FBAB5F54A3CA8194167523C6753BFEB96A445279294B6125B68CCE2177054"
								},
								{
									"begin": 26095,
									"end": 26099,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26004,
									"end": 26101,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26004,
									"end": 26101,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24520,
									"end": 24562,
									"name": "PUSH",
									"source": 0,
									"value": "1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
								},
								{
									"begin": 26112,
									"end": 26153,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 26112,
									"end": 26153,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26153,
									"name": "PUSH",
									"source": 0,
									"value": "29965A1D"
								},
								{
									"begin": 26162,
									"end": 26166,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 26169,
									"end": 26192,
									"name": "PUSH",
									"source": 0,
									"value": "AEA199E31A596269B42CDAFD93407F14436DB6E4CAD65417994C2EB37381E05A"
								},
								{
									"begin": 26202,
									"end": 26206,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26112,
									"end": 26208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26112,
									"end": 26208,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25622,
									"end": 26228,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 24363,
									"end": 42184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 2988,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2677,
									"end": 2988,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2754,
									"end": 2758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2844,
									"end": 2862,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2836,
									"end": 2842,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2833,
									"end": 2863,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2886,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2886,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 2830,
									"end": 2886,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2866,
									"end": 2884,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 2866,
									"end": 2884,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2866,
									"end": 2884,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2866,
									"end": 2884,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 2866,
									"end": 2884,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2886,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 2830,
									"end": 2886,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2916,
									"end": 2920,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2908,
									"end": 2914,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2904,
									"end": 2921,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 2921,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 2921,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2976,
									"end": 2980,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2970,
									"end": 2974,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2966,
									"end": 2981,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2958,
									"end": 2981,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2958,
									"end": 2981,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 2988,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 2988,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 2988,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 2988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3111,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2994,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3103,
									"end": 3104,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3100,
									"end": 3101,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3093,
									"end": 3105,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3243,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3117,
									"end": 3243,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3154,
									"end": 3161,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3194,
									"end": 3236,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3187,
									"end": 3192,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3183,
									"end": 3237,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3172,
									"end": 3237,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3172,
									"end": 3237,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3243,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3243,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3243,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3243,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3249,
									"end": 3345,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3249,
									"end": 3345,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3286,
									"end": 3293,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3315,
									"end": 3339,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 3333,
									"end": 3338,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3315,
									"end": 3339,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3315,
									"end": 3339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3315,
									"end": 3339,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 3315,
									"end": 3339,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3304,
									"end": 3339,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3304,
									"end": 3339,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3249,
									"end": 3345,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3249,
									"end": 3345,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3249,
									"end": 3345,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3249,
									"end": 3345,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3351,
									"end": 3473,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 3351,
									"end": 3473,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3424,
									"end": 3448,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 3442,
									"end": 3447,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3424,
									"end": 3448,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3424,
									"end": 3448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3424,
									"end": 3448,
									"name": "tag",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 3424,
									"end": 3448,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3417,
									"end": 3422,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3414,
									"end": 3449,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3404,
									"end": 3467,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 3404,
									"end": 3467,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3463,
									"end": 3464,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3460,
									"end": 3461,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3453,
									"end": 3465,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3404,
									"end": 3467,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 3404,
									"end": 3467,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3351,
									"end": 3473,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3351,
									"end": 3473,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3622,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 3479,
									"end": 3622,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3536,
									"end": 3541,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3567,
									"end": 3573,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3561,
									"end": 3574,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3552,
									"end": 3574,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3552,
									"end": 3574,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3583,
									"end": 3616,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 3610,
									"end": 3615,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3583,
									"end": 3616,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 3583,
									"end": 3616,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3583,
									"end": 3616,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 3583,
									"end": 3616,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3622,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3622,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3622,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3622,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3622,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3645,
									"end": 4377,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3645,
									"end": 4377,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3752,
									"end": 3757,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3777,
									"end": 3858,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 3793,
									"end": 3857,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 3850,
									"end": 3856,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3857,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3793,
									"end": 3857,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3857,
									"name": "tag",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 3793,
									"end": 3857,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3777,
									"end": 3858,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3777,
									"end": 3858,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3777,
									"end": 3858,
									"name": "tag",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 3777,
									"end": 3858,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3768,
									"end": 3858,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3768,
									"end": 3858,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3878,
									"end": 3883,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3907,
									"end": 3913,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3900,
									"end": 3905,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3893,
									"end": 3914,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3941,
									"end": 3945,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3930,
									"end": 3946,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3923,
									"end": 3946,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3923,
									"end": 3946,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3994,
									"end": 3998,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3986,
									"end": 3992,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3982,
									"end": 3999,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3974,
									"end": 3980,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3970,
									"end": 4000,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4023,
									"end": 4026,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4015,
									"end": 4021,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4012,
									"end": 4027,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4009,
									"end": 4131,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4009,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 4009,
									"end": 4131,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4042,
									"end": 4121,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 4042,
									"end": 4121,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 4042,
									"end": 4121,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4042,
									"end": 4121,
									"name": "tag",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 4042,
									"end": 4121,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4009,
									"end": 4131,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 4009,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4157,
									"end": 4163,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4140,
									"end": 4371,
									"name": "tag",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 4140,
									"end": 4371,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4174,
									"end": 4180,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4169,
									"end": 4172,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4166,
									"end": 4181,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4140,
									"end": 4371,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4140,
									"end": 4371,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 4140,
									"end": 4371,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4249,
									"end": 4252,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4278,
									"end": 4326,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 4322,
									"end": 4325,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4310,
									"end": 4320,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4278,
									"end": 4326,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 4278,
									"end": 4326,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4278,
									"end": 4326,
									"name": "tag",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 4278,
									"end": 4326,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4273,
									"end": 4276,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4327,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4356,
									"end": 4360,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4351,
									"end": 4354,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4347,
									"end": 4361,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4340,
									"end": 4361,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 4340,
									"end": 4361,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4216,
									"end": 4371,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4200,
									"end": 4204,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4195,
									"end": 4198,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4191,
									"end": 4205,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4184,
									"end": 4205,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4184,
									"end": 4205,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4140,
									"end": 4371,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 4140,
									"end": 4371,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4140,
									"end": 4371,
									"name": "tag",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 4140,
									"end": 4371,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4144,
									"end": 4165,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3758,
									"end": 4377,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3758,
									"end": 4377,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3645,
									"end": 4377,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3645,
									"end": 4377,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3645,
									"end": 4377,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3645,
									"end": 4377,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3645,
									"end": 4377,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3645,
									"end": 4377,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4400,
									"end": 4785,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 4400,
									"end": 4785,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4482,
									"end": 4487,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4531,
									"end": 4534,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4528,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4516,
									"end": 4522,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4512,
									"end": 4529,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4508,
									"end": 4535,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 4498,
									"end": 4620,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 4498,
									"end": 4620,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4539,
									"end": 4618,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 4539,
									"end": 4618,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 4539,
									"end": 4618,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4539,
									"end": 4618,
									"name": "tag",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 4539,
									"end": 4618,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4498,
									"end": 4620,
									"name": "tag",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 4498,
									"end": 4620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4649,
									"end": 4655,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4643,
									"end": 4656,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4674,
									"end": 4779,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 4775,
									"end": 4778,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4767,
									"end": 4773,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4760,
									"end": 4764,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4752,
									"end": 4758,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4748,
									"end": 4765,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4674,
									"end": 4779,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 4674,
									"end": 4779,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4674,
									"end": 4779,
									"name": "tag",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 4674,
									"end": 4779,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4665,
									"end": 4779,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4665,
									"end": 4779,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4488,
									"end": 4785,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4400,
									"end": 4785,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4400,
									"end": 4785,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4400,
									"end": 4785,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4400,
									"end": 4785,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4400,
									"end": 4785,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4791,
									"end": 6003,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 4791,
									"end": 6003,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4924,
									"end": 4930,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4932,
									"end": 4938,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4940,
									"end": 4946,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4989,
									"end": 4991,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 4977,
									"end": 4986,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4968,
									"end": 4975,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4964,
									"end": 4987,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 4960,
									"end": 4992,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 4957,
									"end": 5076,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4957,
									"end": 5076,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 4957,
									"end": 5076,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4995,
									"end": 5074,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 4995,
									"end": 5074,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 4995,
									"end": 5074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4995,
									"end": 5074,
									"name": "tag",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 4995,
									"end": 5074,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4957,
									"end": 5076,
									"name": "tag",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 4957,
									"end": 5076,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5136,
									"end": 5137,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5125,
									"end": 5134,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5121,
									"end": 5138,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5115,
									"end": 5139,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5166,
									"end": 5184,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5158,
									"end": 5164,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5155,
									"end": 5185,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5152,
									"end": 5269,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5152,
									"end": 5269,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 5152,
									"end": 5269,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5188,
									"end": 5267,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 5188,
									"end": 5267,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 5188,
									"end": 5267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5188,
									"end": 5267,
									"name": "tag",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 5188,
									"end": 5267,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5152,
									"end": 5269,
									"name": "tag",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 5152,
									"end": 5269,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5293,
									"end": 5367,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 5359,
									"end": 5366,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5350,
									"end": 5356,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5339,
									"end": 5348,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 5335,
									"end": 5357,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5293,
									"end": 5367,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 5293,
									"end": 5367,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5293,
									"end": 5367,
									"name": "tag",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 5293,
									"end": 5367,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5283,
									"end": 5367,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 5283,
									"end": 5367,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5086,
									"end": 5377,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5437,
									"end": 5439,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5426,
									"end": 5435,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5422,
									"end": 5440,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5416,
									"end": 5441,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5486,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5460,
									"end": 5466,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5457,
									"end": 5487,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5454,
									"end": 5571,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5454,
									"end": 5571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 5454,
									"end": 5571,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5490,
									"end": 5569,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 5490,
									"end": 5569,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 5490,
									"end": 5569,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5490,
									"end": 5569,
									"name": "tag",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 5490,
									"end": 5569,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5454,
									"end": 5571,
									"name": "tag",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 5454,
									"end": 5571,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5595,
									"end": 5669,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 5661,
									"end": 5668,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5652,
									"end": 5658,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5641,
									"end": 5650,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 5637,
									"end": 5659,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5595,
									"end": 5669,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 5595,
									"end": 5669,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5595,
									"end": 5669,
									"name": "tag",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 5595,
									"end": 5669,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5585,
									"end": 5669,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5585,
									"end": 5669,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5387,
									"end": 5679,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5739,
									"end": 5741,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5728,
									"end": 5737,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5724,
									"end": 5742,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5718,
									"end": 5743,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5770,
									"end": 5788,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5762,
									"end": 5768,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5759,
									"end": 5789,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5756,
									"end": 5873,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5756,
									"end": 5873,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 5756,
									"end": 5873,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5792,
									"end": 5871,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 5792,
									"end": 5871,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 5792,
									"end": 5871,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5792,
									"end": 5871,
									"name": "tag",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 5792,
									"end": 5871,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5756,
									"end": 5873,
									"name": "tag",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 5756,
									"end": 5873,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5897,
									"end": 5986,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 5978,
									"end": 5985,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5969,
									"end": 5975,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5958,
									"end": 5967,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 5954,
									"end": 5976,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5897,
									"end": 5986,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 5897,
									"end": 5986,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5897,
									"end": 5986,
									"name": "tag",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 5897,
									"end": 5986,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5887,
									"end": 5986,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5887,
									"end": 5986,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5689,
									"end": 5996,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4791,
									"end": 6003,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4791,
									"end": 6003,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4791,
									"end": 6003,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4791,
									"end": 6003,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4791,
									"end": 6003,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4791,
									"end": 6003,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6009,
									"end": 6108,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 6009,
									"end": 6108,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6061,
									"end": 6067,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6095,
									"end": 6100,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6089,
									"end": 6101,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6079,
									"end": 6101,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6079,
									"end": 6101,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6009,
									"end": 6108,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6009,
									"end": 6108,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6009,
									"end": 6108,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6009,
									"end": 6108,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6114,
									"end": 6294,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 6114,
									"end": 6294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6162,
									"end": 6239,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6159,
									"end": 6160,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6152,
									"end": 6240,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6259,
									"end": 6263,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 6256,
									"end": 6257,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6249,
									"end": 6264,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6283,
									"end": 6287,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6280,
									"end": 6281,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6273,
									"end": 6288,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6300,
									"end": 6620,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 6300,
									"end": 6620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6344,
									"end": 6350,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6381,
									"end": 6382,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6375,
									"end": 6379,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6371,
									"end": 6383,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 6361,
									"end": 6383,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6361,
									"end": 6383,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6428,
									"end": 6429,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6422,
									"end": 6426,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6418,
									"end": 6430,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6449,
									"end": 6467,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6439,
									"end": 6520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 6439,
									"end": 6520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6505,
									"end": 6509,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 6497,
									"end": 6503,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6493,
									"end": 6510,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6483,
									"end": 6510,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6483,
									"end": 6510,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6439,
									"end": 6520,
									"name": "tag",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 6439,
									"end": 6520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6567,
									"end": 6569,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6559,
									"end": 6565,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6556,
									"end": 6570,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6536,
									"end": 6554,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6533,
									"end": 6571,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6530,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 6530,
									"end": 6614,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6586,
									"end": 6604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 6586,
									"end": 6604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 6586,
									"end": 6604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6586,
									"end": 6604,
									"name": "tag",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 6586,
									"end": 6604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6530,
									"end": 6614,
									"name": "tag",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 6530,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6351,
									"end": 6620,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6300,
									"end": 6620,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6300,
									"end": 6620,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6300,
									"end": 6620,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6300,
									"end": 6620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6626,
									"end": 6767,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 6626,
									"end": 6767,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6675,
									"end": 6679,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6698,
									"end": 6701,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6690,
									"end": 6701,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6690,
									"end": 6701,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6721,
									"end": 6724,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6718,
									"end": 6719,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6711,
									"end": 6725,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6755,
									"end": 6759,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6752,
									"end": 6753,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6742,
									"end": 6760,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6734,
									"end": 6760,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6734,
									"end": 6760,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6626,
									"end": 6767,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6626,
									"end": 6767,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6626,
									"end": 6767,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6626,
									"end": 6767,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6773,
									"end": 6866,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 6773,
									"end": 6866,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6816,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6857,
									"end": 6859,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6852,
									"end": 6854,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 6845,
									"end": 6850,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6841,
									"end": 6855,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6837,
									"end": 6860,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 6827,
									"end": 6860,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6827,
									"end": 6860,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6773,
									"end": 6866,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6773,
									"end": 6866,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6773,
									"end": 6866,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6773,
									"end": 6866,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6872,
									"end": 6979,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 6872,
									"end": 6979,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6916,
									"end": 6924,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6966,
									"end": 6971,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6960,
									"end": 6964,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6956,
									"end": 6972,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6935,
									"end": 6972,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6935,
									"end": 6972,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6872,
									"end": 6979,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6872,
									"end": 6979,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6872,
									"end": 6979,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6872,
									"end": 6979,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6872,
									"end": 6979,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 7378,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 6985,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7054,
									"end": 7060,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7104,
									"end": 7105,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7092,
									"end": 7102,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7088,
									"end": 7106,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7127,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 7157,
									"end": 7223,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7146,
									"end": 7155,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7127,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 7127,
									"end": 7224,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7127,
									"end": 7224,
									"name": "tag",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 7127,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7245,
									"end": 7284,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 7275,
									"end": 7283,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 7264,
									"end": 7273,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7245,
									"end": 7284,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 7245,
									"end": 7284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7245,
									"end": 7284,
									"name": "tag",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 7245,
									"end": 7284,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7233,
									"end": 7284,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 7233,
									"end": 7284,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7317,
									"end": 7321,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7313,
									"end": 7322,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 7306,
									"end": 7311,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7302,
									"end": 7323,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7293,
									"end": 7323,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 7293,
									"end": 7323,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7366,
									"end": 7370,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7356,
									"end": 7364,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 7352,
									"end": 7371,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7345,
									"end": 7350,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7342,
									"end": 7372,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7332,
									"end": 7372,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7332,
									"end": 7372,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7061,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7061,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 7378,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 7378,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7384,
									"end": 7461,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 7384,
									"end": 7461,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7421,
									"end": 7428,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7450,
									"end": 7455,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7439,
									"end": 7455,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7439,
									"end": 7455,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7384,
									"end": 7461,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7384,
									"end": 7461,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7384,
									"end": 7461,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7384,
									"end": 7461,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7467,
									"end": 7527,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 7467,
									"end": 7527,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7495,
									"end": 7498,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7516,
									"end": 7521,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7509,
									"end": 7521,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7509,
									"end": 7521,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7467,
									"end": 7527,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7467,
									"end": 7527,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7467,
									"end": 7527,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7467,
									"end": 7527,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7533,
									"end": 7675,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 7533,
									"end": 7675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7583,
									"end": 7592,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7616,
									"end": 7669,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "165"
								},
								{
									"begin": 7634,
									"end": 7668,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 7643,
									"end": 7667,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 7661,
									"end": 7666,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7643,
									"end": 7667,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 7643,
									"end": 7667,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7643,
									"end": 7667,
									"name": "tag",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 7643,
									"end": 7667,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7634,
									"end": 7668,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 7634,
									"end": 7668,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7634,
									"end": 7668,
									"name": "tag",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 7634,
									"end": 7668,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7616,
									"end": 7669,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 7616,
									"end": 7669,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7616,
									"end": 7669,
									"name": "tag",
									"source": 1,
									"value": "165"
								},
								{
									"begin": 7616,
									"end": 7669,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7603,
									"end": 7669,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7603,
									"end": 7669,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7533,
									"end": 7675,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7533,
									"end": 7675,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7533,
									"end": 7675,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7533,
									"end": 7675,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7681,
									"end": 7756,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 7681,
									"end": 7756,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7724,
									"end": 7727,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7745,
									"end": 7750,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7738,
									"end": 7750,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7738,
									"end": 7750,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7681,
									"end": 7756,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7681,
									"end": 7756,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7681,
									"end": 7756,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7681,
									"end": 7756,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7762,
									"end": 8031,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 7762,
									"end": 8031,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7872,
									"end": 7911,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 7903,
									"end": 7910,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7872,
									"end": 7911,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 7872,
									"end": 7911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7872,
									"end": 7911,
									"name": "tag",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 7872,
									"end": 7911,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7933,
									"end": 8024,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 7982,
									"end": 8023,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "172"
								},
								{
									"begin": 8006,
									"end": 8022,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7982,
									"end": 8023,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 7982,
									"end": 8023,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7982,
									"end": 8023,
									"name": "tag",
									"source": 1,
									"value": "172"
								},
								{
									"begin": 7982,
									"end": 8023,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7974,
									"end": 7980,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7967,
									"end": 7971,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7961,
									"end": 7972,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7933,
									"end": 8024,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 7933,
									"end": 8024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7933,
									"end": 8024,
									"name": "tag",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 7933,
									"end": 8024,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7927,
									"end": 7931,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7920,
									"end": 8025,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7838,
									"end": 8031,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7762,
									"end": 8031,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7762,
									"end": 8031,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7762,
									"end": 8031,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7762,
									"end": 8031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8037,
									"end": 8110,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 8037,
									"end": 8110,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8082,
									"end": 8085,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8037,
									"end": 8110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8037,
									"end": 8110,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8116,
									"end": 8305,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 8116,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8193,
									"end": 8225,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 8193,
									"end": 8225,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 8193,
									"end": 8225,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8193,
									"end": 8225,
									"name": "tag",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 8193,
									"end": 8225,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8234,
									"end": 8299,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "176"
								},
								{
									"begin": 8292,
									"end": 8298,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8284,
									"end": 8290,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8278,
									"end": 8282,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8234,
									"end": 8299,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 8234,
									"end": 8299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8234,
									"end": 8299,
									"name": "tag",
									"source": 1,
									"value": "176"
								},
								{
									"begin": 8234,
									"end": 8299,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8169,
									"end": 8305,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8116,
									"end": 8305,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8116,
									"end": 8305,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8116,
									"end": 8305,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8311,
									"end": 8497,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 8311,
									"end": 8497,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8371,
									"end": 8491,
									"name": "tag",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 8371,
									"end": 8491,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8391,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8381,
									"end": 8386,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8378,
									"end": 8392,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8371,
									"end": 8491,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8371,
									"end": 8491,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 8371,
									"end": 8491,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8442,
									"end": 8481,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 8479,
									"end": 8480,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8472,
									"end": 8477,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8442,
									"end": 8481,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 8442,
									"end": 8481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8442,
									"end": 8481,
									"name": "tag",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 8442,
									"end": 8481,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8415,
									"end": 8416,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8408,
									"end": 8413,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8404,
									"end": 8417,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8395,
									"end": 8417,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8395,
									"end": 8417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8371,
									"end": 8491,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 8371,
									"end": 8491,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8371,
									"end": 8491,
									"name": "tag",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 8371,
									"end": 8491,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8311,
									"end": 8497,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8311,
									"end": 8497,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8311,
									"end": 8497,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8503,
									"end": 9046,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 8503,
									"end": 9046,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8604,
									"end": 8606,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 8599,
									"end": 8602,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8596,
									"end": 8607,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8593,
									"end": 9039,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8593,
									"end": 9039,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "183"
								},
								{
									"begin": 8593,
									"end": 9039,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8638,
									"end": 8676,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 8670,
									"end": 8675,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8638,
									"end": 8676,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 8638,
									"end": 8676,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8638,
									"end": 8676,
									"name": "tag",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 8638,
									"end": 8676,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8722,
									"end": 8751,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 8740,
									"end": 8750,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8722,
									"end": 8751,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 8722,
									"end": 8751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8722,
									"end": 8751,
									"name": "tag",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 8722,
									"end": 8751,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8712,
									"end": 8720,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8708,
									"end": 8752,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8905,
									"end": 8907,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8893,
									"end": 8903,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8890,
									"end": 8908,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8887,
									"end": 8936,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8887,
									"end": 8936,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 8887,
									"end": 8936,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8926,
									"end": 8934,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8911,
									"end": 8934,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8911,
									"end": 8934,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8887,
									"end": 8936,
									"name": "tag",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 8887,
									"end": 8936,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8949,
									"end": 9029,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "187"
								},
								{
									"begin": 9005,
									"end": 9027,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 9023,
									"end": 9026,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 9005,
									"end": 9027,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 9005,
									"end": 9027,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9005,
									"end": 9027,
									"name": "tag",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 9005,
									"end": 9027,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8995,
									"end": 9003,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8991,
									"end": 9028,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8978,
									"end": 8989,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8949,
									"end": 9029,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 8949,
									"end": 9029,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8949,
									"end": 9029,
									"name": "tag",
									"source": 1,
									"value": "187"
								},
								{
									"begin": 8949,
									"end": 9029,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8608,
									"end": 9039,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8608,
									"end": 9039,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8593,
									"end": 9039,
									"name": "tag",
									"source": 1,
									"value": "183"
								},
								{
									"begin": 8593,
									"end": 9039,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8503,
									"end": 9046,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8503,
									"end": 9046,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8503,
									"end": 9046,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8503,
									"end": 9046,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9052,
									"end": 9169,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 9052,
									"end": 9169,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9106,
									"end": 9114,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9156,
									"end": 9161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9150,
									"end": 9154,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9146,
									"end": 9162,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 9125,
									"end": 9162,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9125,
									"end": 9162,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9052,
									"end": 9169,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9052,
									"end": 9169,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9052,
									"end": 9169,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9052,
									"end": 9169,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9052,
									"end": 9169,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9175,
									"end": 9344,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 9175,
									"end": 9344,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9219,
									"end": 9225,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9252,
									"end": 9303,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "191"
								},
								{
									"begin": 9300,
									"end": 9301,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9296,
									"end": 9302,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 9288,
									"end": 9293,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9285,
									"end": 9286,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 9281,
									"end": 9294,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 9252,
									"end": 9303,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 9252,
									"end": 9303,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9252,
									"end": 9303,
									"name": "tag",
									"source": 1,
									"value": "191"
								},
								{
									"begin": 9252,
									"end": 9303,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9248,
									"end": 9304,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 9333,
									"end": 9337,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9327,
									"end": 9331,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9323,
									"end": 9338,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9313,
									"end": 9338,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9313,
									"end": 9338,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9226,
									"end": 9344,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9175,
									"end": 9344,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9175,
									"end": 9344,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9175,
									"end": 9344,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9175,
									"end": 9344,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9175,
									"end": 9344,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9349,
									"end": 9644,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 9349,
									"end": 9644,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9425,
									"end": 9429,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9571,
									"end": 9600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "193"
								},
								{
									"begin": 9596,
									"end": 9599,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9590,
									"end": 9594,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9571,
									"end": 9600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 9571,
									"end": 9600,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9571,
									"end": 9600,
									"name": "tag",
									"source": 1,
									"value": "193"
								},
								{
									"begin": 9571,
									"end": 9600,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9563,
									"end": 9600,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9563,
									"end": 9600,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9633,
									"end": 9636,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9630,
									"end": 9631,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 9626,
									"end": 9637,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 9620,
									"end": 9624,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9617,
									"end": 9638,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 9609,
									"end": 9638,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9609,
									"end": 9638,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9349,
									"end": 9644,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9349,
									"end": 9644,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9349,
									"end": 9644,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9349,
									"end": 9644,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9349,
									"end": 9644,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9649,
									"end": 11044,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 9649,
									"end": 11044,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9766,
									"end": 9803,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "195"
								},
								{
									"begin": 9799,
									"end": 9802,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9766,
									"end": 9803,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 9766,
									"end": 9803,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9766,
									"end": 9803,
									"name": "tag",
									"source": 1,
									"value": "195"
								},
								{
									"begin": 9766,
									"end": 9803,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9868,
									"end": 9886,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9860,
									"end": 9866,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9857,
									"end": 9887,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 9854,
									"end": 9910,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 9854,
									"end": 9910,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "196"
								},
								{
									"begin": 9854,
									"end": 9910,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9890,
									"end": 9908,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "197"
								},
								{
									"begin": 9890,
									"end": 9908,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 9890,
									"end": 9908,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9890,
									"end": 9908,
									"name": "tag",
									"source": 1,
									"value": "197"
								},
								{
									"begin": 9890,
									"end": 9908,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9854,
									"end": 9910,
									"name": "tag",
									"source": 1,
									"value": "196"
								},
								{
									"begin": 9854,
									"end": 9910,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9934,
									"end": 9972,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "198"
								},
								{
									"begin": 9966,
									"end": 9970,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9960,
									"end": 9971,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 9934,
									"end": 9972,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 9934,
									"end": 9972,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9934,
									"end": 9972,
									"name": "tag",
									"source": 1,
									"value": "198"
								},
								{
									"begin": 9934,
									"end": 9972,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10019,
									"end": 10086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "199"
								},
								{
									"begin": 10079,
									"end": 10085,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10071,
									"end": 10077,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10065,
									"end": 10069,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 10019,
									"end": 10086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 10019,
									"end": 10086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10019,
									"end": 10086,
									"name": "tag",
									"source": 1,
									"value": "199"
								},
								{
									"begin": 10019,
									"end": 10086,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10113,
									"end": 10114,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10137,
									"end": 10141,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10124,
									"end": 10141,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10141,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10169,
									"end": 10171,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 10161,
									"end": 10167,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10158,
									"end": 10172,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 10186,
									"end": 10187,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 10181,
									"end": 10799,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10181,
									"end": 10799,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 10181,
									"end": 10799,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "201"
								},
								{
									"begin": 10181,
									"end": 10799,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 10843,
									"end": 10844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10860,
									"end": 10866,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 10857,
									"end": 10934,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 10857,
									"end": 10934,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "202"
								},
								{
									"begin": 10857,
									"end": 10934,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 10909,
									"end": 10918,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10904,
									"end": 10907,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 10900,
									"end": 10919,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10894,
									"end": 10920,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 10885,
									"end": 10920,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10885,
									"end": 10920,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10857,
									"end": 10934,
									"name": "tag",
									"source": 1,
									"value": "202"
								},
								{
									"begin": 10857,
									"end": 10934,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10960,
									"end": 11027,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "203"
								},
								{
									"begin": 11020,
									"end": 11026,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 11013,
									"end": 11018,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10960,
									"end": 11027,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 10960,
									"end": 11027,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10960,
									"end": 11027,
									"name": "tag",
									"source": 1,
									"value": "203"
								},
								{
									"begin": 10960,
									"end": 11027,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10954,
									"end": 10958,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 10947,
									"end": 11028,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 10816,
									"end": 11038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10151,
									"end": 11038,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "200"
								},
								{
									"begin": 10151,
									"end": 11038,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10181,
									"end": 10799,
									"name": "tag",
									"source": 1,
									"value": "201"
								},
								{
									"begin": 10181,
									"end": 10799,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10233,
									"end": 10237,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 10229,
									"end": 10238,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 10221,
									"end": 10227,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 10217,
									"end": 10239,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 10267,
									"end": 10304,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "204"
								},
								{
									"begin": 10299,
									"end": 10303,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 10267,
									"end": 10304,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 10267,
									"end": 10304,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10267,
									"end": 10304,
									"name": "tag",
									"source": 1,
									"value": "204"
								},
								{
									"begin": 10267,
									"end": 10304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10326,
									"end": 10327,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10340,
									"end": 10548,
									"name": "tag",
									"source": 1,
									"value": "205"
								},
								{
									"begin": 10340,
									"end": 10548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10354,
									"end": 10361,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10351,
									"end": 10352,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10362,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 10340,
									"end": 10548,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 10340,
									"end": 10548,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 10340,
									"end": 10548,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 10433,
									"end": 10442,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 10428,
									"end": 10431,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 10424,
									"end": 10443,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10418,
									"end": 10444,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 10410,
									"end": 10416,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10403,
									"end": 10445,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 10484,
									"end": 10485,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 10476,
									"end": 10482,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10472,
									"end": 10486,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10462,
									"end": 10486,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10462,
									"end": 10486,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10531,
									"end": 10533,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10520,
									"end": 10529,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 10516,
									"end": 10534,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10503,
									"end": 10534,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 10503,
									"end": 10534,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10377,
									"end": 10381,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10374,
									"end": 10375,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10370,
									"end": 10382,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10365,
									"end": 10382,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10365,
									"end": 10382,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10340,
									"end": 10548,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "205"
								},
								{
									"begin": 10340,
									"end": 10548,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10340,
									"end": 10548,
									"name": "tag",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 10340,
									"end": 10548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10576,
									"end": 10582,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 10567,
									"end": 10574,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10564,
									"end": 10583,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 10561,
									"end": 10740,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 10561,
									"end": 10740,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "208"
								},
								{
									"begin": 10561,
									"end": 10740,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 10634,
									"end": 10643,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 10629,
									"end": 10632,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 10625,
									"end": 10644,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10619,
									"end": 10645,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 10677,
									"end": 10725,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "209"
								},
								{
									"begin": 10719,
									"end": 10723,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 10711,
									"end": 10717,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 10707,
									"end": 10724,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 10696,
									"end": 10705,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10677,
									"end": 10725,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 10677,
									"end": 10725,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10677,
									"end": 10725,
									"name": "tag",
									"source": 1,
									"value": "209"
								},
								{
									"begin": 10677,
									"end": 10725,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10669,
									"end": 10675,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10662,
									"end": 10726,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 10584,
									"end": 10740,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10561,
									"end": 10740,
									"name": "tag",
									"source": 1,
									"value": "208"
								},
								{
									"begin": 10561,
									"end": 10740,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10786,
									"end": 10787,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 10782,
									"end": 10783,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 10774,
									"end": 10780,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 10770,
									"end": 10784,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 10766,
									"end": 10788,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10760,
									"end": 10764,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 10753,
									"end": 10789,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 10188,
									"end": 10799,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10188,
									"end": 10799,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10188,
									"end": 10799,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10151,
									"end": 11038,
									"name": "tag",
									"source": 1,
									"value": "200"
								},
								{
									"begin": 10151,
									"end": 11038,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10151,
									"end": 11038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9741,
									"end": 11044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9741,
									"end": 11044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9741,
									"end": 11044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9649,
									"end": 11044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9649,
									"end": 11044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9649,
									"end": 11044,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11050,
									"end": 11230,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 11050,
									"end": 11230,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11098,
									"end": 11175,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11095,
									"end": 11096,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11088,
									"end": 11176,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 11195,
									"end": 11199,
									"name": "PUSH",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 11192,
									"end": 11193,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 11185,
									"end": 11200,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 11219,
									"end": 11223,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 11216,
									"end": 11217,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11209,
									"end": 11224,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 11236,
									"end": 11416,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 11236,
									"end": 11416,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11284,
									"end": 11361,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11281,
									"end": 11282,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11274,
									"end": 11362,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 11381,
									"end": 11385,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 11378,
									"end": 11379,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 11371,
									"end": 11386,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 11405,
									"end": 11409,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 11402,
									"end": 11403,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11395,
									"end": 11410,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 11422,
									"end": 11655,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 11422,
									"end": 11655,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11461,
									"end": 11464,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11484,
									"end": 11508,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "213"
								},
								{
									"begin": 11502,
									"end": 11507,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11484,
									"end": 11508,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 11484,
									"end": 11508,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11484,
									"end": 11508,
									"name": "tag",
									"source": 1,
									"value": "213"
								},
								{
									"begin": 11484,
									"end": 11508,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11475,
									"end": 11508,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11475,
									"end": 11508,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11530,
									"end": 11596,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11523,
									"end": 11528,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11520,
									"end": 11597,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 11517,
									"end": 11620,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "214"
								},
								{
									"begin": 11517,
									"end": 11620,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 11600,
									"end": 11618,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "215"
								},
								{
									"begin": 11600,
									"end": 11618,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 11600,
									"end": 11618,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11600,
									"end": 11618,
									"name": "tag",
									"source": 1,
									"value": "215"
								},
								{
									"begin": 11600,
									"end": 11618,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11517,
									"end": 11620,
									"name": "tag",
									"source": 1,
									"value": "214"
								},
								{
									"begin": 11517,
									"end": 11620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11647,
									"end": 11648,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 11640,
									"end": 11645,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11636,
									"end": 11649,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11629,
									"end": 11649,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11629,
									"end": 11649,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11422,
									"end": 11655,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11422,
									"end": 11655,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11422,
									"end": 11655,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11422,
									"end": 11655,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11661,
									"end": 11779,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 11661,
									"end": 11779,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11748,
									"end": 11772,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "217"
								},
								{
									"begin": 11766,
									"end": 11771,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11748,
									"end": 11772,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 11748,
									"end": 11772,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11748,
									"end": 11772,
									"name": "tag",
									"source": 1,
									"value": "217"
								},
								{
									"begin": 11748,
									"end": 11772,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11743,
									"end": 11746,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11736,
									"end": 11773,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 11661,
									"end": 11779,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11661,
									"end": 11779,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11661,
									"end": 11779,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11785,
									"end": 11862,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 11785,
									"end": 11862,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11822,
									"end": 11829,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11851,
									"end": 11856,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11840,
									"end": 11856,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11840,
									"end": 11856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11785,
									"end": 11862,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11785,
									"end": 11862,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11785,
									"end": 11862,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11785,
									"end": 11862,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11868,
									"end": 11986,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 11868,
									"end": 11986,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11955,
									"end": 11979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "220"
								},
								{
									"begin": 11973,
									"end": 11978,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11955,
									"end": 11979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 11955,
									"end": 11979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11955,
									"end": 11979,
									"name": "tag",
									"source": 1,
									"value": "220"
								},
								{
									"begin": 11955,
									"end": 11979,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11950,
									"end": 11953,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11943,
									"end": 11980,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 11868,
									"end": 11986,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11868,
									"end": 11986,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11868,
									"end": 11986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11992,
									"end": 12434,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11992,
									"end": 12434,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12141,
									"end": 12145,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 12179,
									"end": 12181,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 12168,
									"end": 12177,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12164,
									"end": 12182,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12156,
									"end": 12182,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12156,
									"end": 12182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12192,
									"end": 12263,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "222"
								},
								{
									"begin": 12260,
									"end": 12261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 12249,
									"end": 12258,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 12245,
									"end": 12262,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12236,
									"end": 12242,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 12192,
									"end": 12263,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 12192,
									"end": 12263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12192,
									"end": 12263,
									"name": "tag",
									"source": 1,
									"value": "222"
								},
								{
									"begin": 12192,
									"end": 12263,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12273,
									"end": 12345,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "223"
								},
								{
									"begin": 12341,
									"end": 12343,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 12330,
									"end": 12339,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 12326,
									"end": 12344,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12317,
									"end": 12323,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 12273,
									"end": 12345,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 12273,
									"end": 12345,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12273,
									"end": 12345,
									"name": "tag",
									"source": 1,
									"value": "223"
								},
								{
									"begin": 12273,
									"end": 12345,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12355,
									"end": 12427,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "224"
								},
								{
									"begin": 12423,
									"end": 12425,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 12412,
									"end": 12421,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 12408,
									"end": 12426,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12399,
									"end": 12405,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 12355,
									"end": 12427,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 12355,
									"end": 12427,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12355,
									"end": 12427,
									"name": "tag",
									"source": 1,
									"value": "224"
								},
								{
									"begin": 12355,
									"end": 12427,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11992,
									"end": 12434,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 11992,
									"end": 12434,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 11992,
									"end": 12434,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11992,
									"end": 12434,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11992,
									"end": 12434,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11992,
									"end": 12434,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11992,
									"end": 12434,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24363,
									"end": 42184,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122014e10a8d34903e142f43c17b0e012419cb01a52347e233c23a63d3de79e661d964736f6c63430008120033",
									".code": [
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "959B8C3F"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "D95B6371"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "D95B6371"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "FAD8B32A"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "FC673C4F"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "FE9D9303"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "959B8C3F"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "9BD9BBC6"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "556F0DC7"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "62AD1B83"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "6E48538"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24363,
											"end": 42184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 29921,
											"end": 30053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 29921,
											"end": 30053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 26287,
											"end": 26387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 26287,
											"end": 26387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 31733,
											"end": 31934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 31733,
											"end": 31934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 31733,
											"end": 31934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 27113,
											"end": 27238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 27113,
											"end": 27238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 32430,
											"end": 32722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 32430,
											"end": 32722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 32430,
											"end": 32722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 26744,
											"end": 26828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 26744,
											"end": 26828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 26950,
											"end": 27047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 26950,
											"end": 27047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 30179,
											"end": 30554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 30179,
											"end": 30554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27343,
											"end": 27495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 27343,
											"end": 27495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 27343,
											"end": 27495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 28946,
											"end": 29368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 28946,
											"end": 29368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 26448,
											"end": 26552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 26448,
											"end": 26552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 27632,
											"end": 27797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 27632,
											"end": 27797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28038,
											"end": 28224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 28038,
											"end": 28224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 28038,
											"end": 28224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 28558,
											"end": 28874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28558,
											"end": 28874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 28558,
											"end": 28874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 31263,
											"end": 31416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 31263,
											"end": 31416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 31263,
											"end": 31416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 29437,
											"end": 29850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 29437,
											"end": 29850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 30682,
											"end": 31015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 30682,
											"end": 31015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28361,
											"end": 28490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 28361,
											"end": 28490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29987,
											"end": 30003,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 30023,
											"end": 30045,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30016,
											"end": 30045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 30053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 30053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26341,
											"end": 26354,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26374,
											"end": 26379,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 26367,
											"end": 26379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 26367,
											"end": 26379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26367,
											"end": 26379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26287,
											"end": 26387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26287,
											"end": 26387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31815,
											"end": 31819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31832,
											"end": 31846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31849,
											"end": 31861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 31849,
											"end": 31859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 31849,
											"end": 31861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31849,
											"end": 31861,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 31849,
											"end": 31861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31872,
											"end": 31904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 31881,
											"end": 31887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31889,
											"end": 31896,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31898,
											"end": 31903,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31872,
											"end": 31880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 31872,
											"end": 31904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31872,
											"end": 31904,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 31872,
											"end": 31904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31922,
											"end": 31926,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31915,
											"end": 31926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31915,
											"end": 31926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31915,
											"end": 31926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31733,
											"end": 31934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27191,
											"end": 27198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27218,
											"end": 27230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27218,
											"end": 27230,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27211,
											"end": 27230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27211,
											"end": 27230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27113,
											"end": 27238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27113,
											"end": 27238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32536,
											"end": 32540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32553,
											"end": 32568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32571,
											"end": 32583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 32571,
											"end": 32581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 32571,
											"end": 32583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32571,
											"end": 32583,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 32571,
											"end": 32583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32553,
											"end": 32583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32553,
											"end": 32583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32594,
											"end": 32634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 32610,
											"end": 32616,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32618,
											"end": 32625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32627,
											"end": 32633,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32594,
											"end": 32609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 32594,
											"end": 32634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32594,
											"end": 32634,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 32594,
											"end": 32634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 32651,
											"end": 32657,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32659,
											"end": 32668,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32670,
											"end": 32676,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32686,
											"end": 32691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32645,
											"end": 32650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 32645,
											"end": 32692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 32645,
											"end": 32692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32710,
											"end": 32714,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32703,
											"end": 32714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32703,
											"end": 32714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32703,
											"end": 32714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26793,
											"end": 26798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26818,
											"end": 26820,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 26811,
											"end": 26820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26811,
											"end": 26820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26744,
											"end": 26828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26744,
											"end": 26828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27011,
											"end": 27018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27038,
											"end": 27039,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27031,
											"end": 27039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27031,
											"end": 27039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26950,
											"end": 27047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26950,
											"end": 27047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30393,
											"end": 30428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 30407,
											"end": 30419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 30407,
											"end": 30417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 30407,
											"end": 30419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30407,
											"end": 30419,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 30407,
											"end": 30419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30421,
											"end": 30427,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30393,
											"end": 30406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30393,
											"end": 30428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30393,
											"end": 30428,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 30393,
											"end": 30428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 30385,
											"end": 30477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 30385,
											"end": 30477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30488,
											"end": 30546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 30494,
											"end": 30500,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30502,
											"end": 30511,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30513,
											"end": 30519,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30521,
											"end": 30525,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30527,
											"end": 30539,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30541,
											"end": 30545,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30488,
											"end": 30493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 30488,
											"end": 30546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30488,
											"end": 30546,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 30488,
											"end": 30546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27438,
											"end": 27445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27465,
											"end": 27474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27465,
											"end": 27487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27475,
											"end": 27486,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27465,
											"end": 27487,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27465,
											"end": 27487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27465,
											"end": 27487,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27465,
											"end": 27487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27465,
											"end": 27487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27465,
											"end": 27487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27465,
											"end": 27487,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27465,
											"end": 27487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27465,
											"end": 27487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27465,
											"end": 27487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27465,
											"end": 27487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27465,
											"end": 27487,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27465,
											"end": 27487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27465,
											"end": 27487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27465,
											"end": 27487,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27465,
											"end": 27487,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27458,
											"end": 27487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27458,
											"end": 27487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27343,
											"end": 27495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29050,
											"end": 29058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29034,
											"end": 29058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29034,
											"end": 29058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29034,
											"end": 29046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 29034,
											"end": 29044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 29034,
											"end": 29046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29034,
											"end": 29046,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 29034,
											"end": 29046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29034,
											"end": 29058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29034,
											"end": 29058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29034,
											"end": 29058,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 29026,
											"end": 29099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 29026,
											"end": 29099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29133,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29134,
											"end": 29142,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 29116,
											"end": 29143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29112,
											"end": 29301,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29112,
											"end": 29301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 29112,
											"end": 29301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29191,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29167,
											"end": 29205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29192,
											"end": 29204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 29192,
											"end": 29202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 29192,
											"end": 29204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29192,
											"end": 29204,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 29192,
											"end": 29204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29205,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29167,
											"end": 29205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29205,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29167,
											"end": 29205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29167,
											"end": 29205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29167,
											"end": 29205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29167,
											"end": 29205,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29206,
											"end": 29214,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29215,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29167,
											"end": 29215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29215,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29167,
											"end": 29215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29167,
											"end": 29215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29167,
											"end": 29215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29167,
											"end": 29215,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29160,
											"end": 29215,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29160,
											"end": 29215,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29160,
											"end": 29215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29160,
											"end": 29215,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29160,
											"end": 29215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29160,
											"end": 29215,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 29160,
											"end": 29215,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29160,
											"end": 29215,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29160,
											"end": 29215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29160,
											"end": 29215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29160,
											"end": 29215,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29112,
											"end": 29301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 29112,
											"end": 29301,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29112,
											"end": 29301,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 29112,
											"end": 29301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29285,
											"end": 29289,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29248,
											"end": 29258,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29259,
											"end": 29271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 29259,
											"end": 29269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 29259,
											"end": 29271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29259,
											"end": 29271,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 29259,
											"end": 29271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29248,
											"end": 29272,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29273,
											"end": 29281,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29282,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29248,
											"end": 29282,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29282,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29248,
											"end": 29282,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29282,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29248,
											"end": 29282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29282,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29248,
											"end": 29282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29248,
											"end": 29282,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29248,
											"end": 29289,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29248,
											"end": 29289,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29289,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29289,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 29248,
											"end": 29289,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29289,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29289,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29289,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29289,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29289,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29289,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29289,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29112,
											"end": 29301,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 29112,
											"end": 29301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29347,
											"end": 29359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 29347,
											"end": 29357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 29347,
											"end": 29359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29347,
											"end": 29359,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 29347,
											"end": 29359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29360,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29318,
											"end": 29360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29337,
											"end": 29345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29360,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29318,
											"end": 29360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29360,
											"name": "PUSH",
											"source": 0,
											"value": "F4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9"
										},
										{
											"begin": 29318,
											"end": 29360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29318,
											"end": 29360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29318,
											"end": 29360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29360,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29360,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 28946,
											"end": 29368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28946,
											"end": 29368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26504,
											"end": 26517,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26537,
											"end": 26544,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 26530,
											"end": 26544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 26530,
											"end": 26544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26448,
											"end": 26552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26448,
											"end": 26552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27735,
											"end": 27789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 27741,
											"end": 27753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 27741,
											"end": 27751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 27741,
											"end": 27753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27753,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 27741,
											"end": 27753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27755,
											"end": 27764,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27766,
											"end": 27772,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27774,
											"end": 27778,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27735,
											"end": 27789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27735,
											"end": 27789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27735,
											"end": 27789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27735,
											"end": 27789,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27735,
											"end": 27789,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27735,
											"end": 27789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27735,
											"end": 27789,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27735,
											"end": 27789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27735,
											"end": 27789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27735,
											"end": 27789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27735,
											"end": 27789,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27735,
											"end": 27789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27784,
											"end": 27788,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27735,
											"end": 27740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 27735,
											"end": 27789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27735,
											"end": 27789,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 27735,
											"end": 27789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28124,
											"end": 28128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 28147,
											"end": 28159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 28147,
											"end": 28157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 28147,
											"end": 28159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28147,
											"end": 28159,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 28147,
											"end": 28159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28161,
											"end": 28170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28172,
											"end": 28178,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28188,
											"end": 28193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28141,
											"end": 28146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 28141,
											"end": 28194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 28141,
											"end": 28194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28212,
											"end": 28216,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28205,
											"end": 28216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28205,
											"end": 28216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28038,
											"end": 28224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28658,
											"end": 28662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28707,
											"end": 28718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 28718,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28695,
											"end": 28718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 28703,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 28718,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28695,
											"end": 28718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 28718,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 28816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 28816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 28695,
											"end": 28816,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 28816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28753,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28754,
											"end": 28762,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 28736,
											"end": 28763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28815,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 28736,
											"end": 28815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28792,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28768,
											"end": 28805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28793,
											"end": 28804,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28805,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28768,
											"end": 28805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28805,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28768,
											"end": 28805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28768,
											"end": 28805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28768,
											"end": 28805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28768,
											"end": 28805,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28806,
											"end": 28814,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 28768,
											"end": 28815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28815,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28736,
											"end": 28815,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 28736,
											"end": 28815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 28816,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 28695,
											"end": 28816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 28866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 28866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 28695,
											"end": 28866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 28866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28843,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28833,
											"end": 28856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28844,
											"end": 28855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28856,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28833,
											"end": 28856,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28856,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28833,
											"end": 28856,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28833,
											"end": 28856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28833,
											"end": 28856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28833,
											"end": 28856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28857,
											"end": 28865,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 28833,
											"end": 28866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28695,
											"end": 28866,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 28695,
											"end": 28866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28675,
											"end": 28866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28675,
											"end": 28866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28558,
											"end": 28874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31353,
											"end": 31360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31380,
											"end": 31391,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31380,
											"end": 31399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31392,
											"end": 31398,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31380,
											"end": 31399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31380,
											"end": 31399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31380,
											"end": 31399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31380,
											"end": 31399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31380,
											"end": 31399,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31400,
											"end": 31407,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31408,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31380,
											"end": 31408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31408,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31380,
											"end": 31408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31380,
											"end": 31408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31380,
											"end": 31408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31380,
											"end": 31408,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31408,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31373,
											"end": 31408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31373,
											"end": 31408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29534,
											"end": 29546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 29534,
											"end": 29544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 29534,
											"end": 29546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29534,
											"end": 29546,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 29534,
											"end": 29546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29522,
											"end": 29546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29522,
											"end": 29546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29522,
											"end": 29530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29522,
											"end": 29546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29522,
											"end": 29546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29522,
											"end": 29546,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 29514,
											"end": 29584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 29514,
											"end": 29584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29618,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29619,
											"end": 29627,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 29601,
											"end": 29628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29597,
											"end": 29786,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29597,
											"end": 29786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 29597,
											"end": 29786,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29696,
											"end": 29700,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29645,
											"end": 29669,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29645,
											"end": 29683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29670,
											"end": 29682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 29670,
											"end": 29680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 29670,
											"end": 29682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29670,
											"end": 29682,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 29670,
											"end": 29682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29683,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29645,
											"end": 29683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29683,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29645,
											"end": 29683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29645,
											"end": 29683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29645,
											"end": 29683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29645,
											"end": 29683,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29684,
											"end": 29692,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29693,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29645,
											"end": 29693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29693,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29645,
											"end": 29693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29645,
											"end": 29693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29645,
											"end": 29693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29645,
											"end": 29693,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29645,
											"end": 29700,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29645,
											"end": 29700,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29700,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 29645,
											"end": 29700,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29700,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29700,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29700,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29700,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29700,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29700,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29700,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29645,
											"end": 29700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29597,
											"end": 29786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 29597,
											"end": 29786,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29597,
											"end": 29786,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 29597,
											"end": 29786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29750,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29740,
											"end": 29764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29751,
											"end": 29763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 29751,
											"end": 29761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 29751,
											"end": 29763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29751,
											"end": 29763,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 29751,
											"end": 29763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29764,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29740,
											"end": 29764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29764,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29740,
											"end": 29764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29740,
											"end": 29764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29740,
											"end": 29764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29740,
											"end": 29764,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29765,
											"end": 29773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29774,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29740,
											"end": 29774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29774,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29740,
											"end": 29774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29740,
											"end": 29774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29740,
											"end": 29774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29740,
											"end": 29774,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29740,
											"end": 29774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29733,
											"end": 29774,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29733,
											"end": 29774,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29774,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29774,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 29733,
											"end": 29774,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29774,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29774,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29597,
											"end": 29786,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 29597,
											"end": 29786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 29829,
											"end": 29839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 29829,
											"end": 29841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29841,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 29829,
											"end": 29841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29842,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29803,
											"end": 29842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29819,
											"end": 29827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29842,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29803,
											"end": 29842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29842,
											"name": "PUSH",
											"source": 0,
											"value": "50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1"
										},
										{
											"begin": 29803,
											"end": 29842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29803,
											"end": 29842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29803,
											"end": 29842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29842,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29803,
											"end": 29842,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29437,
											"end": 29850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30869,
											"end": 30905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 30883,
											"end": 30895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 30883,
											"end": 30893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 30883,
											"end": 30895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30883,
											"end": 30895,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 30883,
											"end": 30895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30904,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30869,
											"end": 30882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30869,
											"end": 30905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30869,
											"end": 30905,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 30869,
											"end": 30905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 30861,
											"end": 30954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 30861,
											"end": 30954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 30971,
											"end": 30978,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30980,
											"end": 30986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30988,
											"end": 30992,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30994,
											"end": 31006,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 30965,
											"end": 31007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31007,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 30965,
											"end": 31007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30682,
											"end": 31015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30682,
											"end": 31015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28445,
											"end": 28482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 28451,
											"end": 28463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 28451,
											"end": 28461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 28451,
											"end": 28463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28451,
											"end": 28463,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 28451,
											"end": 28463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28473,
											"end": 28477,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28445,
											"end": 28482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28445,
											"end": 28482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28445,
											"end": 28482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28445,
											"end": 28482,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28445,
											"end": 28482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28445,
											"end": 28482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28445,
											"end": 28482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28445,
											"end": 28482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28445,
											"end": 28482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28445,
											"end": 28482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28445,
											"end": 28482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28445,
											"end": 28482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28445,
											"end": 28450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 28445,
											"end": 28482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28445,
											"end": 28482,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 28445,
											"end": 28482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28361,
											"end": 28490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28361,
											"end": 28490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19988,
											"end": 20086,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 19988,
											"end": 20086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20041,
											"end": 20048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20068,
											"end": 20078,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20061,
											"end": 20078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20061,
											"end": 20078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19988,
											"end": 20086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19988,
											"end": 20086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37984,
											"end": 38333,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 37984,
											"end": 38333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38104,
											"end": 38105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38086,
											"end": 38106,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38086,
											"end": 38106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38086,
											"end": 38092,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38086,
											"end": 38106,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38086,
											"end": 38106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38086,
											"end": 38106,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 38078,
											"end": 38148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 38078,
											"end": 38148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38186,
											"end": 38187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38167,
											"end": 38188,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38167,
											"end": 38188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38167,
											"end": 38174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38167,
											"end": 38188,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38167,
											"end": 38188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38167,
											"end": 38188,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 38159,
											"end": 38228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 38159,
											"end": 38228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38272,
											"end": 38277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38252,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 38241,
											"end": 38260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38253,
											"end": 38259,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38241,
											"end": 38260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38241,
											"end": 38260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38260,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38241,
											"end": 38260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38260,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38241,
											"end": 38260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38241,
											"end": 38260,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38261,
											"end": 38268,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38269,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38241,
											"end": 38269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38269,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38241,
											"end": 38269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38241,
											"end": 38269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38241,
											"end": 38269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38241,
											"end": 38269,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38277,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38241,
											"end": 38277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38310,
											"end": 38317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38293,
											"end": 38325,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38293,
											"end": 38325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38302,
											"end": 38308,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38293,
											"end": 38325,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38293,
											"end": 38325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38293,
											"end": 38325,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 38319,
											"end": 38324,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38293,
											"end": 38325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38293,
											"end": 38325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38293,
											"end": 38325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 38293,
											"end": 38325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38293,
											"end": 38325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38293,
											"end": 38325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 38293,
											"end": 38325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38293,
											"end": 38325,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 38293,
											"end": 38325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38293,
											"end": 38325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38293,
											"end": 38325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38293,
											"end": 38325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38293,
											"end": 38325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38293,
											"end": 38325,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38293,
											"end": 38325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38293,
											"end": 38325,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 37984,
											"end": 38333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37984,
											"end": 38333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37984,
											"end": 38333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37984,
											"end": 38333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40992,
											"end": 41412,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 40992,
											"end": 41412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41093,
											"end": 41117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41120,
											"end": 41145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 41130,
											"end": 41135,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41137,
											"end": 41144,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41120,
											"end": 41129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 41120,
											"end": 41145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41120,
											"end": 41145,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 41120,
											"end": 41145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41093,
											"end": 41145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41093,
											"end": 41145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41180,
											"end": 41197,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41160,
											"end": 41176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41160,
											"end": 41197,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41156,
											"end": 41405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 41156,
											"end": 41405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41242,
											"end": 41248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41248,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41248,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 41214,
											"end": 41283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 41214,
											"end": 41283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41327,
											"end": 41378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 41336,
											"end": 41341,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 41350,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41371,
											"end": 41377,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41352,
											"end": 41368,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41352,
											"end": 41377,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41327,
											"end": 41335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 41327,
											"end": 41378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41327,
											"end": 41378,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 41327,
											"end": 41378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41156,
											"end": 41405,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 41156,
											"end": 41405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41082,
											"end": 41412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40992,
											"end": 41412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40992,
											"end": 41412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40992,
											"end": 41412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40992,
											"end": 41412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35419,
											"end": 36095,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 35419,
											"end": 36095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35665,
											"end": 35666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35649,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35649,
											"end": 35667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35649,
											"end": 35653,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35649,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35649,
											"end": 35667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35649,
											"end": 35667,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 35641,
											"end": 35710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 35641,
											"end": 35710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35743,
											"end": 35744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35729,
											"end": 35745,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35729,
											"end": 35745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35729,
											"end": 35731,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35729,
											"end": 35745,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35729,
											"end": 35745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35729,
											"end": 35745,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 35721,
											"end": 35786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 35721,
											"end": 35786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35799,
											"end": 35815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35818,
											"end": 35830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 35818,
											"end": 35828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 35818,
											"end": 35830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35818,
											"end": 35830,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 35818,
											"end": 35830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35799,
											"end": 35830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35799,
											"end": 35830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35843,
											"end": 35912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 35861,
											"end": 35869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35871,
											"end": 35875,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35877,
											"end": 35879,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35881,
											"end": 35887,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35889,
											"end": 35897,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35899,
											"end": 35911,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35843,
											"end": 35860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 35843,
											"end": 35912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35843,
											"end": 35912,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 35843,
											"end": 35912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35925,
											"end": 35982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 35931,
											"end": 35939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35941,
											"end": 35945,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35947,
											"end": 35949,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35951,
											"end": 35957,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35959,
											"end": 35967,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35969,
											"end": 35981,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35925,
											"end": 35930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 35925,
											"end": 35982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35925,
											"end": 35982,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 35925,
											"end": 35982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 36015,
											"end": 36023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36025,
											"end": 36029,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 36031,
											"end": 36033,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 36035,
											"end": 36041,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 36043,
											"end": 36051,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 36053,
											"end": 36065,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36086,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 35995,
											"end": 36087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36087,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 35995,
											"end": 36087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35630,
											"end": 36095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35419,
											"end": 36095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35419,
											"end": 36095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35419,
											"end": 36095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35419,
											"end": 36095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35419,
											"end": 36095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35419,
											"end": 36095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35419,
											"end": 36095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36409,
											"end": 37201,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 36409,
											"end": 37201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36552,
											"end": 36553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36536,
											"end": 36554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36536,
											"end": 36554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36540,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36536,
											"end": 36554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36554,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 36528,
											"end": 36593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 36528,
											"end": 36593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36606,
											"end": 36622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36625,
											"end": 36637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 36625,
											"end": 36635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 36625,
											"end": 36637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36625,
											"end": 36637,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 36625,
											"end": 36637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36606,
											"end": 36637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36606,
											"end": 36637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36650,
											"end": 36723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 36668,
											"end": 36676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36678,
											"end": 36682,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36692,
											"end": 36693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36696,
											"end": 36702,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36704,
											"end": 36708,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36710,
											"end": 36722,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36650,
											"end": 36667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 36650,
											"end": 36723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36650,
											"end": 36723,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 36650,
											"end": 36723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36736,
											"end": 36792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 36757,
											"end": 36765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36767,
											"end": 36771,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36781,
											"end": 36782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36785,
											"end": 36791,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36736,
											"end": 36756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 36736,
											"end": 36792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36736,
											"end": 36792,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 36736,
											"end": 36792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36840,
											"end": 36859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36862,
											"end": 36871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36872,
											"end": 36876,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36840,
											"end": 36877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36840,
											"end": 36877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36911,
											"end": 36917,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36896,
											"end": 36907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36896,
											"end": 36917,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36896,
											"end": 36917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 36888,
											"end": 36957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 36888,
											"end": 36957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37025,
											"end": 37031,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37011,
											"end": 37022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37011,
											"end": 37031,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36993,
											"end": 37008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37003,
											"end": 37007,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37008,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36993,
											"end": 37008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37008,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36993,
											"end": 37008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36993,
											"end": 37008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36993,
											"end": 37008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36993,
											"end": 37008,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37031,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37069,
											"end": 37075,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37053,
											"end": 37065,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37053,
											"end": 37065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37053,
											"end": 37075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37053,
											"end": 37075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37053,
											"end": 37075,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37053,
											"end": 37075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 37053,
											"end": 37075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37053,
											"end": 37075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37053,
											"end": 37075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 37053,
											"end": 37075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37053,
											"end": 37075,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 37053,
											"end": 37075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37053,
											"end": 37075,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37053,
											"end": 37075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37053,
											"end": 37075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37053,
											"end": 37075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37053,
											"end": 37075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37053,
											"end": 37075,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37053,
											"end": 37075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37110,
											"end": 37114,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37100,
											"end": 37108,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "PUSH",
											"source": 0,
											"value": "A78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098"
										},
										{
											"begin": 37116,
											"end": 37122,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37124,
											"end": 37128,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37130,
											"end": 37142,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 37093,
											"end": 37143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37093,
											"end": 37143,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 37182,
											"end": 37183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37159,
											"end": 37193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37159,
											"end": 37193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37172,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37159,
											"end": 37193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37159,
											"end": 37193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37159,
											"end": 37193,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 37186,
											"end": 37192,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37159,
											"end": 37193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37159,
											"end": 37193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37159,
											"end": 37193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 37159,
											"end": 37193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37159,
											"end": 37193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37159,
											"end": 37193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 37159,
											"end": 37193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37159,
											"end": 37193,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 37159,
											"end": 37193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37159,
											"end": 37193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37159,
											"end": 37193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37159,
											"end": 37193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37159,
											"end": 37193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37159,
											"end": 37193,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37159,
											"end": 37193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37159,
											"end": 37193,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 36517,
											"end": 37201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36517,
											"end": 37201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36409,
											"end": 37201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36409,
											"end": 37201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36409,
											"end": 37201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36409,
											"end": 37201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36409,
											"end": 37201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38817,
											"end": 39301,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 38817,
											"end": 39301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39034,
											"end": 39053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24520,
											"end": 24562,
											"name": "PUSH",
											"source": 0,
											"value": "1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
										},
										{
											"begin": 39056,
											"end": 39097,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39056,
											"end": 39097,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39097,
											"name": "PUSH",
											"source": 0,
											"value": "AABBB8CA"
										},
										{
											"begin": 39098,
											"end": 39102,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24778,
											"end": 24809,
											"name": "PUSH",
											"source": 0,
											"value": "29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895"
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 39056,
											"end": 39134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 39056,
											"end": 39134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 39056,
											"end": 39134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39034,
											"end": 39134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39034,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39172,
											"end": 39173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39149,
											"end": 39174,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39149,
											"end": 39174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39149,
											"end": 39160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39149,
											"end": 39174,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39149,
											"end": 39174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39149,
											"end": 39174,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39145,
											"end": 39294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 39145,
											"end": 39294,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39205,
											"end": 39216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39191,
											"end": 39230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39230,
											"name": "PUSH",
											"source": 0,
											"value": "75AB9782"
										},
										{
											"begin": 39231,
											"end": 39239,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 39241,
											"end": 39245,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 39247,
											"end": 39249,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 39251,
											"end": 39257,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 39259,
											"end": 39267,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 39269,
											"end": 39281,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 39191,
											"end": 39282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39191,
											"end": 39282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39145,
											"end": 39294,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 39145,
											"end": 39294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39023,
											"end": 39301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38817,
											"end": 39301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38817,
											"end": 39301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38817,
											"end": 39301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38817,
											"end": 39301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38817,
											"end": 39301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38817,
											"end": 39301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38817,
											"end": 39301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37209,
											"end": 37839,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 37209,
											"end": 37839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37414,
											"end": 37462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 37435,
											"end": 37443,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37445,
											"end": 37449,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37451,
											"end": 37453,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37455,
											"end": 37461,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37414,
											"end": 37434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 37414,
											"end": 37462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37414,
											"end": 37462,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 37414,
											"end": 37462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37475,
											"end": 37494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37497,
											"end": 37506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37497,
											"end": 37512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37507,
											"end": 37511,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37497,
											"end": 37512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37497,
											"end": 37512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37497,
											"end": 37512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37497,
											"end": 37512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37497,
											"end": 37512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37497,
											"end": 37512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37497,
											"end": 37512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37497,
											"end": 37512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37497,
											"end": 37512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37497,
											"end": 37512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37497,
											"end": 37512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37497,
											"end": 37512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37497,
											"end": 37512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37497,
											"end": 37512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37497,
											"end": 37512,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37497,
											"end": 37512,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37475,
											"end": 37512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37475,
											"end": 37512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37546,
											"end": 37552,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37531,
											"end": 37542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37531,
											"end": 37552,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37531,
											"end": 37552,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 37523,
											"end": 37596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 37523,
											"end": 37596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37664,
											"end": 37670,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37650,
											"end": 37661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37650,
											"end": 37670,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37632,
											"end": 37641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37632,
											"end": 37647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37642,
											"end": 37646,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 37632,
											"end": 37647,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37632,
											"end": 37647,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37632,
											"end": 37647,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37632,
											"end": 37647,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37632,
											"end": 37647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37632,
											"end": 37647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37632,
											"end": 37647,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37632,
											"end": 37647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37632,
											"end": 37647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37632,
											"end": 37647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37632,
											"end": 37647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37632,
											"end": 37647,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37632,
											"end": 37647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37632,
											"end": 37647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37632,
											"end": 37647,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37632,
											"end": 37670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37632,
											"end": 37670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37632,
											"end": 37670,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37632,
											"end": 37670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37709,
											"end": 37715,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37692,
											"end": 37705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37702,
											"end": 37704,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37705,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37692,
											"end": 37705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37705,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37692,
											"end": 37705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37705,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37692,
											"end": 37705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37705,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37692,
											"end": 37705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37692,
											"end": 37705,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37692,
											"end": 37715,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37715,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 37692,
											"end": 37715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 37692,
											"end": 37715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37715,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 37692,
											"end": 37715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37715,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37715,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37692,
											"end": 37715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37754,
											"end": 37756,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37748,
											"end": 37752,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37738,
											"end": 37746,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "PUSH",
											"source": 0,
											"value": "6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987"
										},
										{
											"begin": 37758,
											"end": 37764,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37766,
											"end": 37774,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37776,
											"end": 37788,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 37733,
											"end": 37789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37733,
											"end": 37789,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 37820,
											"end": 37822,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37805,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37805,
											"end": 37831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37814,
											"end": 37818,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37805,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37805,
											"end": 37831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37805,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 37824,
											"end": 37830,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37805,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37805,
											"end": 37831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37805,
											"end": 37831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 37805,
											"end": 37831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37805,
											"end": 37831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37805,
											"end": 37831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 37805,
											"end": 37831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37805,
											"end": 37831,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 37805,
											"end": 37831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37805,
											"end": 37831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37805,
											"end": 37831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37805,
											"end": 37831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37805,
											"end": 37831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37805,
											"end": 37831,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37805,
											"end": 37831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37805,
											"end": 37831,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 37403,
											"end": 37839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37209,
											"end": 37839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37209,
											"end": 37839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37209,
											"end": 37839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37209,
											"end": 37839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37209,
											"end": 37839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37209,
											"end": 37839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37209,
											"end": 37839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40003,
											"end": 40694,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 40003,
											"end": 40694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40257,
											"end": 40276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24520,
											"end": 24562,
											"name": "PUSH",
											"source": 0,
											"value": "1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
										},
										{
											"begin": 40279,
											"end": 40320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40279,
											"end": 40320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40320,
											"name": "PUSH",
											"source": 0,
											"value": "AABBB8CA"
										},
										{
											"begin": 40321,
											"end": 40323,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24876,
											"end": 24910,
											"name": "PUSH",
											"source": 0,
											"value": "B281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B"
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 40279,
											"end": 40358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 40279,
											"end": 40358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 40279,
											"end": 40358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40257,
											"end": 40358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40257,
											"end": 40358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40396,
											"end": 40397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40373,
											"end": 40398,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40373,
											"end": 40398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40373,
											"end": 40384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40373,
											"end": 40398,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40373,
											"end": 40398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40373,
											"end": 40398,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40369,
											"end": 40687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 40369,
											"end": 40687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40432,
											"end": 40443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40415,
											"end": 40459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40459,
											"name": "PUSH",
											"source": 0,
											"value": "23DE29"
										},
										{
											"begin": 40460,
											"end": 40468,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 40470,
											"end": 40474,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 40476,
											"end": 40478,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 40480,
											"end": 40486,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 40488,
											"end": 40496,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 40498,
											"end": 40510,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 40415,
											"end": 40511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40415,
											"end": 40511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40369,
											"end": 40687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 40369,
											"end": 40687,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40369,
											"end": 40687,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 40369,
											"end": 40687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40533,
											"end": 40552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40529,
											"end": 40687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40529,
											"end": 40687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 40529,
											"end": 40687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40578,
											"end": 40593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 40578,
											"end": 40580,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40578,
											"end": 40591,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40578,
											"end": 40591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40578,
											"end": 40591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 40578,
											"end": 40593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40578,
											"end": 40593,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 40578,
											"end": 40593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40577,
											"end": 40593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 40569,
											"end": 40675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 40569,
											"end": 40675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40529,
											"end": 40687,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 40529,
											"end": 40687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40369,
											"end": 40687,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 40369,
											"end": 40687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40246,
											"end": 40694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40003,
											"end": 40694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40003,
											"end": 40694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40003,
											"end": 40694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40003,
											"end": 40694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40003,
											"end": 40694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40003,
											"end": 40694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40003,
											"end": 40694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40003,
											"end": 40694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42072,
											"end": 42181,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 42072,
											"end": 42181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42072,
											"end": 42181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42072,
											"end": 42181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42072,
											"end": 42181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42072,
											"end": 42181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42072,
											"end": 42181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 12123,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 11797,
											"end": 12123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11857,
											"end": 11861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12114,
											"end": 12115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12099,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12111,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12092,
											"end": 12111,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12111,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 12092,
											"end": 12115,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12085,
											"end": 12115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12085,
											"end": 12115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 12123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 12123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 12123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 12123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 121,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 7,
											"end": 121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 74,
											"end": 80,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 102,
											"end": 114,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 92,
											"end": 114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 92,
											"end": 114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 127,
											"end": 311,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 127,
											"end": 311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 226,
											"end": 237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 255,
											"end": 258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 248,
											"end": 267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 300,
											"end": 304,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 291,
											"end": 305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 276,
											"end": 305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 276,
											"end": 305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 127,
											"end": 311,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 127,
											"end": 311,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 127,
											"end": 311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 127,
											"end": 311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 127,
											"end": 311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 317,
											"end": 449,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 317,
											"end": 449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 384,
											"end": 388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 399,
											"end": 410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 399,
											"end": 410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 432,
											"end": 435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 428,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 420,
											"end": 442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 420,
											"end": 442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 317,
											"end": 449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 317,
											"end": 449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 317,
											"end": 449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 317,
											"end": 449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 455,
											"end": 581,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 455,
											"end": 581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 492,
											"end": 499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 574,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 525,
											"end": 530,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 521,
											"end": 575,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 510,
											"end": 575,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 510,
											"end": 575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 455,
											"end": 581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 455,
											"end": 581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 455,
											"end": 581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 455,
											"end": 581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 587,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 587,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 624,
											"end": 631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 671,
											"end": 676,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 653,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 653,
											"end": 677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 653,
											"end": 677,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 653,
											"end": 677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 642,
											"end": 677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 642,
											"end": 677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 587,
											"end": 683,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 587,
											"end": 683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 587,
											"end": 683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 587,
											"end": 683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 689,
											"end": 797,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 689,
											"end": 797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 784,
											"end": 789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 766,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 766,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 766,
											"end": 790,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 766,
											"end": 790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 761,
											"end": 764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 754,
											"end": 791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 689,
											"end": 797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 689,
											"end": 797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 689,
											"end": 797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 803,
											"end": 982,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 803,
											"end": 982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 872,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 935,
											"end": 938,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 927,
											"end": 933,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 893,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 893,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 893,
											"end": 939,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 893,
											"end": 939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 971,
											"end": 975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 962,
											"end": 976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 948,
											"end": 976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 948,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 803,
											"end": 982,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 803,
											"end": 982,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 803,
											"end": 982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 803,
											"end": 982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 803,
											"end": 982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1101,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 988,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1088,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1869,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 1137,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 1333,
											"end": 1338,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 1285,
											"end": 1339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1339,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 1285,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 1434,
											"end": 1440,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1432,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 1355,
											"end": 1441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 1355,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1441,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 1515,
											"end": 1520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 1465,
											"end": 1521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1521,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 1465,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1551,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 1591,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1668,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 1747,
											"end": 1750,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 1688,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1751,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 1688,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1751,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 1774,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1834,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 1774,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1834,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1607,
											"end": 1608,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1604,
											"end": 1605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1609,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1595,
											"end": 1609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1595,
											"end": 1609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1863,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1863,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1869,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 2248,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1875,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2045,
											"end": 2054,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2095,
											"end": 2115,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2089,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 2236,
											"end": 2240,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 2133,
											"end": 2241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2241,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 2133,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 2248,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 2248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 2248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 2248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 2248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2254,
											"end": 2353,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 2254,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2254,
											"end": 2353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2254,
											"end": 2353,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2254,
											"end": 2353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2254,
											"end": 2353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2528,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 2359,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2483,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2472,
											"end": 2475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2484,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2521,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2512,
											"end": 2515,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2528,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2780,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 2534,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2738,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2625,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2645,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2646,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2625,
											"end": 2738,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2625,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 2625,
											"end": 2738,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2719,
											"end": 2722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2715,
											"end": 2726,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 2727,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2706,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2703,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2696,
											"end": 2707,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2658,
											"end": 2659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2625,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2625,
											"end": 2738,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2625,
											"end": 2738,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 2625,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2773,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2758,
											"end": 2761,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2596,
											"end": 2780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2888,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 2786,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2880,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2874,
											"end": 2881,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2869,
											"end": 2871,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2862,
											"end": 2867,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2872,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2882,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2888,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 3271,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 2894,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 3043,
											"end": 3048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 3010,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3049,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 3010,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 3129,
											"end": 3135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3127,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3065,
											"end": 3136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3136,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 3065,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3058,
											"end": 3136,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3058,
											"end": 3136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3201,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3184,
											"end": 3189,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 3145,
											"end": 3210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3210,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 3145,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 3257,
											"end": 3263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 3235,
											"end": 3264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3264,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 3235,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3233,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2986,
											"end": 3271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 3271,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 3271,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 3271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 3271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 3271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3590,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3277,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3430,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3417,
											"end": 3426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3475,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3461,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3441,
											"end": 3488,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 3578,
											"end": 3582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3575,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 3505,
											"end": 3583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3583,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 3505,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3590,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3590,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3671,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 3596,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3664,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3656,
											"end": 3665,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3677,
											"end": 3794,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 3677,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3784,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3788,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3917,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 3800,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 3910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 3907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3899,
											"end": 3911,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 4045,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 3923,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3996,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 4014,
											"end": 4019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3996,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3996,
											"end": 4020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3996,
											"end": 4020,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 3996,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 3994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 3976,
											"end": 4039,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4037,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4039,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 3976,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 4045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 4045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4190,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 4051,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4142,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4113,
											"end": 4142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4113,
											"end": 4142,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 4178,
											"end": 4183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 4151,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 4151,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4190,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4273,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 4196,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4273,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4273,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4401,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 4279,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 4370,
											"end": 4375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 4352,
											"end": 4376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4376,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 4352,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4377,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 4332,
											"end": 4395,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4393,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4395,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 4332,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4546,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 4407,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4453,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4498,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4469,
											"end": 4498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4469,
											"end": 4498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4507,
											"end": 4540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 4534,
											"end": 4539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4507,
											"end": 4540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 4507,
											"end": 4540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4507,
											"end": 4540,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 4507,
											"end": 4540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4546,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 5026,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4552,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4620,
											"end": 4626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4634,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4677,
											"end": 4679,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4665,
											"end": 4674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4663,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4675,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4648,
											"end": 4680,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 4683,
											"end": 4762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 4873,
											"end": 4880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4864,
											"end": 4870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4862,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 4828,
											"end": 4881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4881,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 4828,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4818,
											"end": 4881,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4818,
											"end": 4881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4774,
											"end": 4891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 4932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4956,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 5001,
											"end": 5008,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 4998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 4990,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 4999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 4956,
											"end": 5009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 5009,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 4956,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5009,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 5019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 5026,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 5026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 5026,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 5026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 5026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 5026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5122,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5032,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5109,
											"end": 5114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5115,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5095,
											"end": 5116,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5084,
											"end": 5116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5084,
											"end": 5116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5128,
											"end": 5237,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5128,
											"end": 5237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5209,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 5224,
											"end": 5229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5209,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5209,
											"end": 5230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5209,
											"end": 5230,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 5209,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5128,
											"end": 5237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5128,
											"end": 5237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5128,
											"end": 5237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5243,
											"end": 5453,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5243,
											"end": 5453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5334,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5381,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 5443,
											"end": 5444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5441,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5425,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5381,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5381,
											"end": 5446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5381,
											"end": 5446,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 5381,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5243,
											"end": 5453,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5243,
											"end": 5453,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5243,
											"end": 5453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5243,
											"end": 5453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5243,
											"end": 5453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5459,
											"end": 5577,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5459,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5546,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 5564,
											"end": 5569,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5546,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 5546,
											"end": 5570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5546,
											"end": 5570,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 5546,
											"end": 5570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5541,
											"end": 5544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5534,
											"end": 5571,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5459,
											"end": 5577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5459,
											"end": 5577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5459,
											"end": 5577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5805,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5583,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5714,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5703,
											"end": 5712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5699,
											"end": 5717,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5691,
											"end": 5717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5691,
											"end": 5717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 5795,
											"end": 5796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5784,
											"end": 5793,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5771,
											"end": 5777,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5727,
											"end": 5798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5798,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 5727,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5805,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5805,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5811,
											"end": 6430,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5811,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5888,
											"end": 5894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5896,
											"end": 5902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5904,
											"end": 5910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5953,
											"end": 5955,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5941,
											"end": 5950,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5932,
											"end": 5939,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5951,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5924,
											"end": 5956,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5921,
											"end": 6040,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5921,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 5921,
											"end": 6040,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5959,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 5959,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 5959,
											"end": 6038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5959,
											"end": 6038,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 5959,
											"end": 6038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5921,
											"end": 6040,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 5921,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 6149,
											"end": 6156,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6129,
											"end": 6138,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6104,
											"end": 6157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 6104,
											"end": 6157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6104,
											"end": 6157,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 6104,
											"end": 6157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6157,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6206,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6232,
											"end": 6285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6257,
											"end": 6266,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 6232,
											"end": 6285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6285,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 6232,
											"end": 6285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6222,
											"end": 6285,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6222,
											"end": 6285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6177,
											"end": 6295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6336,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6360,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 6405,
											"end": 6412,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6385,
											"end": 6394,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6381,
											"end": 6403,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 6360,
											"end": 6413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6413,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 6360,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5811,
											"end": 6430,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5811,
											"end": 6430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5811,
											"end": 6430,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5811,
											"end": 6430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5811,
											"end": 6430,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5811,
											"end": 6430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6436,
											"end": 6522,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 6436,
											"end": 6522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6471,
											"end": 6478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6511,
											"end": 6515,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6504,
											"end": 6509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6500,
											"end": 6516,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6436,
											"end": 6522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6436,
											"end": 6522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6436,
											"end": 6522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6436,
											"end": 6522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6640,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6528,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6611,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 6627,
											"end": 6632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6611,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 6611,
											"end": 6633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6611,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 6611,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6606,
											"end": 6609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6634,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6860,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6646,
											"end": 6860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6735,
											"end": 6739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6773,
											"end": 6775,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6762,
											"end": 6771,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6750,
											"end": 6776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6750,
											"end": 6776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 6850,
											"end": 6851,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6839,
											"end": 6848,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 6852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6832,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6786,
											"end": 6853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6853,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 6786,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6860,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6860,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6983,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 6866,
											"end": 6983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6975,
											"end": 6976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6972,
											"end": 6973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6977,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7106,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 6989,
											"end": 7106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7095,
											"end": 7096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7088,
											"end": 7100,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7112,
											"end": 7292,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 7112,
											"end": 7292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7160,
											"end": 7237,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7157,
											"end": 7158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7150,
											"end": 7238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7261,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7254,
											"end": 7255,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7247,
											"end": 7262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7285,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7278,
											"end": 7279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7271,
											"end": 7286,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7579,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 7298,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 7403,
											"end": 7407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 7381,
											"end": 7408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7408,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 7381,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7373,
											"end": 7379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7511,
											"end": 7517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7499,
											"end": 7509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7496,
											"end": 7518,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7493,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7463,
											"end": 7473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7494,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7457,
											"end": 7519,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7454,
											"end": 7542,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7454,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 7454,
											"end": 7542,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7522,
											"end": 7540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 7522,
											"end": 7540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 7522,
											"end": 7540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7522,
											"end": 7540,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 7522,
											"end": 7540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7454,
											"end": 7542,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 7454,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7572,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7558,
											"end": 7560,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7551,
											"end": 7573,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7341,
											"end": 7579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7714,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 7585,
											"end": 7714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7646,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 7646,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 7646,
											"end": 7666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7666,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 7646,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7636,
											"end": 7666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7636,
											"end": 7666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7675,
											"end": 7708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 7703,
											"end": 7707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7695,
											"end": 7701,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7675,
											"end": 7708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 7675,
											"end": 7708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7675,
											"end": 7708,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 7675,
											"end": 7708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7714,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7714,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 8027,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 7720,
											"end": 8027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7871,
											"end": 7889,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7863,
											"end": 7869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7860,
											"end": 7890,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7857,
											"end": 7913,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7857,
											"end": 7913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 7857,
											"end": 7913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7893,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 7893,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 7893,
											"end": 7911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7893,
											"end": 7911,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 7893,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7857,
											"end": 7913,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 7857,
											"end": 7913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7931,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 7953,
											"end": 7959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7931,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 7931,
											"end": 7960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7931,
											"end": 7960,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 7931,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7923,
											"end": 7960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7923,
											"end": 7960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8019,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8009,
											"end": 8013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 8027,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 8027,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 8027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 8027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8033,
											"end": 8179,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 8033,
											"end": 8179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8125,
											"end": 8128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8120,
											"end": 8123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8107,
											"end": 8137,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 8171,
											"end": 8172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8162,
											"end": 8168,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8157,
											"end": 8160,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8153,
											"end": 8169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8146,
											"end": 8173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8033,
											"end": 8179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8033,
											"end": 8179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8033,
											"end": 8179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8033,
											"end": 8179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8608,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 8185,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8287,
											"end": 8352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 8303,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 8344,
											"end": 8350,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8303,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 8303,
											"end": 8351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8303,
											"end": 8351,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 8303,
											"end": 8351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 8287,
											"end": 8352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8352,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 8287,
											"end": 8352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8278,
											"end": 8352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8278,
											"end": 8352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8368,
											"end": 8373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8413,
											"end": 8417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8406,
											"end": 8411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8402,
											"end": 8418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8451,
											"end": 8454,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8442,
											"end": 8448,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8437,
											"end": 8440,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8433,
											"end": 8449,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8430,
											"end": 8455,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8427,
											"end": 8539,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8427,
											"end": 8539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 8427,
											"end": 8539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8458,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 8458,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 8458,
											"end": 8537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8458,
											"end": 8537,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 8458,
											"end": 8537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8427,
											"end": 8539,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 8427,
											"end": 8539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8548,
											"end": 8602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 8595,
											"end": 8601,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8590,
											"end": 8593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8585,
											"end": 8588,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8548,
											"end": 8602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 8548,
											"end": 8602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8548,
											"end": 8602,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 8548,
											"end": 8602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8608,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8608,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8627,
											"end": 8965,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 8627,
											"end": 8965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8682,
											"end": 8687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8731,
											"end": 8734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 8728,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8716,
											"end": 8722,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8712,
											"end": 8729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8708,
											"end": 8735,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 8698,
											"end": 8820,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8739,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 8739,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 8739,
											"end": 8818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8739,
											"end": 8818,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 8739,
											"end": 8818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8820,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 8698,
											"end": 8820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8856,
											"end": 8862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8843,
											"end": 8863,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 8955,
											"end": 8958,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8947,
											"end": 8953,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8940,
											"end": 8944,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8932,
											"end": 8938,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8928,
											"end": 8945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 8881,
											"end": 8959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8959,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 8881,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8872,
											"end": 8959,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8872,
											"end": 8959,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8688,
											"end": 8965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8627,
											"end": 8965,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8627,
											"end": 8965,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8627,
											"end": 8965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8627,
											"end": 8965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8627,
											"end": 8965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 10238,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 8971,
											"end": 10238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9084,
											"end": 9090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9092,
											"end": 9098,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9100,
											"end": 9106,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9108,
											"end": 9114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9116,
											"end": 9122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9165,
											"end": 9168,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 9153,
											"end": 9162,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9144,
											"end": 9151,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9163,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9136,
											"end": 9169,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9133,
											"end": 9253,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9133,
											"end": 9253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 9133,
											"end": 9253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 9172,
											"end": 9251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 9172,
											"end": 9251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9251,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 9172,
											"end": 9251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9133,
											"end": 9253,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 9133,
											"end": 9253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9292,
											"end": 9293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9317,
											"end": 9370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 9362,
											"end": 9369,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9353,
											"end": 9359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9342,
											"end": 9351,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 9338,
											"end": 9360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 9317,
											"end": 9370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9370,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 9317,
											"end": 9370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9307,
											"end": 9370,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9307,
											"end": 9370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9263,
											"end": 9380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9419,
											"end": 9421,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9445,
											"end": 9498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 9490,
											"end": 9497,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9481,
											"end": 9487,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9470,
											"end": 9479,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 9466,
											"end": 9488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9445,
											"end": 9498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 9445,
											"end": 9498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9445,
											"end": 9498,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 9445,
											"end": 9498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9498,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9390,
											"end": 9508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9547,
											"end": 9549,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9573,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 9618,
											"end": 9625,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9609,
											"end": 9615,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9598,
											"end": 9607,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 9594,
											"end": 9616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9573,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 9573,
											"end": 9626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9573,
											"end": 9626,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 9573,
											"end": 9626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9626,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9518,
											"end": 9636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9703,
											"end": 9705,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9692,
											"end": 9701,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9675,
											"end": 9707,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9752,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9726,
											"end": 9732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9723,
											"end": 9753,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9720,
											"end": 9837,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9720,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 9720,
											"end": 9837,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9756,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 9756,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 9756,
											"end": 9835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9756,
											"end": 9835,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 9756,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9720,
											"end": 9837,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 9720,
											"end": 9837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9861,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 9915,
											"end": 9922,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9895,
											"end": 9904,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 9891,
											"end": 9913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9861,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 9861,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9861,
											"end": 9923,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 9861,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9851,
											"end": 9923,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9851,
											"end": 9923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9646,
											"end": 9933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10000,
											"end": 10003,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9989,
											"end": 9998,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9985,
											"end": 10004,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9972,
											"end": 10005,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10050,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10024,
											"end": 10030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10021,
											"end": 10051,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10135,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 10018,
											"end": 10135,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10054,
											"end": 10133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 10054,
											"end": 10133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 10054,
											"end": 10133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10054,
											"end": 10133,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 10054,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10135,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 10018,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 10213,
											"end": 10220,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10204,
											"end": 10210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10193,
											"end": 10202,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 10189,
											"end": 10211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 10159,
											"end": 10221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10221,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 10159,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10149,
											"end": 10221,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10149,
											"end": 10221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9943,
											"end": 10231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 10238,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 10238,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 10238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 10238,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 10238,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 10238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 10238,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 10238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 10238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10573,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10244,
											"end": 10573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10352,
											"end": 10354,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10340,
											"end": 10349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10331,
											"end": 10338,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10327,
											"end": 10350,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10323,
											"end": 10355,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10439,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 10320,
											"end": 10439,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10358,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 10358,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 10358,
											"end": 10437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10358,
											"end": 10437,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 10358,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10439,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 10320,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10478,
											"end": 10479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10503,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 10548,
											"end": 10555,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10528,
											"end": 10537,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10524,
											"end": 10546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10503,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 10503,
											"end": 10556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10503,
											"end": 10556,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 10503,
											"end": 10556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10556,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10449,
											"end": 10566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10573,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 11376,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 10579,
											"end": 11376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10665,
											"end": 10671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10673,
											"end": 10679,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10681,
											"end": 10687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10730,
											"end": 10732,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 10716,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10728,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10701,
											"end": 10733,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 10817,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 10817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 10698,
											"end": 10817,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 10736,
											"end": 10815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 10736,
											"end": 10815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10815,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 10736,
											"end": 10815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 10817,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 10698,
											"end": 10817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10856,
											"end": 10857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10881,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 10926,
											"end": 10933,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10923,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10906,
											"end": 10915,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10902,
											"end": 10924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 10881,
											"end": 10934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10934,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 10881,
											"end": 10934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10871,
											"end": 10934,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10871,
											"end": 10934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10827,
											"end": 10944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 10985,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11009,
											"end": 11062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 11054,
											"end": 11061,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11051,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11034,
											"end": 11043,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11030,
											"end": 11052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11009,
											"end": 11062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 11009,
											"end": 11062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11009,
											"end": 11062,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 11009,
											"end": 11062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10999,
											"end": 11062,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10999,
											"end": 11062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10954,
											"end": 11072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11139,
											"end": 11141,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11128,
											"end": 11137,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11124,
											"end": 11142,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11111,
											"end": 11143,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 11170,
											"end": 11188,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11162,
											"end": 11168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11189,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11156,
											"end": 11273,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11156,
											"end": 11273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 11156,
											"end": 11273,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11192,
											"end": 11271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 11192,
											"end": 11271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 11192,
											"end": 11271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11192,
											"end": 11271,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 11192,
											"end": 11271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11156,
											"end": 11273,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 11156,
											"end": 11273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 11351,
											"end": 11358,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11331,
											"end": 11340,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11327,
											"end": 11349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 11297,
											"end": 11359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11359,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 11297,
											"end": 11359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11359,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11082,
											"end": 11369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 11376,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 11376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 11376,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 11376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 11376,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 11376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11382,
											"end": 11856,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 11382,
											"end": 11856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11450,
											"end": 11456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11458,
											"end": 11464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11507,
											"end": 11509,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11495,
											"end": 11504,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11486,
											"end": 11493,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11482,
											"end": 11505,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11478,
											"end": 11510,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 11475,
											"end": 11594,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11475,
											"end": 11594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 11475,
											"end": 11594,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11513,
											"end": 11592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 11513,
											"end": 11592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 11513,
											"end": 11592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11513,
											"end": 11592,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 11513,
											"end": 11592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11475,
											"end": 11594,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 11475,
											"end": 11594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11658,
											"end": 11711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 11703,
											"end": 11710,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11694,
											"end": 11700,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11692,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11679,
											"end": 11701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11658,
											"end": 11711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 11658,
											"end": 11711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11658,
											"end": 11711,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 11658,
											"end": 11711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11648,
											"end": 11711,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11648,
											"end": 11711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11604,
											"end": 11721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11760,
											"end": 11762,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11786,
											"end": 11839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 11831,
											"end": 11838,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11822,
											"end": 11828,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11811,
											"end": 11820,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11807,
											"end": 11829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11786,
											"end": 11839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 11786,
											"end": 11839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11786,
											"end": 11839,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 11786,
											"end": 11839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11776,
											"end": 11839,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11776,
											"end": 11839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11731,
											"end": 11849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11382,
											"end": 11856,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11382,
											"end": 11856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11382,
											"end": 11856,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11382,
											"end": 11856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11382,
											"end": 11856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11382,
											"end": 11856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11862,
											"end": 12983,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 11862,
											"end": 12983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11966,
											"end": 11972,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11974,
											"end": 11980,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11982,
											"end": 11988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11990,
											"end": 11996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12039,
											"end": 12042,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12027,
											"end": 12036,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12018,
											"end": 12025,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12014,
											"end": 12037,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12010,
											"end": 12043,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 12007,
											"end": 12127,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12007,
											"end": 12127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 12007,
											"end": 12127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12046,
											"end": 12125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 12046,
											"end": 12125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 12046,
											"end": 12125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12046,
											"end": 12125,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 12046,
											"end": 12125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12007,
											"end": 12127,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 12007,
											"end": 12127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12166,
											"end": 12167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12191,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 12236,
											"end": 12243,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12227,
											"end": 12233,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12216,
											"end": 12225,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12191,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 12191,
											"end": 12244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12191,
											"end": 12244,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 12191,
											"end": 12244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12181,
											"end": 12244,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12181,
											"end": 12244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12137,
											"end": 12254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12293,
											"end": 12295,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12319,
											"end": 12372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 12364,
											"end": 12371,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12355,
											"end": 12361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12344,
											"end": 12353,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12340,
											"end": 12362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12319,
											"end": 12372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 12319,
											"end": 12372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12319,
											"end": 12372,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 12319,
											"end": 12372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12309,
											"end": 12372,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12309,
											"end": 12372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12449,
											"end": 12451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12438,
											"end": 12447,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12434,
											"end": 12452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12421,
											"end": 12453,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 12480,
											"end": 12498,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12472,
											"end": 12478,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12469,
											"end": 12499,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12466,
											"end": 12583,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12466,
											"end": 12583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 12466,
											"end": 12583,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12502,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 12502,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 12502,
											"end": 12581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12502,
											"end": 12581,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 12502,
											"end": 12581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12466,
											"end": 12583,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 12466,
											"end": 12583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12607,
											"end": 12669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 12661,
											"end": 12668,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12652,
											"end": 12658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12650,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12637,
											"end": 12659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12607,
											"end": 12669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 12607,
											"end": 12669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12607,
											"end": 12669,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 12607,
											"end": 12669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12597,
											"end": 12669,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12597,
											"end": 12669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12392,
											"end": 12679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12746,
											"end": 12748,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12735,
											"end": 12744,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12731,
											"end": 12749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12718,
											"end": 12750,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12769,
											"end": 12775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12766,
											"end": 12796,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12763,
											"end": 12880,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12763,
											"end": 12880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 12763,
											"end": 12880,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12799,
											"end": 12878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 12799,
											"end": 12878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 12799,
											"end": 12878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12799,
											"end": 12878,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 12799,
											"end": 12878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12763,
											"end": 12880,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 12763,
											"end": 12880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12904,
											"end": 12966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 12958,
											"end": 12965,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12949,
											"end": 12955,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12938,
											"end": 12947,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 12956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12904,
											"end": 12966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 12904,
											"end": 12966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12904,
											"end": 12966,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 12904,
											"end": 12966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12894,
											"end": 12966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12894,
											"end": 12966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12689,
											"end": 12976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11862,
											"end": 12983,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11862,
											"end": 12983,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 11862,
											"end": 12983,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11862,
											"end": 12983,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11862,
											"end": 12983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11862,
											"end": 12983,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11862,
											"end": 12983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11862,
											"end": 12983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12989,
											"end": 13641,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 12989,
											"end": 13641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13066,
											"end": 13072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13074,
											"end": 13080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13123,
											"end": 13125,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13111,
											"end": 13120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13102,
											"end": 13109,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13098,
											"end": 13121,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13094,
											"end": 13126,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13091,
											"end": 13210,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13091,
											"end": 13210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 13091,
											"end": 13210,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13129,
											"end": 13208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 13129,
											"end": 13208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 13129,
											"end": 13208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13129,
											"end": 13208,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 13129,
											"end": 13208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13091,
											"end": 13210,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 13091,
											"end": 13210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13249,
											"end": 13250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13274,
											"end": 13327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 13319,
											"end": 13326,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13310,
											"end": 13316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13299,
											"end": 13308,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13295,
											"end": 13317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13274,
											"end": 13327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 13274,
											"end": 13327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13274,
											"end": 13327,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 13274,
											"end": 13327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13264,
											"end": 13327,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13264,
											"end": 13327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13220,
											"end": 13337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13404,
											"end": 13406,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13393,
											"end": 13402,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13389,
											"end": 13407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13376,
											"end": 13408,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 13435,
											"end": 13453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13427,
											"end": 13433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13424,
											"end": 13454,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13421,
											"end": 13538,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13421,
											"end": 13538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 13421,
											"end": 13538,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13457,
											"end": 13536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 13457,
											"end": 13536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 13457,
											"end": 13536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13457,
											"end": 13536,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 13457,
											"end": 13536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13421,
											"end": 13538,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 13421,
											"end": 13538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13562,
											"end": 13624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 13616,
											"end": 13623,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13607,
											"end": 13613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13596,
											"end": 13605,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13562,
											"end": 13624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 13562,
											"end": 13624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13562,
											"end": 13624,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 13562,
											"end": 13624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13552,
											"end": 13624,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13552,
											"end": 13624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13347,
											"end": 13634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12989,
											"end": 13641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12989,
											"end": 13641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12989,
											"end": 13641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12989,
											"end": 13641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12989,
											"end": 13641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12989,
											"end": 13641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13647,
											"end": 13827,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 13647,
											"end": 13827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13695,
											"end": 13772,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13692,
											"end": 13693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13685,
											"end": 13773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13792,
											"end": 13796,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 13789,
											"end": 13790,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13782,
											"end": 13797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13816,
											"end": 13820,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13813,
											"end": 13814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13806,
											"end": 13821,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13833,
											"end": 14153,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 13833,
											"end": 14153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13877,
											"end": 13883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13914,
											"end": 13915,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 13908,
											"end": 13912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13904,
											"end": 13916,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13894,
											"end": 13916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13894,
											"end": 13916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13961,
											"end": 13962,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13955,
											"end": 13959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13951,
											"end": 13963,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13982,
											"end": 14000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13972,
											"end": 14053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 13972,
											"end": 14053,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14038,
											"end": 14042,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 14030,
											"end": 14036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14026,
											"end": 14043,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14016,
											"end": 14043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14016,
											"end": 14043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13972,
											"end": 14053,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 13972,
											"end": 14053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14100,
											"end": 14102,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14092,
											"end": 14098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14089,
											"end": 14103,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14069,
											"end": 14087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14066,
											"end": 14104,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14063,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 14063,
											"end": 14147,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14119,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 14119,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 14119,
											"end": 14137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14119,
											"end": 14137,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 14119,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14063,
											"end": 14147,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 14063,
											"end": 14147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13884,
											"end": 14153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13833,
											"end": 14153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13833,
											"end": 14153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13833,
											"end": 14153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13833,
											"end": 14153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14159,
											"end": 14390,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 14159,
											"end": 14390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14299,
											"end": 14333,
											"name": "PUSH",
											"source": 1,
											"value": "4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F"
										},
										{
											"begin": 14295,
											"end": 14296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14287,
											"end": 14293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14283,
											"end": 14297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14276,
											"end": 14334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14368,
											"end": 14382,
											"name": "PUSH",
											"source": 1,
											"value": "7220666F7220686F6C6465720000000000000000000000000000000000000000"
										},
										{
											"begin": 14363,
											"end": 14365,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14355,
											"end": 14361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14344,
											"end": 14383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14159,
											"end": 14390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14159,
											"end": 14390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14396,
											"end": 14762,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 14396,
											"end": 14762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14538,
											"end": 14541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14559,
											"end": 14626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 14623,
											"end": 14625,
											"name": "PUSH",
											"source": 1,
											"value": "2C"
										},
										{
											"begin": 14618,
											"end": 14621,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14559,
											"end": 14626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 14559,
											"end": 14626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14559,
											"end": 14626,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 14559,
											"end": 14626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14552,
											"end": 14626,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14552,
											"end": 14626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 14728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 14724,
											"end": 14727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 14728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 14635,
											"end": 14728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 14728,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 14635,
											"end": 14728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14753,
											"end": 14755,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14748,
											"end": 14751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14737,
											"end": 14756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14737,
											"end": 14756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14396,
											"end": 14762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14396,
											"end": 14762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14396,
											"end": 14762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14396,
											"end": 14762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14768,
											"end": 15187,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 14768,
											"end": 15187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14934,
											"end": 14938,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14972,
											"end": 14974,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14961,
											"end": 14970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14957,
											"end": 14975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14949,
											"end": 14975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14949,
											"end": 14975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15021,
											"end": 15030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15015,
											"end": 15019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15011,
											"end": 15031,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15007,
											"end": 15008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14996,
											"end": 15005,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14992,
											"end": 15009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15032,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15049,
											"end": 15180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 15175,
											"end": 15179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15049,
											"end": 15180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 15049,
											"end": 15180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15049,
											"end": 15180,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 15049,
											"end": 15180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15041,
											"end": 15180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15041,
											"end": 15180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14768,
											"end": 15187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14768,
											"end": 15187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14768,
											"end": 15187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14768,
											"end": 15187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15193,
											"end": 15416,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 15193,
											"end": 15416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15333,
											"end": 15367,
											"name": "PUSH",
											"source": 1,
											"value": "4552433737373A20617574686F72697A696E672073656C66206173206F706572"
										},
										{
											"begin": 15329,
											"end": 15330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15321,
											"end": 15327,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15317,
											"end": 15331,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15310,
											"end": 15368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15402,
											"end": 15408,
											"name": "PUSH",
											"source": 1,
											"value": "61746F7200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15397,
											"end": 15399,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15389,
											"end": 15395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15385,
											"end": 15400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15378,
											"end": 15409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15193,
											"end": 15416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15193,
											"end": 15416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15422,
											"end": 15788,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 15422,
											"end": 15788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15564,
											"end": 15567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15585,
											"end": 15652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 15649,
											"end": 15651,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15644,
											"end": 15647,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15585,
											"end": 15652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 15585,
											"end": 15652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15585,
											"end": 15652,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 15585,
											"end": 15652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15578,
											"end": 15652,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15578,
											"end": 15652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15661,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 15750,
											"end": 15753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15661,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 15661,
											"end": 15754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15661,
											"end": 15754,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 15661,
											"end": 15754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15779,
											"end": 15781,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15774,
											"end": 15777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15770,
											"end": 15782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15763,
											"end": 15782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15763,
											"end": 15782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15422,
											"end": 15788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15422,
											"end": 15788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15422,
											"end": 15788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15422,
											"end": 15788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 16213,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 15794,
											"end": 16213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15960,
											"end": 15964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15998,
											"end": 16000,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15987,
											"end": 15996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15983,
											"end": 16001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15975,
											"end": 16001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15975,
											"end": 16001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16047,
											"end": 16056,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16041,
											"end": 16045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16037,
											"end": 16057,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16033,
											"end": 16034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16022,
											"end": 16031,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16018,
											"end": 16035,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16011,
											"end": 16058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16075,
											"end": 16206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 16201,
											"end": 16205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16075,
											"end": 16206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 16075,
											"end": 16206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16075,
											"end": 16206,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 16075,
											"end": 16206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16067,
											"end": 16206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16067,
											"end": 16206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 16213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 16213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 16213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 16213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16219,
											"end": 16439,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 16219,
											"end": 16439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16359,
											"end": 16393,
											"name": "PUSH",
											"source": 1,
											"value": "4552433737373A207265766F6B696E672073656C66206173206F70657261746F"
										},
										{
											"begin": 16355,
											"end": 16356,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16347,
											"end": 16353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16343,
											"end": 16357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16336,
											"end": 16394,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16428,
											"end": 16431,
											"name": "PUSH",
											"source": 1,
											"value": "7200000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16423,
											"end": 16425,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16415,
											"end": 16421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16411,
											"end": 16426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16404,
											"end": 16432,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16219,
											"end": 16439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16219,
											"end": 16439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16811,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 16445,
											"end": 16811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16587,
											"end": 16590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16608,
											"end": 16675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 16672,
											"end": 16674,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 16667,
											"end": 16670,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16608,
											"end": 16675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 16608,
											"end": 16675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16608,
											"end": 16675,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 16608,
											"end": 16675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16601,
											"end": 16675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16601,
											"end": 16675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16684,
											"end": 16777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 16773,
											"end": 16776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16684,
											"end": 16777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 16684,
											"end": 16777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16684,
											"end": 16777,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 16684,
											"end": 16777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16802,
											"end": 16804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16797,
											"end": 16800,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16793,
											"end": 16805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16786,
											"end": 16805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16786,
											"end": 16805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16811,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16817,
											"end": 17236,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 16817,
											"end": 17236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 16987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17021,
											"end": 17023,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17010,
											"end": 17019,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17006,
											"end": 17024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16998,
											"end": 17024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16998,
											"end": 17024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17079,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17064,
											"end": 17068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17060,
											"end": 17080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17056,
											"end": 17057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17045,
											"end": 17054,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17041,
											"end": 17058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17098,
											"end": 17229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 17224,
											"end": 17228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17098,
											"end": 17229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 17098,
											"end": 17229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17098,
											"end": 17229,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 17098,
											"end": 17229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17090,
											"end": 17229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17090,
											"end": 17229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16817,
											"end": 17236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16817,
											"end": 17236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16817,
											"end": 17236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16817,
											"end": 17236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17242,
											"end": 17466,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 17242,
											"end": 17466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17382,
											"end": 17416,
											"name": "PUSH",
											"source": 1,
											"value": "4552433737373A20617070726F76652066726F6D20746865207A65726F206164"
										},
										{
											"begin": 17378,
											"end": 17379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17370,
											"end": 17376,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17366,
											"end": 17380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17359,
											"end": 17417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17451,
											"end": 17458,
											"name": "PUSH",
											"source": 1,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17446,
											"end": 17448,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17438,
											"end": 17444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17434,
											"end": 17449,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17427,
											"end": 17459,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17242,
											"end": 17466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17242,
											"end": 17466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17472,
											"end": 17838,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 17472,
											"end": 17838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17614,
											"end": 17617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17635,
											"end": 17702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 17699,
											"end": 17701,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 17694,
											"end": 17697,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 17635,
											"end": 17702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17702,
											"name": "tag",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 17635,
											"end": 17702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17628,
											"end": 17702,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17628,
											"end": 17702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17711,
											"end": 17804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 17800,
											"end": 17803,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17711,
											"end": 17804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 17711,
											"end": 17804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17711,
											"end": 17804,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 17711,
											"end": 17804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17829,
											"end": 17831,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17824,
											"end": 17827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17820,
											"end": 17832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17813,
											"end": 17832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17813,
											"end": 17832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17472,
											"end": 17838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17472,
											"end": 17838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17472,
											"end": 17838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17472,
											"end": 17838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17844,
											"end": 18263,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 17844,
											"end": 18263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18010,
											"end": 18014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18048,
											"end": 18050,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18037,
											"end": 18046,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18033,
											"end": 18051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18025,
											"end": 18051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18025,
											"end": 18051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18097,
											"end": 18106,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18091,
											"end": 18095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18087,
											"end": 18107,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18083,
											"end": 18084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18072,
											"end": 18081,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18068,
											"end": 18085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18061,
											"end": 18108,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18125,
											"end": 18256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 18251,
											"end": 18255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18125,
											"end": 18256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 18125,
											"end": 18256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18125,
											"end": 18256,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 18125,
											"end": 18256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18117,
											"end": 18256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18117,
											"end": 18256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17844,
											"end": 18263,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17844,
											"end": 18263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17844,
											"end": 18263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17844,
											"end": 18263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18269,
											"end": 18491,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 18269,
											"end": 18491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18409,
											"end": 18443,
											"name": "PUSH",
											"source": 1,
											"value": "4552433737373A20617070726F766520746F20746865207A65726F2061646472"
										},
										{
											"begin": 18405,
											"end": 18406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18397,
											"end": 18403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18393,
											"end": 18407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18386,
											"end": 18444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18478,
											"end": 18483,
											"name": "PUSH",
											"source": 1,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18473,
											"end": 18475,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18465,
											"end": 18471,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18461,
											"end": 18476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18454,
											"end": 18484,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18269,
											"end": 18491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18269,
											"end": 18491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18497,
											"end": 18863,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 18497,
											"end": 18863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18639,
											"end": 18642,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18660,
											"end": 18727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 18724,
											"end": 18726,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 18719,
											"end": 18722,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18660,
											"end": 18727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 18660,
											"end": 18727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18660,
											"end": 18727,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 18660,
											"end": 18727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18653,
											"end": 18727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18653,
											"end": 18727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18736,
											"end": 18829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 18825,
											"end": 18828,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18736,
											"end": 18829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 18736,
											"end": 18829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18736,
											"end": 18829,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 18736,
											"end": 18829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18854,
											"end": 18856,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18849,
											"end": 18852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18845,
											"end": 18857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18838,
											"end": 18857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18838,
											"end": 18857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18497,
											"end": 18863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18497,
											"end": 18863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18497,
											"end": 18863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18497,
											"end": 18863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18869,
											"end": 19288,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 18869,
											"end": 19288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19035,
											"end": 19039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19073,
											"end": 19075,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19062,
											"end": 19071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19058,
											"end": 19076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19050,
											"end": 19076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19050,
											"end": 19076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19122,
											"end": 19131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19116,
											"end": 19120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19112,
											"end": 19132,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19108,
											"end": 19109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19097,
											"end": 19106,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19093,
											"end": 19110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19086,
											"end": 19133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19150,
											"end": 19281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 19276,
											"end": 19280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19150,
											"end": 19281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 19150,
											"end": 19281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19150,
											"end": 19281,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 19150,
											"end": 19281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19142,
											"end": 19281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19142,
											"end": 19281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18869,
											"end": 19288,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18869,
											"end": 19288,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18869,
											"end": 19288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18869,
											"end": 19288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19294,
											"end": 19474,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 19294,
											"end": 19474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19434,
											"end": 19466,
											"name": "PUSH",
											"source": 1,
											"value": "4552433737373A20696E73756666696369656E7420616C6C6F77616E63650000"
										},
										{
											"begin": 19430,
											"end": 19431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19422,
											"end": 19428,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19418,
											"end": 19432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19411,
											"end": 19467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19294,
											"end": 19474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19294,
											"end": 19474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19480,
											"end": 19846,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 19480,
											"end": 19846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19622,
											"end": 19625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19643,
											"end": 19710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 19707,
											"end": 19709,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 19702,
											"end": 19705,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19643,
											"end": 19710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 19643,
											"end": 19710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19643,
											"end": 19710,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 19643,
											"end": 19710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19636,
											"end": 19710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19636,
											"end": 19710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19719,
											"end": 19812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 19808,
											"end": 19811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19719,
											"end": 19812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 19719,
											"end": 19812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19719,
											"end": 19812,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 19719,
											"end": 19812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19837,
											"end": 19839,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19832,
											"end": 19835,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19828,
											"end": 19840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19821,
											"end": 19840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19821,
											"end": 19840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19480,
											"end": 19846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19480,
											"end": 19846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19480,
											"end": 19846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19480,
											"end": 19846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19852,
											"end": 20271,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 19852,
											"end": 20271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20018,
											"end": 20022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20056,
											"end": 20058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20045,
											"end": 20054,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20041,
											"end": 20059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20033,
											"end": 20059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20033,
											"end": 20059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20105,
											"end": 20114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20099,
											"end": 20103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20095,
											"end": 20115,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20091,
											"end": 20092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20080,
											"end": 20089,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20076,
											"end": 20093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20069,
											"end": 20116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20133,
											"end": 20264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 20259,
											"end": 20263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20133,
											"end": 20264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 20133,
											"end": 20264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20133,
											"end": 20264,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 20133,
											"end": 20264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20125,
											"end": 20264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20125,
											"end": 20264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19852,
											"end": 20271,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19852,
											"end": 20271,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19852,
											"end": 20271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19852,
											"end": 20271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20277,
											"end": 20502,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 20277,
											"end": 20502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20417,
											"end": 20451,
											"name": "PUSH",
											"source": 1,
											"value": "4552433737373A207472616E736665722066726F6D20746865207A65726F2061"
										},
										{
											"begin": 20413,
											"end": 20414,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20405,
											"end": 20411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20401,
											"end": 20415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20394,
											"end": 20452,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20486,
											"end": 20494,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20481,
											"end": 20483,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20473,
											"end": 20479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20469,
											"end": 20484,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20462,
											"end": 20495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20277,
											"end": 20502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20277,
											"end": 20502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20508,
											"end": 20874,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 20508,
											"end": 20874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20650,
											"end": 20653,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20671,
											"end": 20738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 20735,
											"end": 20737,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 20730,
											"end": 20733,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20671,
											"end": 20738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 20671,
											"end": 20738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20671,
											"end": 20738,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 20671,
											"end": 20738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20664,
											"end": 20738,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20664,
											"end": 20738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 20836,
											"end": 20839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 20747,
											"end": 20840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20840,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 20747,
											"end": 20840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20865,
											"end": 20867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20860,
											"end": 20863,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20856,
											"end": 20868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20849,
											"end": 20868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20849,
											"end": 20868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20508,
											"end": 20874,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20508,
											"end": 20874,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20508,
											"end": 20874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20508,
											"end": 20874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20880,
											"end": 21299,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 20880,
											"end": 21299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21046,
											"end": 21050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21084,
											"end": 21086,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21073,
											"end": 21082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21069,
											"end": 21087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21061,
											"end": 21087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21061,
											"end": 21087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21133,
											"end": 21142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21127,
											"end": 21131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21123,
											"end": 21143,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21119,
											"end": 21120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21108,
											"end": 21117,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21104,
											"end": 21121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21097,
											"end": 21144,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21161,
											"end": 21292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 21287,
											"end": 21291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21161,
											"end": 21292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 21161,
											"end": 21292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21161,
											"end": 21292,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 21161,
											"end": 21292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21153,
											"end": 21292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21153,
											"end": 21292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20880,
											"end": 21299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20880,
											"end": 21299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20880,
											"end": 21299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20880,
											"end": 21299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21305,
											"end": 21528,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 21305,
											"end": 21528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21445,
											"end": 21479,
											"name": "PUSH",
											"source": 1,
											"value": "4552433737373A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 21441,
											"end": 21442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21433,
											"end": 21439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21429,
											"end": 21443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21422,
											"end": 21480,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21514,
											"end": 21520,
											"name": "PUSH",
											"source": 1,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21509,
											"end": 21511,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21501,
											"end": 21507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21497,
											"end": 21512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21490,
											"end": 21521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21305,
											"end": 21528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21305,
											"end": 21528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21534,
											"end": 21900,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 21534,
											"end": 21900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21676,
											"end": 21679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21697,
											"end": 21764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 21761,
											"end": 21763,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21756,
											"end": 21759,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21697,
											"end": 21764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 21697,
											"end": 21764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21697,
											"end": 21764,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 21697,
											"end": 21764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21690,
											"end": 21764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21690,
											"end": 21764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21773,
											"end": 21866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 21862,
											"end": 21865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21773,
											"end": 21866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 21773,
											"end": 21866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21773,
											"end": 21866,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 21773,
											"end": 21866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21891,
											"end": 21893,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21886,
											"end": 21889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21894,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21875,
											"end": 21894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21875,
											"end": 21894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21534,
											"end": 21900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21534,
											"end": 21900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21534,
											"end": 21900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21534,
											"end": 21900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21906,
											"end": 22325,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 21906,
											"end": 22325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22072,
											"end": 22076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22110,
											"end": 22112,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22099,
											"end": 22108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22095,
											"end": 22113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22087,
											"end": 22113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22087,
											"end": 22113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22159,
											"end": 22168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22153,
											"end": 22157,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22149,
											"end": 22169,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22145,
											"end": 22146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22134,
											"end": 22143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22130,
											"end": 22147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22123,
											"end": 22170,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22187,
											"end": 22318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 22313,
											"end": 22317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22187,
											"end": 22318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 22187,
											"end": 22318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22187,
											"end": 22318,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 22187,
											"end": 22318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22179,
											"end": 22318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22179,
											"end": 22318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21906,
											"end": 22325,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21906,
											"end": 22325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21906,
											"end": 22325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21906,
											"end": 22325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22331,
											"end": 22552,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 22331,
											"end": 22552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22471,
											"end": 22505,
											"name": "PUSH",
											"source": 1,
											"value": "4552433737373A206275726E2066726F6D20746865207A65726F206164647265"
										},
										{
											"begin": 22467,
											"end": 22468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22459,
											"end": 22465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22455,
											"end": 22469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22448,
											"end": 22506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22540,
											"end": 22544,
											"name": "PUSH",
											"source": 1,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22535,
											"end": 22537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22527,
											"end": 22533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22523,
											"end": 22538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22516,
											"end": 22545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22331,
											"end": 22552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22331,
											"end": 22552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22558,
											"end": 22924,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 22558,
											"end": 22924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22700,
											"end": 22703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22721,
											"end": 22788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 22785,
											"end": 22787,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 22780,
											"end": 22783,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22721,
											"end": 22788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 22721,
											"end": 22788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22721,
											"end": 22788,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 22721,
											"end": 22788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22714,
											"end": 22788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22714,
											"end": 22788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22797,
											"end": 22890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 22886,
											"end": 22889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22797,
											"end": 22890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 22797,
											"end": 22890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22797,
											"end": 22890,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 22797,
											"end": 22890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22915,
											"end": 22917,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22910,
											"end": 22913,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22906,
											"end": 22918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22558,
											"end": 22924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22558,
											"end": 22924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22558,
											"end": 22924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22558,
											"end": 22924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22930,
											"end": 23349,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 22930,
											"end": 23349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23096,
											"end": 23100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23134,
											"end": 23136,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23123,
											"end": 23132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23119,
											"end": 23137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23111,
											"end": 23137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23111,
											"end": 23137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23183,
											"end": 23192,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23177,
											"end": 23181,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23173,
											"end": 23193,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23169,
											"end": 23170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23158,
											"end": 23167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23154,
											"end": 23171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23147,
											"end": 23194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23211,
											"end": 23342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 23337,
											"end": 23341,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23211,
											"end": 23342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 23211,
											"end": 23342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23211,
											"end": 23342,
											"name": "tag",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 23211,
											"end": 23342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23203,
											"end": 23342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23203,
											"end": 23342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22930,
											"end": 23349,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22930,
											"end": 23349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22930,
											"end": 23349,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22930,
											"end": 23349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23355,
											"end": 23577,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 23355,
											"end": 23577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23529,
											"name": "PUSH",
											"source": 1,
											"value": "4552433737373A206275726E20616D6F756E7420657863656564732062616C61"
										},
										{
											"begin": 23491,
											"end": 23492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23483,
											"end": 23489,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23479,
											"end": 23493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23472,
											"end": 23530,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23564,
											"end": 23569,
											"name": "PUSH",
											"source": 1,
											"value": "6E63650000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23559,
											"end": 23561,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23551,
											"end": 23557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23547,
											"end": 23562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23540,
											"end": 23570,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23355,
											"end": 23577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23355,
											"end": 23577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23583,
											"end": 23949,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 23583,
											"end": 23949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23725,
											"end": 23728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23746,
											"end": 23813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 23810,
											"end": 23812,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 23805,
											"end": 23808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23746,
											"end": 23813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 23746,
											"end": 23813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23746,
											"end": 23813,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 23746,
											"end": 23813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23739,
											"end": 23813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23739,
											"end": 23813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23822,
											"end": 23915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 23911,
											"end": 23914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23822,
											"end": 23915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 23822,
											"end": 23915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23822,
											"end": 23915,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 23822,
											"end": 23915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23940,
											"end": 23942,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23935,
											"end": 23938,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23931,
											"end": 23943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23924,
											"end": 23943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23924,
											"end": 23943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23583,
											"end": 23949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23583,
											"end": 23949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23583,
											"end": 23949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23583,
											"end": 23949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23955,
											"end": 24374,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 23955,
											"end": 24374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24121,
											"end": 24125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24159,
											"end": 24161,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24148,
											"end": 24157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24144,
											"end": 24162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24136,
											"end": 24162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24136,
											"end": 24162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24208,
											"end": 24217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24202,
											"end": 24206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24198,
											"end": 24218,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24194,
											"end": 24195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24183,
											"end": 24192,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24179,
											"end": 24196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24172,
											"end": 24219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24236,
											"end": 24367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 24362,
											"end": 24366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24236,
											"end": 24367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 24236,
											"end": 24367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24236,
											"end": 24367,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 24236,
											"end": 24367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24228,
											"end": 24367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24228,
											"end": 24367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23955,
											"end": 24374,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23955,
											"end": 24374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23955,
											"end": 24374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23955,
											"end": 24374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24380,
											"end": 24560,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 24380,
											"end": 24560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24428,
											"end": 24505,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24425,
											"end": 24426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24418,
											"end": 24506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24525,
											"end": 24529,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 24522,
											"end": 24523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24515,
											"end": 24530,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24549,
											"end": 24553,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 24546,
											"end": 24547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24539,
											"end": 24554,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 24566,
											"end": 24760,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 24566,
											"end": 24760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24606,
											"end": 24610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24626,
											"end": 24646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 24644,
											"end": 24645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24626,
											"end": 24646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 24626,
											"end": 24646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24626,
											"end": 24646,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 24626,
											"end": 24646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24621,
											"end": 24646,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24621,
											"end": 24646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24660,
											"end": 24680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 24678,
											"end": 24679,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24660,
											"end": 24680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 24660,
											"end": 24680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24660,
											"end": 24680,
											"name": "tag",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 24660,
											"end": 24680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24655,
											"end": 24680,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24655,
											"end": 24680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24704,
											"end": 24705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24701,
											"end": 24702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24697,
											"end": 24706,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24689,
											"end": 24706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24689,
											"end": 24706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24728,
											"end": 24729,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24722,
											"end": 24726,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24719,
											"end": 24730,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 24716,
											"end": 24753,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24716,
											"end": 24753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 24716,
											"end": 24753,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24733,
											"end": 24751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 24733,
											"end": 24751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 24733,
											"end": 24751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24733,
											"end": 24751,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 24733,
											"end": 24751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24716,
											"end": 24753,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 24716,
											"end": 24753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24566,
											"end": 24760,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24566,
											"end": 24760,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24566,
											"end": 24760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24566,
											"end": 24760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24566,
											"end": 24760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24766,
											"end": 24864,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 24766,
											"end": 24864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24817,
											"end": 24823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24851,
											"end": 24856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24845,
											"end": 24857,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24835,
											"end": 24857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24835,
											"end": 24857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24766,
											"end": 24864,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24766,
											"end": 24864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24766,
											"end": 24864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24766,
											"end": 24864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24870,
											"end": 25038,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 24870,
											"end": 25038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24953,
											"end": 24964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24987,
											"end": 24993,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24982,
											"end": 24985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24975,
											"end": 24994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25027,
											"end": 25031,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25022,
											"end": 25025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25018,
											"end": 25032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25003,
											"end": 25032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25003,
											"end": 25032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24870,
											"end": 25038,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24870,
											"end": 25038,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24870,
											"end": 25038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24870,
											"end": 25038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24870,
											"end": 25038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25044,
											"end": 25417,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 25044,
											"end": 25417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25130,
											"end": 25133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25158,
											"end": 25196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 25190,
											"end": 25195,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25158,
											"end": 25196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 25158,
											"end": 25196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25158,
											"end": 25196,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 25158,
											"end": 25196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25212,
											"end": 25282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 25275,
											"end": 25281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25270,
											"end": 25273,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 25212,
											"end": 25282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 25212,
											"end": 25282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25212,
											"end": 25282,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 25212,
											"end": 25282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25205,
											"end": 25282,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 25205,
											"end": 25282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25291,
											"end": 25356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 25349,
											"end": 25355,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25344,
											"end": 25347,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 25337,
											"end": 25341,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25330,
											"end": 25335,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 25326,
											"end": 25342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25291,
											"end": 25356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 25291,
											"end": 25356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25291,
											"end": 25356,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 25291,
											"end": 25356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25381,
											"end": 25410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 25403,
											"end": 25409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25381,
											"end": 25410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 25381,
											"end": 25410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25381,
											"end": 25410,
											"name": "tag",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 25381,
											"end": 25410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25376,
											"end": 25379,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 25372,
											"end": 25411,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25365,
											"end": 25411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25365,
											"end": 25411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25134,
											"end": 25417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25044,
											"end": 25417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25044,
											"end": 25417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25044,
											"end": 25417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25044,
											"end": 25417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25044,
											"end": 25417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25423,
											"end": 26039,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 25423,
											"end": 26039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25608,
											"end": 25612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25646,
											"end": 25648,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 25635,
											"end": 25644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25631,
											"end": 25649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25623,
											"end": 25649,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25623,
											"end": 25649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25659,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 25727,
											"end": 25728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25716,
											"end": 25725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25712,
											"end": 25729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25703,
											"end": 25709,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 25659,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 25659,
											"end": 25730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25659,
											"end": 25730,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 25659,
											"end": 25730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25777,
											"end": 25786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25771,
											"end": 25775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25767,
											"end": 25787,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25762,
											"end": 25764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25751,
											"end": 25760,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25747,
											"end": 25765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25740,
											"end": 25788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25805,
											"end": 25881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 25876,
											"end": 25880,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25867,
											"end": 25873,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 25805,
											"end": 25881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 25805,
											"end": 25881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25805,
											"end": 25881,
											"name": "tag",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 25805,
											"end": 25881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25797,
											"end": 25881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25797,
											"end": 25881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25928,
											"end": 25937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25922,
											"end": 25926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25918,
											"end": 25938,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25913,
											"end": 25915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25902,
											"end": 25911,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25898,
											"end": 25916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25891,
											"end": 25939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25956,
											"end": 26032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 26027,
											"end": 26031,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26018,
											"end": 26024,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 25956,
											"end": 26032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 25956,
											"end": 26032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25956,
											"end": 26032,
											"name": "tag",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 25956,
											"end": 26032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25948,
											"end": 26032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25948,
											"end": 26032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25423,
											"end": 26039,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 25423,
											"end": 26039,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 25423,
											"end": 26039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25423,
											"end": 26039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25423,
											"end": 26039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25423,
											"end": 26039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25423,
											"end": 26039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26163,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 26045,
											"end": 26163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26132,
											"end": 26156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 26150,
											"end": 26155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26132,
											"end": 26156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 26132,
											"end": 26156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26132,
											"end": 26156,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 26132,
											"end": 26156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26127,
											"end": 26130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26120,
											"end": 26157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26169,
											"end": 26246,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 26169,
											"end": 26246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26206,
											"end": 26213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26235,
											"end": 26240,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26224,
											"end": 26240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26224,
											"end": 26240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26169,
											"end": 26246,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26169,
											"end": 26246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26169,
											"end": 26246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26169,
											"end": 26246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26252,
											"end": 26370,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 26252,
											"end": 26370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26339,
											"end": 26363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 26357,
											"end": 26362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26339,
											"end": 26363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 26339,
											"end": 26363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26339,
											"end": 26363,
											"name": "tag",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 26339,
											"end": 26363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26334,
											"end": 26337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26327,
											"end": 26364,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26252,
											"end": 26370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26252,
											"end": 26370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26252,
											"end": 26370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26376,
											"end": 26708,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 26376,
											"end": 26708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26497,
											"end": 26501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26535,
											"end": 26537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26524,
											"end": 26533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26520,
											"end": 26538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26512,
											"end": 26538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26512,
											"end": 26538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26548,
											"end": 26619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 26616,
											"end": 26617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26605,
											"end": 26614,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26601,
											"end": 26618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26592,
											"end": 26598,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 26548,
											"end": 26619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 26548,
											"end": 26619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26548,
											"end": 26619,
											"name": "tag",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 26548,
											"end": 26619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26629,
											"end": 26701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 26697,
											"end": 26699,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26686,
											"end": 26695,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26682,
											"end": 26700,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26673,
											"end": 26679,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26629,
											"end": 26701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 26629,
											"end": 26701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26629,
											"end": 26701,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 26629,
											"end": 26701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26376,
											"end": 26708,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 26376,
											"end": 26708,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26376,
											"end": 26708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26376,
											"end": 26708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26376,
											"end": 26708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26376,
											"end": 26708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26714,
											"end": 26857,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 26714,
											"end": 26857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26771,
											"end": 26776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26802,
											"end": 26808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26796,
											"end": 26809,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26787,
											"end": 26809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26787,
											"end": 26809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26818,
											"end": 26851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 26845,
											"end": 26850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26818,
											"end": 26851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 26818,
											"end": 26851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26818,
											"end": 26851,
											"name": "tag",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 26818,
											"end": 26851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26714,
											"end": 26857,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26714,
											"end": 26857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26714,
											"end": 26857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26714,
											"end": 26857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26714,
											"end": 26857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26863,
											"end": 27214,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 26863,
											"end": 27214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26933,
											"end": 26939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26982,
											"end": 26984,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26970,
											"end": 26979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26961,
											"end": 26968,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26957,
											"end": 26980,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26953,
											"end": 26985,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 26950,
											"end": 27069,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26950,
											"end": 27069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 26950,
											"end": 27069,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26988,
											"end": 27067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 26988,
											"end": 27067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 26988,
											"end": 27067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26988,
											"end": 27067,
											"name": "tag",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 26988,
											"end": 27067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26950,
											"end": 27069,
											"name": "tag",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 26950,
											"end": 27069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27108,
											"end": 27109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27133,
											"end": 27197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 27189,
											"end": 27196,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27180,
											"end": 27186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27169,
											"end": 27178,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 27165,
											"end": 27187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27133,
											"end": 27197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 27133,
											"end": 27197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27133,
											"end": 27197,
											"name": "tag",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 27133,
											"end": 27197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27123,
											"end": 27197,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27123,
											"end": 27197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27079,
											"end": 27207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26863,
											"end": 27214,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26863,
											"end": 27214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26863,
											"end": 27214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26863,
											"end": 27214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26863,
											"end": 27214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27220,
											"end": 28169,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 27220,
											"end": 28169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27489,
											"end": 27493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27527,
											"end": 27530,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 27516,
											"end": 27525,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27512,
											"end": 27531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27541,
											"end": 27612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 27609,
											"end": 27610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27598,
											"end": 27607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27594,
											"end": 27611,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27585,
											"end": 27591,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 27541,
											"end": 27612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 27541,
											"end": 27612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27541,
											"end": 27612,
											"name": "tag",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 27541,
											"end": 27612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27622,
											"end": 27694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 27690,
											"end": 27692,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27679,
											"end": 27688,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27675,
											"end": 27693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27666,
											"end": 27672,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 27622,
											"end": 27694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 27622,
											"end": 27694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27622,
											"end": 27694,
											"name": "tag",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 27622,
											"end": 27694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27704,
											"end": 27776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 27772,
											"end": 27774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27761,
											"end": 27770,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27757,
											"end": 27775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 27754,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 27704,
											"end": 27776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 27704,
											"end": 27776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27704,
											"end": 27776,
											"name": "tag",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 27704,
											"end": 27776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27786,
											"end": 27858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 27854,
											"end": 27856,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 27843,
											"end": 27852,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27839,
											"end": 27857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27830,
											"end": 27836,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 27786,
											"end": 27858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 27786,
											"end": 27858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27786,
											"end": 27858,
											"name": "tag",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 27786,
											"end": 27858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27906,
											"end": 27915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27900,
											"end": 27904,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27896,
											"end": 27916,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27890,
											"end": 27893,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 27879,
											"end": 27888,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27875,
											"end": 27894,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27868,
											"end": 27917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27934,
											"end": 28010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 28005,
											"end": 28009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27996,
											"end": 28002,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 27934,
											"end": 28010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 27934,
											"end": 28010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27934,
											"end": 28010,
											"name": "tag",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 27934,
											"end": 28010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27926,
											"end": 28010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27926,
											"end": 28010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28058,
											"end": 28067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28052,
											"end": 28056,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28048,
											"end": 28068,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28042,
											"end": 28045,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 28031,
											"end": 28040,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28027,
											"end": 28046,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28020,
											"end": 28069,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28086,
											"end": 28162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 28157,
											"end": 28161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28148,
											"end": 28154,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 28086,
											"end": 28162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 28086,
											"end": 28162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28086,
											"end": 28162,
											"name": "tag",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 28086,
											"end": 28162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28078,
											"end": 28162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28078,
											"end": 28162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27220,
											"end": 28169,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 27220,
											"end": 28169,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 27220,
											"end": 28169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27220,
											"end": 28169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27220,
											"end": 28169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27220,
											"end": 28169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27220,
											"end": 28169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27220,
											"end": 28169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27220,
											"end": 28169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27220,
											"end": 28169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28175,
											"end": 28401,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 28175,
											"end": 28401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28315,
											"end": 28349,
											"name": "PUSH",
											"source": 1,
											"value": "4552433737373A207472616E7366657220616D6F756E74206578636565647320"
										},
										{
											"begin": 28311,
											"end": 28312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28303,
											"end": 28309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28299,
											"end": 28313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28292,
											"end": 28350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28384,
											"end": 28393,
											"name": "PUSH",
											"source": 1,
											"value": "62616C616E636500000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28379,
											"end": 28381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28371,
											"end": 28377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28367,
											"end": 28382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28360,
											"end": 28394,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28175,
											"end": 28401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28175,
											"end": 28401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28407,
											"end": 28773,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 28407,
											"end": 28773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28549,
											"end": 28552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28570,
											"end": 28637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 28634,
											"end": 28636,
											"name": "PUSH",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 28629,
											"end": 28632,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28570,
											"end": 28637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 28570,
											"end": 28637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28570,
											"end": 28637,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 28570,
											"end": 28637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28563,
											"end": 28637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28563,
											"end": 28637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28646,
											"end": 28739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 28735,
											"end": 28738,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28646,
											"end": 28739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 28646,
											"end": 28739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28646,
											"end": 28739,
											"name": "tag",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 28646,
											"end": 28739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28764,
											"end": 28766,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28759,
											"end": 28762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28748,
											"end": 28767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28748,
											"end": 28767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28407,
											"end": 28773,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28407,
											"end": 28773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28407,
											"end": 28773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28407,
											"end": 28773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28779,
											"end": 29198,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 28779,
											"end": 29198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28983,
											"end": 28985,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28972,
											"end": 28981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28968,
											"end": 28986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28960,
											"end": 28986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28960,
											"end": 28986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29032,
											"end": 29041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29026,
											"end": 29030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29022,
											"end": 29042,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29018,
											"end": 29019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29007,
											"end": 29016,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 29003,
											"end": 29020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28996,
											"end": 29043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29060,
											"end": 29191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 29186,
											"end": 29190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29060,
											"end": 29191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 29060,
											"end": 29191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29060,
											"end": 29191,
											"name": "tag",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 29060,
											"end": 29191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29052,
											"end": 29191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29052,
											"end": 29191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28779,
											"end": 29198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28779,
											"end": 29198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28779,
											"end": 29198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28779,
											"end": 29198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29204,
											"end": 29395,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 29204,
											"end": 29395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29244,
											"end": 29247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29263,
											"end": 29283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 29281,
											"end": 29282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29263,
											"end": 29283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 29263,
											"end": 29283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29263,
											"end": 29283,
											"name": "tag",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 29263,
											"end": 29283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29258,
											"end": 29283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29258,
											"end": 29283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29297,
											"end": 29317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 29315,
											"end": 29316,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 29297,
											"end": 29317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 29297,
											"end": 29317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29297,
											"end": 29317,
											"name": "tag",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 29297,
											"end": 29317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29292,
											"end": 29317,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 29292,
											"end": 29317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29340,
											"end": 29341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29337,
											"end": 29338,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29333,
											"end": 29342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29326,
											"end": 29342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29326,
											"end": 29342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29361,
											"end": 29364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29358,
											"end": 29359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29355,
											"end": 29365,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 29352,
											"end": 29388,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 29352,
											"end": 29388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 29352,
											"end": 29388,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29368,
											"end": 29386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 29368,
											"end": 29386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 29368,
											"end": 29386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29368,
											"end": 29386,
											"name": "tag",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 29368,
											"end": 29386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29352,
											"end": 29388,
											"name": "tag",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 29352,
											"end": 29388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29204,
											"end": 29395,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 29204,
											"end": 29395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29204,
											"end": 29395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29204,
											"end": 29395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29204,
											"end": 29395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29401,
											"end": 29702,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 29401,
											"end": 29702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29541,
											"end": 29575,
											"name": "PUSH",
											"source": 1,
											"value": "4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374"
										},
										{
											"begin": 29537,
											"end": 29538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29529,
											"end": 29535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29525,
											"end": 29539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29518,
											"end": 29576,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29610,
											"end": 29644,
											"name": "PUSH",
											"source": 1,
											"value": "20686173206E6F20696D706C656D656E74657220666F7220455243373737546F"
										},
										{
											"begin": 29605,
											"end": 29607,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29597,
											"end": 29603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29593,
											"end": 29608,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29586,
											"end": 29645,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29679,
											"end": 29694,
											"name": "PUSH",
											"source": 1,
											"value": "6B656E73526563697069656E7400000000000000000000000000000000000000"
										},
										{
											"begin": 29674,
											"end": 29676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29666,
											"end": 29672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29662,
											"end": 29677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29655,
											"end": 29695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29401,
											"end": 29702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29401,
											"end": 29702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29708,
											"end": 30074,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 29708,
											"end": 30074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29850,
											"end": 29853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29871,
											"end": 29938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 29935,
											"end": 29937,
											"name": "PUSH",
											"source": 1,
											"value": "4D"
										},
										{
											"begin": 29930,
											"end": 29933,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 29871,
											"end": 29938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 29871,
											"end": 29938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29871,
											"end": 29938,
											"name": "tag",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 29871,
											"end": 29938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29864,
											"end": 29938,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29864,
											"end": 29938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29947,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 30036,
											"end": 30039,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29947,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 29947,
											"end": 30040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29947,
											"end": 30040,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 29947,
											"end": 30040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30065,
											"end": 30067,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 30060,
											"end": 30063,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30056,
											"end": 30068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30049,
											"end": 30068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30049,
											"end": 30068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29708,
											"end": 30074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29708,
											"end": 30074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29708,
											"end": 30074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29708,
											"end": 30074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30080,
											"end": 30499,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 30080,
											"end": 30499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30246,
											"end": 30250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30284,
											"end": 30286,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30273,
											"end": 30282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30269,
											"end": 30287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30261,
											"end": 30287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30261,
											"end": 30287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30333,
											"end": 30342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30327,
											"end": 30331,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30323,
											"end": 30343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30319,
											"end": 30320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30308,
											"end": 30317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30304,
											"end": 30321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30297,
											"end": 30344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30361,
											"end": 30492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 30487,
											"end": 30491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30361,
											"end": 30492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 30361,
											"end": 30492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30361,
											"end": 30492,
											"name": "tag",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 30361,
											"end": 30492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30353,
											"end": 30492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30353,
											"end": 30492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30080,
											"end": 30499,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30080,
											"end": 30499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30080,
											"end": 30499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30080,
											"end": 30499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"ERC777.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"authorizeOperator(address)": "959b8c3f",
							"balanceOf(address)": "70a08231",
							"burn(uint256,bytes)": "fe9d9303",
							"decimals()": "313ce567",
							"defaultOperators()": "06e48538",
							"granularity()": "556f0dc7",
							"isOperatorFor(address,address)": "d95b6371",
							"name()": "06fdde03",
							"operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
							"operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
							"revokeOperator(address)": "fad8b32a",
							"send(address,uint256,bytes)": "9bd9bbc6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultOperators_\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"AuthorizedOperator(address,address)\":{\"details\":\"Emitted when `operator` is made operator for `tokenHolder`.\"},\"Burned(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"Minted(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"RevokedOperator(address,address)\":{\"details\":\"Emitted when `operator` is revoked its operator status for `tokenHolder`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}. Note that operator and allowance concepts are orthogonal: operators may not have allowance, and accounts with allowance may not be operators themselves.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Note that accounts cannot have allowance issued by their operators.\"},\"authorizeOperator(address)\":{\"details\":\"See {IERC777-authorizeOperator}.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`tokenHolder`).\"},\"burn(uint256,bytes)\":{\"details\":\"See {IERC777-burn}. Also emits a {IERC20-Transfer} event for ERC20 compatibility.\"},\"constructor\":{\"details\":\"`defaultOperators` may be an empty array.\"},\"decimals()\":{\"details\":\"See {ERC20-decimals}. Always returns 18, as per the [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility).\"},\"defaultOperators()\":{\"details\":\"See {IERC777-defaultOperators}.\"},\"granularity()\":{\"details\":\"See {IERC777-granularity}. This implementation always returns `1`.\"},\"isOperatorFor(address,address)\":{\"details\":\"See {IERC777-isOperatorFor}.\"},\"name()\":{\"details\":\"See {IERC777-name}.\"},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"See {IERC777-operatorBurn}. Emits {Burned} and {IERC20-Transfer} events.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"See {IERC777-operatorSend}. Emits {Sent} and {IERC20-Transfer} events.\"},\"revokeOperator(address)\":{\"details\":\"See {IERC777-revokeOperator}.\"},\"send(address,uint256,bytes)\":{\"details\":\"See {IERC777-send}. Also emits a {IERC20-Transfer} event for ERC20 compatibility.\"},\"symbol()\":{\"details\":\"See {IERC777-symbol}.\"},\"totalSupply()\":{\"details\":\"See {IERC777-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient} interface if it is a contract. Also emits a {Sent} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Note that operator and allowance concepts are orthogonal: operators cannot call `transferFrom` (unless they have allowance), and accounts with allowance cannot call `operatorSend` (unless they are operators). Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC777.sol\":\"ERC777\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC777.sol\":{\"keccak256\":\"0x4d09a28262d6e88a38cf45b06e125a5d1dbeafe0e23f940bee72dcd724ac377a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de4e8c0091625662895560bad283b6ec3d8b5dbe0cd6d70c8175c1b0a2f42bfd\",\"dweb:/ipfs/QmVkd3EeTePWKCFFrCbhKXCZYGDouTFd2yXBrJWwcj2T18\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 722,
								"contract": "ERC777.sol:ERC777",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 724,
								"contract": "ERC777.sol:ERC777",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 726,
								"contract": "ERC777.sol:ERC777",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 728,
								"contract": "ERC777.sol:ERC777",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 741,
								"contract": "ERC777.sol:ERC777",
								"label": "_defaultOperatorsArray",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 745,
								"contract": "ERC777.sol:ERC777",
								"label": "_defaultOperators",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 751,
								"contract": "ERC777.sol:ERC777",
								"label": "_operators",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 757,
								"contract": "ERC777.sol:ERC777",
								"label": "_revokedDefaultOperators",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 763,
								"contract": "ERC777.sol:ERC777",
								"label": "_allowances",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1820Registry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "interfaceHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementer",
									"type": "address"
								}
							],
							"name": "InterfaceImplementerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "ManagerChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_interfaceHash",
									"type": "bytes32"
								}
							],
							"name": "getInterfaceImplementer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "implementsERC165Interface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "implementsERC165InterfaceNoCache",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "interfaceName",
									"type": "string"
								}
							],
							"name": "interfaceHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_interfaceHash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "implementer",
									"type": "address"
								}
							],
							"name": "setInterfaceImplementer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "setManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "updateERC165Cache",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getInterfaceImplementer(address,bytes32)": {
								"details": "Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address."
							},
							"getManager(address)": {
								"details": "Returns the manager for `account`. See {setManager}."
							},
							"implementsERC165Interface(address,bytes4)": {
								"params": {
									"account": "Address of the contract to check.",
									"interfaceId": "ERC165 interface to check."
								},
								"returns": {
									"_0": "True if `account` implements `interfaceId`, false otherwise."
								}
							},
							"implementsERC165InterfaceNoCache(address,bytes4)": {
								"params": {
									"account": "Address of the contract to check.",
									"interfaceId": "ERC165 interface to check."
								},
								"returns": {
									"_0": "True if `account` implements `interfaceId`, false otherwise."
								}
							},
							"interfaceHash(string)": {
								"details": "Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
							},
							"setInterfaceImplementer(address,bytes32,address)": {
								"details": "Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}."
							},
							"setManager(address,address)": {
								"details": "Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`."
							},
							"updateERC165Cache(address,bytes4)": {
								"params": {
									"account": "Address of the contract for which to update the cache.",
									"interfaceId": "ERC165 interface for which to update the cache."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getInterfaceImplementer(address,bytes32)": "aabbb8ca",
							"getManager(address)": "3d584063",
							"implementsERC165Interface(address,bytes4)": "f712f3e8",
							"implementsERC165InterfaceNoCache(address,bytes4)": "b7056765",
							"interfaceHash(string)": "65ba36c1",
							"setInterfaceImplementer(address,bytes32,address)": "29965a1d",
							"setManager(address,address)": "5df8122f",
							"updateERC165Cache(address,bytes4)": "a41e7d51"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceImplementerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"}],\"name\":\"getInterfaceImplementer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165Interface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165InterfaceNoCache\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"interfaceName\",\"type\":\"string\"}],\"name\":\"interfaceHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"setInterfaceImplementer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"updateERC165Cache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getInterfaceImplementer(address,bytes32)\":{\"details\":\"Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address.\"},\"getManager(address)\":{\"details\":\"Returns the manager for `account`. See {setManager}.\"},\"implementsERC165Interface(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"interfaceHash(string)\":{\"details\":\"Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\"},\"setInterfaceImplementer(address,bytes32,address)\":{\"details\":\"Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}.\"},\"setManager(address,address)\":{\"details\":\"Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`.\"},\"updateERC165Cache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract for which to update the cache.\",\"interfaceId\":\"ERC165 interface for which to update the cache.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"implementsERC165Interface(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address.\"},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not without using or updating the cache.\"},\"updateERC165Cache(address,bytes4)\":{\"notice\":\"Updates the cache with whether the contract implements an ERC165 interface or not.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC777.sol\":\"IERC1820Registry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC777.sol\":{\"keccak256\":\"0x4d09a28262d6e88a38cf45b06e125a5d1dbeafe0e23f940bee72dcd724ac377a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de4e8c0091625662895560bad283b6ec3d8b5dbe0cd6d70c8175c1b0a2f42bfd\",\"dweb:/ipfs/QmVkd3EeTePWKCFFrCbhKXCZYGDouTFd2yXBrJWwcj2T18\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"implementsERC165Interface(address,bytes4)": {
								"notice": "Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address."
							},
							"implementsERC165InterfaceNoCache(address,bytes4)": {
								"notice": "Checks whether a contract implements an ERC165 interface or not without using or updating the cache."
							},
							"updateERC165Cache(address,bytes4)": {
								"notice": "Updates the cache with whether the contract implements an ERC165 interface or not."
							}
						},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC777.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC777.sol\":{\"keccak256\":\"0x4d09a28262d6e88a38cf45b06e125a5d1dbeafe0e23f940bee72dcd724ac377a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de4e8c0091625662895560bad283b6ec3d8b5dbe0cd6d70c8175c1b0a2f42bfd\",\"dweb:/ipfs/QmVkd3EeTePWKCFFrCbhKXCZYGDouTFd2yXBrJWwcj2T18\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC777": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "AuthorizedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "RevokedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Sent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "authorizeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultOperators",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "granularity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "isOperatorFor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "revokeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "send",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"AuthorizedOperator(address,address)": {
								"details": "Emitted when `operator` is made operator for `tokenHolder`."
							},
							"Burned(address,address,uint256,bytes,bytes)": {
								"details": "Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event."
							},
							"Minted(address,address,uint256,bytes,bytes)": {
								"details": "Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event."
							},
							"RevokedOperator(address,address)": {
								"details": "Emitted when `operator` is revoked its operator status for `tokenHolder`."
							}
						},
						"kind": "dev",
						"methods": {
							"authorizeOperator(address)": {
								"details": "Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by an account (`owner`)."
							},
							"burn(uint256,bytes)": {
								"details": "Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens."
							},
							"defaultOperators()": {
								"details": "Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."
							},
							"granularity()": {
								"details": "Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1."
							},
							"isOperatorFor(address,address)": {
								"details": "Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"operatorBurn(address,uint256,bytes,bytes)": {
								"details": "Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`."
							},
							"operatorSend(address,address,uint256,bytes,bytes)": {
								"details": "Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."
							},
							"revokeOperator(address)": {
								"details": "Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address."
							},
							"send(address,uint256,bytes)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"authorizeOperator(address)": "959b8c3f",
							"balanceOf(address)": "70a08231",
							"burn(uint256,bytes)": "fe9d9303",
							"defaultOperators()": "06e48538",
							"granularity()": "556f0dc7",
							"isOperatorFor(address,address)": "d95b6371",
							"name()": "06fdde03",
							"operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
							"operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
							"revokeOperator(address)": "fad8b32a",
							"send(address,uint256,bytes)": "9bd9bbc6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AuthorizedOperator(address,address)\":{\"details\":\"Emitted when `operator` is made operator for `tokenHolder`.\"},\"Burned(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"Minted(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"RevokedOperator(address,address)\":{\"details\":\"Emitted when `operator` is revoked its operator status for `tokenHolder`.\"}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"granularity()\":{\"details\":\"Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1.\"},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address.\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC777.sol\":\"IERC777\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC777.sol\":{\"keccak256\":\"0x4d09a28262d6e88a38cf45b06e125a5d1dbeafe0e23f940bee72dcd724ac377a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de4e8c0091625662895560bad283b6ec3d8b5dbe0cd6d70c8175c1b0a2f42bfd\",\"dweb:/ipfs/QmVkd3EeTePWKCFFrCbhKXCZYGDouTFd2yXBrJWwcj2T18\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC777Recipient": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "tokensReceived",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"tokensReceived(address,address,address,uint256,bytes,bytes)": {
								"details": "Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"tokensReceived(address,address,address,uint256,bytes,bytes)": "0023de29"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"tokensReceived(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC777.sol\":\"IERC777Recipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC777.sol\":{\"keccak256\":\"0x4d09a28262d6e88a38cf45b06e125a5d1dbeafe0e23f940bee72dcd724ac377a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de4e8c0091625662895560bad283b6ec3d8b5dbe0cd6d70c8175c1b0a2f42bfd\",\"dweb:/ipfs/QmVkd3EeTePWKCFFrCbhKXCZYGDouTFd2yXBrJWwcj2T18\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC777Sender": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "tokensToSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"tokensToSend(address,address,address,uint256,bytes,bytes)": {
								"details": "Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"tokensToSend(address,address,address,uint256,bytes,bytes)": "75ab9782"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensToSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"tokensToSend(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC777.sol\":\"IERC777Sender\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC777.sol\":{\"keccak256\":\"0x4d09a28262d6e88a38cf45b06e125a5d1dbeafe0e23f940bee72dcd724ac377a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de4e8c0091625662895560bad283b6ec3d8b5dbe0cd6d70c8175c1b0a2f42bfd\",\"dweb:/ipfs/QmVkd3EeTePWKCFFrCbhKXCZYGDouTFd2yXBrJWwcj2T18\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ERC777.sol": {
				"ast": {
					"absolutePath": "ERC777.sol",
					"exportedSymbols": {
						"Address": [
							597
						],
						"Context": [
							616
						],
						"ERC777": [
							1784
						],
						"IERC1820Registry": [
							703
						],
						"IERC20": [
							270
						],
						"IERC777": [
							161
						],
						"IERC777Recipient": [
							178
						],
						"IERC777Sender": [
							195
						]
					},
					"id": 1785,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC777",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 161,
							"linearizedBaseContracts": [
								161
							],
							"name": "IERC777",
							"nameLocation": "72:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "87:203:0",
										"text": " @dev Emitted when `amount` tokens are created by `operator` and assigned to `to`.\n Note that some additional user `data` and `operatorData` can be logged in the event."
									},
									"eventSelector": "2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d",
									"id": 14,
									"name": "Minted",
									"nameLocation": "302:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "325:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "309:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "351:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "335:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "335:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "363:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "355:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "377:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "371:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 9,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "371:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "389:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "383:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 11,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "383:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:94:0"
									},
									"src": "296:107:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "411:191:0",
										"text": " @dev Emitted when `operator` destroys `amount` tokens from `account`.\n Note that some additional user `data` and `operatorData` can be logged in the event."
									},
									"eventSelector": "a78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a4098",
									"id": 27,
									"name": "Burned",
									"nameLocation": "614:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "637:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "621:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "663:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "647:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "677:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "669:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "691:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "685:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 22,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "685:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "703:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "697:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 24,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "697:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "620:96:0"
									},
									"src": "608:109:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "725:85:0",
										"text": " @dev Emitted when `operator` is made operator for `tokenHolder`."
									},
									"eventSelector": "f4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f9",
									"id": 34,
									"name": "AuthorizedOperator",
									"nameLocation": "822:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "841:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "883:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "867:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "840:55:0"
									},
									"src": "816:80:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "904:99:0",
										"text": " @dev Emitted when `operator` is revoked its operator status for `tokenHolder`."
									},
									"eventSelector": "50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa1",
									"id": 41,
									"name": "RevokedOperator",
									"nameLocation": "1015:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1047:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1031:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "1073:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1057:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1030:55:0"
									},
									"src": "1009:77:0"
								},
								{
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1094:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 47,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1165:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1169:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1195:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 44,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:0"
									},
									"scope": 161,
									"src": "1156:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "1218:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 53,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1338:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1344:2:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1370:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 50,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1370:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1369:15:0"
									},
									"scope": 161,
									"src": "1329:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1393:293:0",
										"text": " @dev Returns the smallest part of the token that is not divisible. This\n means all token operations (creation, movement and destruction) must have\n amounts that are a multiple of this number.\n For most token contracts, this value will equal 1."
									},
									"functionSelector": "556f0dc7",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "granularity",
									"nameLocation": "1701:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1712:2:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1738:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1737:9:0"
									},
									"scope": 161,
									"src": "1692:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1755:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 65,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1838:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1849:2:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1874:9:0"
									},
									"scope": 161,
									"src": "1829:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "1892:85:0",
										"text": " @dev Returns the amount of tokens owned by an account (`owner`)."
									},
									"functionSelector": "70a08231",
									"id": 73,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1992:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2010:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "2002:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2002:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2001:15:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "2040:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2040:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2039:9:0"
									},
									"scope": 161,
									"src": "1983:66:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "2057:600:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n If send or receive hooks are registered for the caller and `recipient`,\n the corresponding functions will be called with `data` and empty\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"functionSelector": "9bd9bbc6",
									"id": 83,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "2672:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2685:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "2677:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2704:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "2696:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2727:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "2712:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2712:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:56:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2741:0:0"
									},
									"scope": 161,
									"src": "2663:79:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2750:416:0",
										"text": " @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply.\n If a send hook is registered for the caller, the corresponding function\n will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - the caller must have at least `amount` tokens."
									},
									"functionSelector": "fe9d9303",
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3181:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3194:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3186:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3217:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3202:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 87,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3202:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3185:37:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:0"
									},
									"scope": 161,
									"src": "3172:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3240:255:0",
										"text": " @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."
									},
									"functionSelector": "d95b6371",
									"id": 101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOperatorFor",
									"nameLocation": "3510:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3532:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3524:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3524:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "3550:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3542:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3542:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3523:39:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3586:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 98,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3586:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3585:6:0"
									},
									"scope": 161,
									"src": "3501:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "3600:243:0",
										"text": " @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n Emits an {AuthorizedOperator} event.\n Requirements\n - `operator` cannot be calling address."
									},
									"functionSelector": "959b8c3f",
									"id": 107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "authorizeOperator",
									"nameLocation": "3858:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3884:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "3876:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3876:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3875:18:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3902:0:0"
									},
									"scope": 161,
									"src": "3849:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "3911:271:0",
										"text": " @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n Emits a {RevokedOperator} event.\n Requirements\n - `operator` cannot be calling address."
									},
									"functionSelector": "fad8b32a",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeOperator",
									"nameLocation": "4197:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4220:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "4212:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4211:18:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4238:0:0"
									},
									"scope": 161,
									"src": "4188:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "4247:345:0",
										"text": " @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."
									},
									"functionSelector": "06e48538",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "defaultOperators",
									"nameLocation": "4607:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:2:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4649:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 116,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4649:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 117,
													"nodeType": "ArrayTypeName",
													"src": "4649:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4648:18:0"
									},
									"scope": 161,
									"src": "4598:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "4675:732:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `data` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"functionSelector": "62ad1b83",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operatorSend",
									"nameLocation": "5422:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5453:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "5445:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5478:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "5470:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5470:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5506:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "5498:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5498:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5538:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "5523:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 128,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5523:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "5568:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "5553:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 130,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5553:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5434:153:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5596:0:0"
									},
									"scope": 161,
									"src": "5413:184:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "5605:546:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `data` and `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."
									},
									"functionSelector": "fc673c4f",
									"id": 146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operatorBurn",
									"nameLocation": "6166:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6187:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "6179:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6204:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "6196:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "6212:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 140,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6212:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "6248:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "6233:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6233:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6178:83:0"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6270:0:0"
									},
									"scope": 161,
									"src": "6157:114:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987",
									"id": 160,
									"name": "Sent",
									"nameLocation": "6285:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6316:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6300:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6300:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6351:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6335:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6335:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6382:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6366:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6366:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6403:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6395:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6395:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6426:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6420:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 155,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6420:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "6447:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6441:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6441:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6289:177:0"
									},
									"src": "6279:188:0"
								}
							],
							"scope": 1785,
							"src": "62:6408:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC777Recipient",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 178,
							"linearizedBaseContracts": [
								178
							],
							"name": "IERC777Recipient",
							"nameLocation": "6482:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "6506:483:0",
										"text": " @dev Called by an {IERC777} token contract whenever tokens are being\n moved or created into a registered account (`to`). The type of operation\n is conveyed by `from` being the zero address or not.\n This call occurs _after_ the token contract's state is updated, so\n {IERC777-balanceOf}, etc., can be used to query the post-operation state.\n This function may revert to prevent the operation from being executed."
									},
									"functionSelector": "0023de29",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nameLocation": "7004:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7037:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "7029:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7064:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "7056:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7056:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7087:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "7079:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7108:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "7100:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "7140:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "7125:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 171,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7125:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "7174:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "7159:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 173,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7159:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7018:175:0"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7202:0:0"
									},
									"scope": 178,
									"src": "6995:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1785,
							"src": "6472:734:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC777Sender",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 195,
							"linearizedBaseContracts": [
								195
							],
							"name": "IERC777Sender",
							"nameLocation": "7218:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "7239:487:0",
										"text": " @dev Called by an {IERC777} token contract whenever a registered holder's\n (`from`) tokens are about to be moved or destroyed. The type of operation\n is conveyed by `to` being the zero address or not.\n This call occurs _before_ the token contract's state is updated, so\n {IERC777-balanceOf}, etc., can be used to query the pre-operation state.\n This function may revert to prevent the operation from being executed."
									},
									"functionSelector": "75ab9782",
									"id": 194,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensToSend",
									"nameLocation": "7741:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7772:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "7764:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7799:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "7791:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7822:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "7814:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7814:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7843:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "7835:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "7875:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "7860:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 188,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7860:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "7909:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "7894:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 190,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7894:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7753:175:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7937:0:0"
									},
									"scope": 195,
									"src": "7732:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1785,
							"src": "7208:733:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 270,
							"linearizedBaseContracts": [
								270
							],
							"name": "IERC20",
							"nameLocation": "7953:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7967:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 204,
									"name": "Transfer",
									"nameLocation": "8142:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8167:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "8151:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8151:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8189:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "8173:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8173:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8201:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "8193:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8150:57:0"
									},
									"src": "8136:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "8216:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 213,
									"name": "Approval",
									"nameLocation": "8379:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8404:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "8388:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8388:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8427:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "8411:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8411:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8444:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "8436:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8387:63:0"
									},
									"src": "8373:78:0"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "8459:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "8542:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8553:2:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "8579:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8578:9:0"
									},
									"scope": 270,
									"src": "8533:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "8596:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8685:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8703:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "8695:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8694:17:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "8735:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8734:9:0"
									},
									"scope": 270,
									"src": "8676:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "8752:208:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8975:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8992:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "8984:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8984:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "8996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8996:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8983:28:0"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "9030:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9030:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9029:6:0"
									},
									"scope": 270,
									"src": "8966:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "9044:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "9329:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9347:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "9339:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9362:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "9354:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9354:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9338:32:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "9394:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9393:9:0"
									},
									"scope": 270,
									"src": "9320:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "9411:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "10081:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10097:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10089:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10089:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10114:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10106:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10106:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10088:33:0"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10140:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10140:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10139:6:0"
									},
									"scope": 270,
									"src": "10072:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10154:295:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "10464:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10485:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "10477:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10477:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10499:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "10491:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10491:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10511:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "10503:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10476:42:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "10537:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10537:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10536:6:0"
									},
									"scope": 270,
									"src": "10455:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1785,
							"src": "7943:2603:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 597,
							"linearizedBaseContracts": [
								597
							],
							"name": "Address",
							"nameLocation": "10556:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "11863:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 278,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "12092:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12100:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "12092:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12105:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12092:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12114:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12092:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 277,
												"id": 283,
												"nodeType": "Return",
												"src": "12085:30:0"
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "10571:1220:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "11806:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11825:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "11817:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11817:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11816:17:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "11857:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11857:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11856:6:0"
									},
									"scope": 597,
									"src": "11797:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "13128:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 296,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "13155:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$597",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$597",
																				"typeString": "library Address"
																			}
																		],
																		"id": 295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13147:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 294,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "13147:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13147:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13161:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "13147:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 299,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "13172:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13147:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13180:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13139:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13139:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "13139:73:0"
											},
											{
												"assignments": [
													305,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 305,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13231:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "13226:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 304,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13226:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 312,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13274:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 306,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "13244:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13254:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "13244:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 308,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "13266:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "13244:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13244:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13225:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 314,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "13296:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13305:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 313,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13288:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13288:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "13288:78:0"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "12131:920:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "13066:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "13092:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "13076:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13076:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13111:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "13103:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13075:43:0"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13128:0:0"
									},
									"scope": 597,
									"src": "13057:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "14225:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "14265:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "14273:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14279:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14282:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 329,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															377,
															421
														],
														"referencedDeclaration": 421,
														"src": "14243:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14243:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 328,
												"id": 335,
												"nodeType": "Return",
												"src": "14236:79:0"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "13382:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "14145:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14166:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "14158:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14187:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "14174:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 323,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14174:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14157:35:0"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "14211:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 326,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14211:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14210:14:0"
									},
									"scope": 597,
									"src": "14136:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "14704:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 350,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "14744:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 351,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "14752:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14758:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 353,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "14761:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 349,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															377,
															421
														],
														"referencedDeclaration": 421,
														"src": "14722:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14722:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 348,
												"id": 355,
												"nodeType": "Return",
												"src": "14715:59:0"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "14331:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "14562:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14593:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14585:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14585:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14623:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14610:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 341,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14610:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14652:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14638:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 343,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14638:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14574:97:0"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14690:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 346,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14690:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14689:14:0"
									},
									"scope": 597,
									"src": "14553:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "15270:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 370,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "15310:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 371,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "15318:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 372,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "15324:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15331:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 369,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															377,
															421
														],
														"referencedDeclaration": 421,
														"src": "15288:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15288:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 368,
												"id": 375,
												"nodeType": "Return",
												"src": "15281:94:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "14790:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "15166:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "15196:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "15188:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15188:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15217:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "15204:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15204:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15231:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "15223:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15187:50:0"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "15256:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15256:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15255:14:0"
									},
									"scope": 597,
									"src": "15157:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "15823:271:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 394,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "15850:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$597",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$597",
																				"typeString": "library Address"
																			}
																		],
																		"id": 393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "15842:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 392,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "15842:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15842:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15856:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "15842:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 397,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "15867:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15842:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15874:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 391,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15834:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15834:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "15834:81:0"
											},
											{
												"assignments": [
													403,
													405
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "15932:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 420,
														"src": "15927:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 402,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15927:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 405,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "15954:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 420,
														"src": "15941:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 404,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15941:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [
														{
															"id": 410,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "15994:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 406,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "15968:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15975:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "15968:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 408,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "15987:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "15968:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15968:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15926:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "16044:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "16052:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 416,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "16061:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 417,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "16073:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 413,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "16017:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16017:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 390,
												"id": 419,
												"nodeType": "Return",
												"src": "16010:76:0"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "15391:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "15648:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "15688:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "15680:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15680:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15718:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "15705:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15705:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15741:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "15733:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "15771:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "15757:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 385,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15757:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15669:121:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "15809:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 388,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15809:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15808:14:0"
									},
									"scope": 597,
									"src": "15639:455:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "16379:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 432,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "16416:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 433,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "16424:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16430:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 431,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															438,
															467
														],
														"referencedDeclaration": 467,
														"src": "16397:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16397:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 430,
												"id": 436,
												"nodeType": "Return",
												"src": "16390:80:0"
											}
										]
									},
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "16102:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "16288:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "16315:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "16307:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16307:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16336:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "16323:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 425,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16323:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16306:35:0"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "16365:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16365:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16364:14:0"
									},
									"scope": 597,
									"src": "16279:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "16832:171:0",
										"statements": [
											{
												"assignments": [
													451,
													453
												],
												"declarations": [
													{
														"constant": false,
														"id": 451,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16849:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "16844:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 450,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16844:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 453,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "16871:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "16858:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 452,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16858:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 458,
												"initialValue": {
													"arguments": [
														{
															"id": 456,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "16903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 454,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "16885:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16892:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "16885:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16885:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16843:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 460,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "16953:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "16961:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 462,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "16970:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 463,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "16982:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 459,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "16926:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16926:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 449,
												"id": 465,
												"nodeType": "Return",
												"src": "16919:76:0"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "16486:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "16679:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "16716:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "16708:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16708:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16746:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "16733:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 442,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16733:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "16775:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "16761:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16761:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16697:97:0"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "16818:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 447,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16818:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16817:14:0"
									},
									"scope": 597,
									"src": "16670:333:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "17287:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 478,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "17326:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "17334:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17340:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 477,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															484,
															513
														],
														"referencedDeclaration": 513,
														"src": "17305:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17305:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 476,
												"id": 482,
												"nodeType": "Return",
												"src": "17298:84:0"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "17011:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "17199:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "17228:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "17220:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17220:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17249:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "17236:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 471,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17236:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17219:35:0"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "17273:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 474,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17273:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17272:14:0"
									},
									"scope": 597,
									"src": "17190:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "17743:173:0",
										"statements": [
											{
												"assignments": [
													497,
													499
												],
												"declarations": [
													{
														"constant": false,
														"id": 497,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "17760:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 512,
														"src": "17755:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 496,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17755:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 499,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "17782:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 512,
														"src": "17769:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 498,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17769:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 504,
												"initialValue": {
													"arguments": [
														{
															"id": 502,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "17816:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 500,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "17796:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17803:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "17796:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17796:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17754:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 506,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "17866:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 507,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "17874:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 508,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "17883:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 509,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "17895:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 505,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "17839:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17839:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 495,
												"id": 511,
												"nodeType": "Return",
												"src": "17832:76:0"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "17398:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "17593:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "17632:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "17624:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17624:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17662:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "17649:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 488,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17649:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "17691:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "17677:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 490,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17677:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17613:97:0"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "17729:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17729:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17728:14:0"
									},
									"scope": 597,
									"src": "17584:332:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "18411:445:0",
										"statements": [
											{
												"condition": {
													"id": 527,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 518,
													"src": "18426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "18789:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 545,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "18812:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 546,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "18824:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 544,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "18804:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18804:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "18804:33:0"
														}
													]
												},
												"id": 550,
												"nodeType": "IfStatement",
												"src": "18422:427:0",
												"trueBody": {
													"id": 543,
													"nodeType": "Block",
													"src": "18435:348:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 528,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "18454:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "18465:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "18454:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18475:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "18454:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 540,
															"nodeType": "IfStatement",
															"src": "18450:290:0",
															"trueBody": {
																"id": 539,
																"nodeType": "Block",
																"src": "18478:262:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 534,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 516,
																							"src": "18683:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 533,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 285,
																						"src": "18672:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 535,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "18672:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 536,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "18692:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 532,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "18664:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18664:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 538,
																		"nodeType": "ExpressionStatement",
																		"src": "18664:60:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 541,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "18761:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 526,
															"id": 542,
															"nodeType": "Return",
															"src": "18754:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "17924:282:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "18221:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "18266:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "18258:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "18288:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "18283:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 517,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18283:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "18319:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "18306:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "18354:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "18340:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18340:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18247:126:0"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "18397:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18397:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18396:14:0"
									},
									"scope": 597,
									"src": "18212:644:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "19249:141:0",
										"statements": [
											{
												"condition": {
													"id": 564,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 555,
													"src": "19264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 573,
													"nodeType": "Block",
													"src": "19323:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 569,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "19346:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 570,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 559,
																		"src": "19358:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 568,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "19338:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19338:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 572,
															"nodeType": "ExpressionStatement",
															"src": "19338:33:0"
														}
													]
												},
												"id": 574,
												"nodeType": "IfStatement",
												"src": "19260:123:0",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "19273:44:0",
													"statements": [
														{
															"expression": {
																"id": 565,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "19295:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 563,
															"id": 566,
															"nodeType": "Return",
															"src": "19288:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "18864:215:0",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "19094:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "19126:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "19121:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 554,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19121:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "19157:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "19144:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19144:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "19192:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "19178:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 558,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "19178:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19110:101:0"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "19235:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19235:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19234:14:0"
									},
									"scope": 597,
									"src": "19085:305:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "19481:469:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 583,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "19559:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19570:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "19559:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19579:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19559:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "19896:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 580,
																		"src": "19918:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 589,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "19911:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19911:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "19911:20:0"
														}
													]
												},
												"id": 594,
												"nodeType": "IfStatement",
												"src": "19555:388:0",
												"trueBody": {
													"id": 588,
													"nodeType": "Block",
													"src": "19582:308:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "19743:136:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "19762:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "19791:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "19785:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19785:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "19766:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "19831:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "19835:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "19827:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19827:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "19848:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19820:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19820:44:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19820:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 578,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "19791:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 578,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "19835:10:0",
																	"valueSize": 1
																}
															],
															"id": 587,
															"nodeType": "InlineAssembly",
															"src": "19734:145:0"
														}
													]
												}
											}
										]
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "19407:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "19428:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "19415:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 577,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19415:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "19454:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "19440:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 579,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "19440:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19414:53:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19481:0:0"
									},
									"scope": 597,
									"src": "19398:552:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1785,
							"src": "10548:9405:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 616,
							"linearizedBaseContracts": [
								616
							],
							"name": "Context",
							"nameLocation": "19973:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "20050:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 602,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "20068:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "20072:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "20068:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 601,
												"id": 604,
												"nodeType": "Return",
												"src": "20061:17:0"
											}
										]
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "19997:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20007:2:0"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "20041:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20040:9:0"
									},
									"scope": 616,
									"src": "19988:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "20161:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 611,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "20179:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "20183:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "20179:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 610,
												"id": 613,
												"nodeType": "Return",
												"src": "20172:15:0"
											}
										]
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "20103:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20111:2:0"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "20145:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 608,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20145:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20144:16:0"
									},
									"scope": 616,
									"src": "20094:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1785,
							"src": "19955:243:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1820Registry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 703,
							"linearizedBaseContracts": [
								703
							],
							"name": "IERC1820Registry",
							"nameLocation": "20210:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "93baa6efbd2244243bfee6ce4cfdd1d04fc4c0e9a786abd3a41313bd352db153",
									"id": 624,
									"name": "InterfaceImplementerSet",
									"nameLocation": "20240:23:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20280:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "20264:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20264:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"indexed": true,
												"mutability": "mutable",
												"name": "interfaceHash",
												"nameLocation": "20305:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "20289:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 619,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementer",
												"nameLocation": "20336:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "20320:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20263:85:0"
									},
									"src": "20234:115:0"
								},
								{
									"anonymous": false,
									"eventSelector": "605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a4350",
									"id": 630,
									"name": "ManagerChanged",
									"nameLocation": "20363:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20394:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "20378:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"indexed": true,
												"mutability": "mutable",
												"name": "newManager",
												"nameLocation": "20419:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "20403:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20377:53:0"
									},
									"src": "20357:74:0"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "20439:457:0",
										"text": " @dev Sets `newManager` as the manager for `account`. A manager of an\n account is able to set interface implementers for it.\n By default, each account is its own manager. Passing a value of `0x0` in\n `newManager` will reset the manager to this initial state.\n Emits a {ManagerChanged} event.\n Requirements:\n - the caller must be the current manager for `account`."
									},
									"functionSelector": "5df8122f",
									"id": 638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setManager",
									"nameLocation": "20911:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20930:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "20922:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "newManager",
												"nameLocation": "20947:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "20939:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20921:37:0"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20967:0:0"
									},
									"scope": 703,
									"src": "20902:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "20976:94:0",
										"text": " @dev Returns the manager for `account`.\n See {setManager}."
									},
									"functionSelector": "3d584063",
									"id": 646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getManager",
									"nameLocation": "21085:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "21104:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "21096:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21095:17:0"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "21136:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21135:9:0"
									},
									"scope": 703,
									"src": "21076:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "21153:834:0",
										"text": " @dev Sets the `implementer` contract as ``account``'s implementer for\n `interfaceHash`.\n `account` being the zero address is an alias for the caller's address.\n The zero address can also be used in `implementer` to remove an old one.\n See {interfaceHash} to learn how these are created.\n Emits an {InterfaceImplementerSet} event.\n Requirements:\n - the caller must be the current manager for `account`.\n - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n end in 28 zeroes).\n - `implementer` must implement {IERC1820Implementer} and return true when\n queried for support, unless `implementer` is the caller. See\n {IERC1820Implementer-canImplementInterfaceForAddress}."
									},
									"functionSelector": "29965a1d",
									"id": 656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setInterfaceImplementer",
									"nameLocation": "22002:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22034:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "22026:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "_interfaceHash",
												"nameLocation": "22051:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "22043:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 650,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "implementer",
												"nameLocation": "22075:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "22067:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22067:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22025:62:0"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22096:0:0"
									},
									"scope": 703,
									"src": "21993:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "22105:390:0",
										"text": " @dev Returns the implementer of `interfaceHash` for `account`. If no such\n implementer is registered, returns the zero address.\n If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n zeroes), `account` will be queried for support of it.\n `account` being the zero address is an alias for the caller's address."
									},
									"functionSelector": "aabbb8ca",
									"id": 666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getInterfaceImplementer",
									"nameLocation": "22510:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22542:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "22534:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "_interfaceHash",
												"nameLocation": "22559:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "22551:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 660,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22533:41:0"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "22598:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22597:9:0"
									},
									"scope": 703,
									"src": "22501:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "22615:200:0",
										"text": " @dev Returns the interface hash for an `interfaceName`, as defined in the\n corresponding\n https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
									},
									"functionSelector": "65ba36c1",
									"id": 674,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "interfaceHash",
									"nameLocation": "22830:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "interfaceName",
												"nameLocation": "22860:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "22844:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 668,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "22844:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22843:31:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "22898:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 671,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22897:9:0"
									},
									"scope": 703,
									"src": "22821:86:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "22915:264:0",
										"text": " @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n @param account Address of the contract for which to update the cache.\n @param interfaceId ERC165 interface for which to update the cache."
									},
									"functionSelector": "a41e7d51",
									"id": 682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateERC165Cache",
									"nameLocation": "23194:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "23220:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "23212:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "23236:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "23229:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 678,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "23229:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23211:37:0"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23257:0:0"
									},
									"scope": 703,
									"src": "23185:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "23266:544:0",
										"text": " @notice Checks whether a contract implements an ERC165 interface or not.\n If the result is not cached a direct lookup on the contract address is performed.\n If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n {updateERC165Cache} with the contract address.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
									},
									"functionSelector": "f712f3e8",
									"id": 692,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementsERC165Interface",
									"nameLocation": "23825:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "23859:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "23851:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23851:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "23875:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "23868:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 686,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "23868:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23850:37:0"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "23911:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 689,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23911:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23910:6:0"
									},
									"scope": 703,
									"src": "23816:101:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "23925:317:0",
										"text": " @notice Checks whether a contract implements an ERC165 interface or not without using or updating the cache.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
									},
									"functionSelector": "b7056765",
									"id": 702,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementsERC165InterfaceNoCache",
									"nameLocation": "24257:32:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "24298:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "24290:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24290:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "24314:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "24307:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 696,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "24307:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24289:37:0"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "24350:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24350:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24349:6:0"
									},
									"scope": 703,
									"src": "24248:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1785,
							"src": "20200:4159:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 704,
										"name": "Context",
										"nameLocations": [
											"24382:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "24382:7:0"
									},
									"id": 705,
									"nodeType": "InheritanceSpecifier",
									"src": "24382:7:0"
								},
								{
									"baseName": {
										"id": 706,
										"name": "IERC777",
										"nameLocations": [
											"24391:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 161,
										"src": "24391:7:0"
									},
									"id": 707,
									"nodeType": "InheritanceSpecifier",
									"src": "24391:7:0"
								},
								{
									"baseName": {
										"id": 708,
										"name": "IERC20",
										"nameLocations": [
											"24400:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 270,
										"src": "24400:6:0"
									},
									"id": 709,
									"nodeType": "InheritanceSpecifier",
									"src": "24400:6:0"
								}
							],
							"canonicalName": "ERC777",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1784,
							"linearizedBaseContracts": [
								1784,
								270,
								161,
								616
							],
							"name": "ERC777",
							"nameLocation": "24372:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 712,
									"libraryName": {
										"id": 710,
										"name": "Address",
										"nameLocations": [
											"24420:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 597,
										"src": "24420:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "24414:26:0",
									"typeName": {
										"id": 711,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "24432:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": true,
									"id": 718,
									"mutability": "constant",
									"name": "_ERC1820_REGISTRY",
									"nameLocation": "24483:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1784,
									"src": "24448:115:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC1820Registry_$703",
										"typeString": "contract IERC1820Registry"
									},
									"typeName": {
										"id": 714,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 713,
											"name": "IERC1820Registry",
											"nameLocations": [
												"24448:16:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 703,
											"src": "24448:16:0"
										},
										"referencedDeclaration": 703,
										"src": "24448:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1820Registry_$703",
											"typeString": "contract IERC1820Registry"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307831383230613442373631384264453731446365386364633733614142364339353930356661443234",
												"id": 716,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "24520:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 715,
											"name": "IERC1820Registry",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 703,
											"src": "24503:16:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC1820Registry_$703_$",
												"typeString": "type(contract IERC1820Registry)"
											}
										},
										"id": 717,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "24503:60:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1820Registry_$703",
											"typeString": "contract IERC1820Registry"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 722,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "24608:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1784,
									"src": "24572:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 721,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 719,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24580:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "24572:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 720,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24591:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 724,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "24642:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1784,
									"src": "24626:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 723,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24626:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 726,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "24678:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1784,
									"src": "24663:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 725,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "24663:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 728,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "24705:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1784,
									"src": "24690:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 727,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "24690:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 733,
									"mutability": "constant",
									"name": "_TOKENS_SENDER_INTERFACE_HASH",
									"nameLocation": "24746:29:0",
									"nodeType": "VariableDeclaration",
									"scope": 1784,
									"src": "24721:88:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 729,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "24721:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "455243373737546f6b656e7353656e646572",
												"id": 731,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "24788:20:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
													"typeString": "literal_string \"ERC777TokensSender\""
												},
												"value": "ERC777TokensSender"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
													"typeString": "literal_string \"ERC777TokensSender\""
												}
											],
											"id": 730,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "24778:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 732,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "24778:31:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 738,
									"mutability": "constant",
									"name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
									"nameLocation": "24841:32:0",
									"nodeType": "VariableDeclaration",
									"scope": 1784,
									"src": "24816:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 734,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "24816:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "455243373737546f6b656e73526563697069656e74",
												"id": 736,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "24886:23:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
													"typeString": "literal_string \"ERC777TokensRecipient\""
												},
												"value": "ERC777TokensRecipient"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
													"typeString": "literal_string \"ERC777TokensRecipient\""
												}
											],
											"id": 735,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "24876:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 737,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "24876:34:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 741,
									"mutability": "mutable",
									"name": "_defaultOperatorsArray",
									"nameLocation": "25030:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 1784,
									"src": "25012:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 739,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "25012:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 740,
										"nodeType": "ArrayTypeName",
										"src": "25012:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 745,
									"mutability": "mutable",
									"name": "_defaultOperators",
									"nameLocation": "25182:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1784,
									"src": "25149:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 744,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 742,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "25157:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "25149:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 743,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "25168:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 751,
									"mutability": "mutable",
									"name": "_operators",
									"nameLocation": "25345:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1784,
									"src": "25292:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 750,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 746,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "25300:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "25292:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 749,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 747,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "25319:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "25311:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 748,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "25330:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 757,
									"mutability": "mutable",
									"name": "_revokedDefaultOperators",
									"nameLocation": "25415:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 1784,
									"src": "25362:77:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 756,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 752,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "25370:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "25362:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 755,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 753,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "25389:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "25381:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 754,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "25400:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 763,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "25529:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1784,
									"src": "25473:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 762,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 758,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "25481:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "25473:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 761,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 759,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "25500:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "25492:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 760,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "25511:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "25714:514:0",
										"statements": [
											{
												"expression": {
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 774,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "25725:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 775,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "25733:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "25725:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "25725:13:0"
											},
											{
												"expression": {
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 778,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "25749:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 779,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "25759:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "25749:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "25749:17:0"
											},
											{
												"expression": {
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 782,
														"name": "_defaultOperatorsArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "25779:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 783,
														"name": "defaultOperators_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "25804:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "25779:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "25779:42:0"
											},
											{
												"body": {
													"id": 805,
													"nodeType": "Block",
													"src": "25887:73:0",
													"statements": [
														{
															"expression": {
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 797,
																		"name": "_defaultOperators",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 745,
																		"src": "25902:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 801,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 798,
																			"name": "defaultOperators_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 771,
																			"src": "25920:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 800,
																		"indexExpression": {
																			"id": 799,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 787,
																			"src": "25938:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "25920:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "25902:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25944:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "25902:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 804,
															"nodeType": "ExpressionStatement",
															"src": "25902:46:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 790,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "25852:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 791,
															"name": "defaultOperators_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "25856:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "25874:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "25856:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25852:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 806,
												"initializationExpression": {
													"assignments": [
														787
													],
													"declarations": [
														{
															"constant": false,
															"id": 787,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "25845:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 806,
															"src": "25837:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 786,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "25837:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 789,
													"initialValue": {
														"hexValue": "30",
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25849:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "25837:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "25882:3:0",
														"subExpression": {
															"id": 794,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "25882:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 796,
													"nodeType": "ExpressionStatement",
													"src": "25882:3:0"
												},
												"nodeType": "ForStatement",
												"src": "25832:128:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 812,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "26054:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC777_$1784",
																		"typeString": "contract ERC777"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC777_$1784",
																		"typeString": "contract ERC777"
																	}
																],
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26046:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 810,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26046:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26046:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "455243373737546f6b656e",
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26071:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
																		"typeString": "literal_string \"ERC777Token\""
																	},
																	"value": "ERC777Token"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
																		"typeString": "literal_string \"ERC777Token\""
																	}
																],
																"id": 814,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "26061:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26061:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 819,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "26095:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC777_$1784",
																		"typeString": "contract ERC777"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC777_$1784",
																		"typeString": "contract ERC777"
																	}
																],
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26087:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 817,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26087:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26087:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 807,
															"name": "_ERC1820_REGISTRY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "26004:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1820Registry_$703",
																"typeString": "contract IERC1820Registry"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26022:23:0",
														"memberName": "setInterfaceImplementer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 656,
														"src": "26004:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (address,bytes32,address) external"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26004:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "26004:97:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 828,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "26162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC777_$1784",
																		"typeString": "contract ERC777"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC777_$1784",
																		"typeString": "contract ERC777"
																	}
																],
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26154:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 826,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26154:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26154:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "4552433230546f6b656e",
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26179:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
																		"typeString": "literal_string \"ERC20Token\""
																	},
																	"value": "ERC20Token"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
																		"typeString": "literal_string \"ERC20Token\""
																	}
																],
																"id": 830,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "26169:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26169:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 835,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "26202:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC777_$1784",
																		"typeString": "contract ERC777"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC777_$1784",
																		"typeString": "contract ERC777"
																	}
																],
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26194:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 833,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26194:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26194:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 823,
															"name": "_ERC1820_REGISTRY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "26112:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1820Registry_$703",
																"typeString": "contract IERC1820Registry"
															}
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26130:23:0",
														"memberName": "setInterfaceImplementer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 656,
														"src": "26112:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (address,bytes32,address) external"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26112:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "26112:96:0"
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "25549:67:0",
										"text": " @dev `defaultOperators` may be an empty array."
									},
									"id": 840,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "25648:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "25634:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 765,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25634:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "25669:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "25655:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 767,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25655:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "defaultOperators_",
												"nameLocation": "25695:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "25678:34:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 769,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "25678:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 770,
													"nodeType": "ArrayTypeName",
													"src": "25678:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25633:80:0"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25714:0:0"
									},
									"scope": 1784,
									"src": "25622:606:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										47
									],
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "26356:31:0",
										"statements": [
											{
												"expression": {
													"id": 847,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 726,
													"src": "26374:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 846,
												"id": 848,
												"nodeType": "Return",
												"src": "26367:12:0"
											}
										]
									},
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "26236:45:0",
										"text": " @dev See {IERC777-name}."
									},
									"functionSelector": "06fdde03",
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "26296:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 843,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26323:8:0"
									},
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26300:2:0"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "26341:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 844,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26341:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26340:15:0"
									},
									"scope": 1784,
									"src": "26287:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										53
									],
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "26519:33:0",
										"statements": [
											{
												"expression": {
													"id": 857,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 728,
													"src": "26537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 856,
												"id": 858,
												"nodeType": "Return",
												"src": "26530:14:0"
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "26395:47:0",
										"text": " @dev See {IERC777-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "26457:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 853,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26486:8:0"
									},
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26463:2:0"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "26504:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 854,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26504:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26503:15:0"
									},
									"scope": 1784,
									"src": "26448:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "26800:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26818:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 865,
												"id": 867,
												"nodeType": "Return",
												"src": "26811:9:0"
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "26560:178:0",
										"text": " @dev See {ERC20-decimals}.\n Always returns 18, as per the\n [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."
									},
									"functionSelector": "313ce567",
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "26753:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26761:2:0"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "26793:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 863,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "26793:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26792:7:0"
									},
									"scope": 1784,
									"src": "26744:84:0",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										59
									],
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "27020:27:0",
										"statements": [
											{
												"expression": {
													"hexValue": "31",
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "27038:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"functionReturnParameters": 875,
												"id": 877,
												"nodeType": "Return",
												"src": "27031:8:0"
											}
										]
									},
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "26836:108:0",
										"text": " @dev See {IERC777-granularity}.\n This implementation always returns `1`."
									},
									"functionSelector": "556f0dc7",
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "granularity",
									"nameLocation": "26959:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 872,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26993:8:0"
									},
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26970:2:0"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "27011:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27010:9:0"
									},
									"scope": 1784,
									"src": "26950:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										65,
										219
									],
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "27200:38:0",
										"statements": [
											{
												"expression": {
													"id": 888,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 724,
													"src": "27218:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 887,
												"id": 889,
												"nodeType": "Return",
												"src": "27211:19:0"
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "27055:52:0",
										"text": " @dev See {IERC777-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "27122:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 884,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 882,
												"name": "IERC20",
												"nameLocations": [
													"27165:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 270,
												"src": "27165:6:0"
											},
											{
												"id": 883,
												"name": "IERC777",
												"nameLocations": [
													"27173:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 161,
												"src": "27173:7:0"
											}
										],
										"src": "27156:25:0"
									},
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27133:2:0"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "27191:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27190:9:0"
									},
									"scope": 1784,
									"src": "27113:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										73,
										227
									],
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "27447:48:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 902,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "27465:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 904,
													"indexExpression": {
														"id": 903,
														"name": "tokenHolder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "27475:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "27465:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 901,
												"id": 905,
												"nodeType": "Return",
												"src": "27458:29:0"
											}
										]
									},
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "27246:91:0",
										"text": " @dev Returns the amount of tokens owned by an account (`tokenHolder`)."
									},
									"functionSelector": "70a08231",
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "27352:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 898,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 896,
												"name": "IERC20",
												"nameLocations": [
													"27412:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 270,
												"src": "27412:6:0"
											},
											{
												"id": 897,
												"name": "IERC777",
												"nameLocations": [
													"27420:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 161,
												"src": "27420:7:0"
											}
										],
										"src": "27403:25:0"
									},
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "27370:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "27362:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27362:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27361:21:0"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "27438:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27437:9:0"
									},
									"scope": 1784,
									"src": "27343:152:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										83
									],
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "27724:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 919,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "27741:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27741:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 921,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "27755:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 922,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "27766:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 923,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "27774:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "",
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27780:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "74727565",
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27784:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 918,
														"name": "_send",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "27735:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27735:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "27735:54:0"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "27503:123:0",
										"text": " @dev See {IERC777-send}.\n Also emits a {IERC20-Transfer} event for ERC20 compatibility."
									},
									"functionSelector": "9bd9bbc6",
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "27641:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 916,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "27715:8:0"
									},
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "27654:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "27646:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "27673:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "27665:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27665:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "27694:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "27681:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 913,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27681:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27645:54:0"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27724:0:0"
									},
									"scope": 1784,
									"src": "27632:165:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										237
									],
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "28130:94:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 941,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "28147:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28147:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 943,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "28161:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "28172:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28180:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "",
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28184:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "66616c7365",
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28188:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 940,
														"name": "_send",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "28141:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28141:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "28141:53:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "28212:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 939,
												"id": 951,
												"nodeType": "Return",
												"src": "28205:11:0"
											}
										]
									},
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "27805:227:0",
										"text": " @dev See {IERC20-transfer}.\n Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\n interface if it is a contract.\n Also emits a {Sent} event."
									},
									"functionSelector": "a9059cbb",
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "28047:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 936,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "28106:8:0"
									},
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "28064:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "28056:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28056:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "28083:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "28075:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28055:35:0"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "28124:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 937,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28124:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28123:6:0"
									},
									"scope": 1784,
									"src": "28038:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										91
									],
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "28434:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 963,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "28451:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28451:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 965,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "28465:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 966,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "28473:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "",
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28479:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 962,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1513,
														"src": "28445:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28445:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 969,
												"nodeType": "ExpressionStatement",
												"src": "28445:37:0"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "28232:123:0",
										"text": " @dev See {IERC777-burn}.\n Also emits a {IERC20-Transfer} event for ERC20 compatibility."
									},
									"functionSelector": "fe9d9303",
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "28370:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 960,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "28425:8:0"
									},
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "28383:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "28375:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "28404:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "28391:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 957,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28391:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28374:35:0"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28434:0:0"
									},
									"scope": 1784,
									"src": "28361:129:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										101
									],
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "28664:210:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 982,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "28695:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 983,
																"name": "tokenHolder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "28707:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "28695:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 985,
																			"name": "_defaultOperators",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 745,
																			"src": "28736:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 987,
																		"indexExpression": {
																			"id": 986,
																			"name": "operator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 974,
																			"src": "28754:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "28736:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "28767:48:0",
																		"subExpression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 988,
																					"name": "_revokedDefaultOperators",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "28768:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																						"typeString": "mapping(address => mapping(address => bool))"
																					}
																				},
																				"id": 990,
																				"indexExpression": {
																					"id": 989,
																					"name": "tokenHolder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 976,
																					"src": "28793:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "28768:37:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 992,
																			"indexExpression": {
																				"id": 991,
																				"name": "operator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 974,
																				"src": "28806:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "28768:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "28736:79:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 995,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "28735:81:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "28695:121:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 997,
																"name": "_operators",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 751,
																"src": "28833:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 999,
															"indexExpression": {
																"id": 998,
																"name": "tokenHolder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "28844:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "28833:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1001,
														"indexExpression": {
															"id": 1000,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "28857:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "28833:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "28695:171:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 981,
												"id": 1003,
												"nodeType": "Return",
												"src": "28675:191:0"
											}
										]
									},
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "28498:54:0",
										"text": " @dev See {IERC777-isOperatorFor}."
									},
									"functionSelector": "d95b6371",
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOperatorFor",
									"nameLocation": "28567:13:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 978,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "28640:8:0"
									},
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "28589:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "28581:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "28607:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "28599:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28580:39:0"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "28658:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 979,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28658:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28657:6:0"
									},
									"scope": 1784,
									"src": "28558:316:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										107
									],
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "29015:353:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1013,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "29034:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29034:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1015,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "29050:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "29034:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a20617574686f72697a696e672073656c66206173206f70657261746f72",
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29060:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c",
																"typeString": "literal_string \"ERC777: authorizing self as operator\""
															},
															"value": "ERC777: authorizing self as operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c",
																"typeString": "literal_string \"ERC777: authorizing self as operator\""
															}
														],
														"id": 1012,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29026:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29026:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "29026:73:0"
											},
											{
												"condition": {
													"baseExpression": {
														"id": 1020,
														"name": "_defaultOperators",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "29116:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1022,
													"indexExpression": {
														"id": 1021,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "29134:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29116:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1041,
													"nodeType": "Block",
													"src": "29233:68:0",
													"statements": [
														{
															"expression": {
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1032,
																			"name": "_operators",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 751,
																			"src": "29248:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 1036,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1033,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 606,
																				"src": "29259:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "29259:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "29248:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1037,
																	"indexExpression": {
																		"id": 1035,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1008,
																		"src": "29273:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "29248:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29285:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "29248:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1040,
															"nodeType": "ExpressionStatement",
															"src": "29248:41:0"
														}
													]
												},
												"id": 1042,
												"nodeType": "IfStatement",
												"src": "29112:189:0",
												"trueBody": {
													"id": 1031,
													"nodeType": "Block",
													"src": "29145:82:0",
													"statements": [
														{
															"expression": {
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "29160:55:0",
																"subExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1023,
																			"name": "_revokedDefaultOperators",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 757,
																			"src": "29167:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 1026,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1024,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 606,
																				"src": "29192:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "29192:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "29167:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1028,
																	"indexExpression": {
																		"id": 1027,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1008,
																		"src": "29206:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "29167:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1030,
															"nodeType": "ExpressionStatement",
															"src": "29160:55:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1044,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "29337:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1045,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "29347:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29347:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1043,
														"name": "AuthorizedOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "29318:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29318:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1048,
												"nodeType": "EmitStatement",
												"src": "29313:47:0"
											}
										]
									},
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "28882:58:0",
										"text": " @dev See {IERC777-authorizeOperator}."
									},
									"functionSelector": "959b8c3f",
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "authorizeOperator",
									"nameLocation": "28955:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1010,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "29006:8:0"
									},
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "28981:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "28973:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28972:18:0"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29015:0:0"
									},
									"scope": 1784,
									"src": "28946:422:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										113
									],
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "29503:347:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1058,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "29522:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1059,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "29534:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29534:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "29522:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a207265766f6b696e672073656c66206173206f70657261746f72",
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29548:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5",
																"typeString": "literal_string \"ERC777: revoking self as operator\""
															},
															"value": "ERC777: revoking self as operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5",
																"typeString": "literal_string \"ERC777: revoking self as operator\""
															}
														],
														"id": 1057,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29514:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29514:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "29514:70:0"
											},
											{
												"condition": {
													"baseExpression": {
														"id": 1065,
														"name": "_defaultOperators",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "29601:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1067,
													"indexExpression": {
														"id": 1066,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "29619:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29601:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1086,
													"nodeType": "Block",
													"src": "29718:68:0",
													"statements": [
														{
															"expression": {
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "29733:41:0",
																"subExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1078,
																			"name": "_operators",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 751,
																			"src": "29740:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 1081,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1079,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 606,
																				"src": "29751:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "29751:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "29740:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1083,
																	"indexExpression": {
																		"id": 1082,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "29765:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "29740:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1085,
															"nodeType": "ExpressionStatement",
															"src": "29733:41:0"
														}
													]
												},
												"id": 1087,
												"nodeType": "IfStatement",
												"src": "29597:189:0",
												"trueBody": {
													"id": 1077,
													"nodeType": "Block",
													"src": "29630:82:0",
													"statements": [
														{
															"expression": {
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1068,
																			"name": "_revokedDefaultOperators",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 757,
																			"src": "29645:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 1072,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1069,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 606,
																				"src": "29670:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "29670:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "29645:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1073,
																	"indexExpression": {
																		"id": 1071,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "29684:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "29645:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29696:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "29645:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1076,
															"nodeType": "ExpressionStatement",
															"src": "29645:55:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1089,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "29819:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1090,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "29829:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29829:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1088,
														"name": "RevokedOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "29803:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29803:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "EmitStatement",
												"src": "29798:44:0"
											}
										]
									},
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "29376:55:0",
										"text": " @dev See {IERC777-revokeOperator}."
									},
									"functionSelector": "fad8b32a",
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeOperator",
									"nameLocation": "29446:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1055,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "29494:8:0"
									},
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "29469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "29461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29460:18:0"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29503:0:0"
									},
									"scope": 1784,
									"src": "29437:413:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										120
									],
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "30005:48:0",
										"statements": [
											{
												"expression": {
													"id": 1103,
													"name": "_defaultOperatorsArray",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 741,
													"src": "30023:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1102,
												"id": 1104,
												"nodeType": "Return",
												"src": "30016:29:0"
											}
										]
									},
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "29858:57:0",
										"text": " @dev See {IERC777-defaultOperators}."
									},
									"functionSelector": "06e48538",
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "defaultOperators",
									"nameLocation": "29930:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1098,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "29969:8:0"
									},
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29946:2:0"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "29987:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1099,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "29987:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1100,
													"nodeType": "ArrayTypeName",
													"src": "29987:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29986:18:0"
									},
									"scope": 1784,
									"src": "29921:132:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										134
									],
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "30374:180:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1123,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 606,
																		"src": "30407:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30407:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1125,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "30421:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1122,
																"name": "isOperatorFor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1005,
																"src": "30393:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30393:35:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f7220666f7220686f6c646572",
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30430:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
																"typeString": "literal_string \"ERC777: caller is not an operator for holder\""
															},
															"value": "ERC777: caller is not an operator for holder"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
																"typeString": "literal_string \"ERC777: caller is not an operator for holder\""
															}
														],
														"id": 1121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30385:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30385:92:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "30385:92:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1131,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "30494:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1132,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "30502:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1133,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "30513:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1134,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "30521:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1135,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "30527:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1130,
														"name": "_send",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "30488:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30488:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "30488:58:0"
											}
										]
									},
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "30061:112:0",
										"text": " @dev See {IERC777-operatorSend}.\n Emits {Sent} and {IERC20-Transfer} events."
									},
									"functionSelector": "62ad1b83",
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "operatorSend",
									"nameLocation": "30188:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1119,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "30365:8:0"
									},
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "30219:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "30211:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "30244:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "30236:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30272:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "30264:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "30302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "30289:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "30289:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "30330:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "30317:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "30317:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30200:149:0"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30374:0:0"
									},
									"scope": 1784,
									"src": "30179:375:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										146
									],
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "30850:165:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1155,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 606,
																		"src": "30883:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30883:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1157,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1143,
																	"src": "30897:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1154,
																"name": "isOperatorFor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1005,
																"src": "30869:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30869:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f7220666f7220686f6c646572",
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30907:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
																"typeString": "literal_string \"ERC777: caller is not an operator for holder\""
															},
															"value": "ERC777: caller is not an operator for holder"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
																"typeString": "literal_string \"ERC777: caller is not an operator for holder\""
															}
														],
														"id": 1153,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30861:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30861:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1161,
												"nodeType": "ExpressionStatement",
												"src": "30861:93:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1163,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "30971:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1164,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "30980:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1165,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "30988:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1166,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "30994:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1162,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1513,
														"src": "30965:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30965:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "30965:42:0"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "30562:114:0",
										"text": " @dev See {IERC777-operatorBurn}.\n Emits {Burned} and {IERC20-Transfer} events."
									},
									"functionSelector": "fc673c4f",
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "operatorBurn",
									"nameLocation": "30691:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1151,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "30841:8:0"
									},
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "30722:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "30714:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30714:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30748:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "30740:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "30778:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "30765:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1146,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "30765:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "30806:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "30793:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "30793:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30703:122:0"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30850:0:0"
									},
									"scope": 1784,
									"src": "30682:333:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										247
									],
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "31362:54:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1181,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "31380:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1183,
														"indexExpression": {
															"id": 1182,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "31392:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "31380:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1185,
													"indexExpression": {
														"id": 1184,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "31400:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "31380:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1180,
												"id": 1186,
												"nodeType": "Return",
												"src": "31373:35:0"
											}
										]
									},
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "31023:234:0",
										"text": " @dev See {IERC20-allowance}.\n Note that operator and allowance concepts are orthogonal: operators may\n not have allowance, and accounts with allowance may not be operators\n themselves."
									},
									"functionSelector": "dd62ed3e",
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "31272:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1177,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "31335:8:0"
									},
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "31290:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "31282:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31282:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "31306:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "31298:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31281:33:0"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "31353:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31352:9:0"
									},
									"scope": 1784,
									"src": "31263:153:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										257
									],
									"body": {
										"id": 1212,
										"nodeType": "Block",
										"src": "31821:113:0",
										"statements": [
											{
												"assignments": [
													1200
												],
												"declarations": [
													{
														"constant": false,
														"id": 1200,
														"mutability": "mutable",
														"name": "holder",
														"nameLocation": "31840:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1212,
														"src": "31832:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1199,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "31832:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1203,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1201,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "31849:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31849:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31832:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1205,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "31881:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1206,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "31889:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1207,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "31898:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1204,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1624,
														"src": "31872:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31872:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "31872:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "31922:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1198,
												"id": 1211,
												"nodeType": "Return",
												"src": "31915:11:0"
											}
										]
									},
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "31424:303:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Note that accounts cannot have allowance issued by their operators."
									},
									"functionSelector": "095ea7b3",
									"id": 1213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "31742:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1195,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "31797:8:0"
									},
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "31758:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "31750:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31750:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31775:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "31767:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31749:32:0"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "31815:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31815:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31814:6:0"
									},
									"scope": 1784,
									"src": "31733:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										269
									],
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "32542:180:0",
										"statements": [
											{
												"assignments": [
													1227
												],
												"declarations": [
													{
														"constant": false,
														"id": 1227,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "32561:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "32553:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1226,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "32553:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1230,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1228,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "32571:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32571:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32553:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1232,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "32610:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1233,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "32618:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1234,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "32627:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1231,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1770,
														"src": "32594:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32594:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "32594:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1238,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "32651:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1239,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "32659:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1240,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "32670:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32678:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "",
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32682:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "66616c7365",
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32686:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1237,
														"name": "_send",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "32645:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32645:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "32645:47:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "32710:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1225,
												"id": 1247,
												"nodeType": "Return",
												"src": "32703:11:0"
											}
										]
									},
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "31942:482:0",
										"text": " @dev See {IERC20-transferFrom}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Note that operator and allowance concepts are orthogonal: operators cannot\n call `transferFrom` (unless they have allowance), and accounts with\n allowance cannot call `operatorSend` (unless they are operators).\n Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."
									},
									"functionSelector": "23b872dd",
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "32439:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1222,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32518:8:0"
									},
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "32460:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "32452:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "32476:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "32468:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "32495:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "32487:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32451:51:0"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "32536:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32536:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32535:6:0"
									},
									"scope": 1784,
									"src": "32430:292:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "33472:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1262,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "33489:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1263,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "33498:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1264,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "33506:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1265,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "33516:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33530:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1261,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1270,
															1350
														],
														"referencedDeclaration": 1350,
														"src": "33483:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33483:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "33483:52:0"
											}
										]
									},
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "32730:621:0",
										"text": " @dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n If a send hook is registered for `account`, the corresponding function\n will be called with the caller address as the `operator` and with\n `userData` and `operatorData`.\n See {IERC777Sender} and {IERC777Recipient}.\n Emits {Minted} and {IERC20-Transfer} events.\n Requirements\n - `account` cannot be the zero address.\n - if `account` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "33366:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "33380:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "33372:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33372:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "33397:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "33389:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "33418:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "33405:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "33405:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "33441:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "33428:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1257,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "33428:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33371:83:0"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33472:0:0"
									},
									"scope": 1784,
									"src": "33357:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "34378:554:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1285,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "34397:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34416:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "34408:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1286,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "34408:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34408:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "34397:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34420:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080",
																"typeString": "literal_string \"ERC777: mint to the zero address\""
															},
															"value": "ERC777: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080",
																"typeString": "literal_string \"ERC777: mint to the zero address\""
															}
														],
														"id": 1284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34389:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34389:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "34389:66:0"
											},
											{
												"assignments": [
													1295
												],
												"declarations": [
													{
														"constant": false,
														"id": 1295,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "34476:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1349,
														"src": "34468:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1294,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34468:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1298,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1296,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "34487:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34487:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34468:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1300,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "34533:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34551:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34543:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1301,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34543:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34543:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1305,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "34555:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1306,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "34564:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1299,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "34512:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34512:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "34512:59:0"
											},
											{
												"expression": {
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1309,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "34619:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1310,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "34635:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34619:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1312,
												"nodeType": "ExpressionStatement",
												"src": "34619:22:0"
											},
											{
												"expression": {
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1313,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "34652:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1315,
														"indexExpression": {
															"id": 1314,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "34662:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "34652:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1316,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "34674:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34652:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1318,
												"nodeType": "ExpressionStatement",
												"src": "34652:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1320,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "34713:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34731:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34723:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1321,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34723:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34723:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1325,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "34735:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1326,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "34744:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1327,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "34752:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1328,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "34762:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1329,
															"name": "requireReceptionAck",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "34776:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1319,
														"name": "_callTokensReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "34693:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34693:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1331,
												"nodeType": "ExpressionStatement",
												"src": "34693:103:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1333,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "34821:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1334,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "34831:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1335,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "34840:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1336,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "34848:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1337,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "34858:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1332,
														"name": "Minted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "34814:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34814:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1339,
												"nodeType": "EmitStatement",
												"src": "34809:62:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34904:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34896:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1341,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34896:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34896:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1345,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "34908:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1346,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "34917:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1340,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "34887:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34887:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1348,
												"nodeType": "EmitStatement",
												"src": "34882:42:0"
											}
										]
									},
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "33551:628:0",
										"text": " @dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n If `requireReceptionAck` is set to true, and if a send hook is\n registered for `account`, the corresponding function will be called with\n `operator`, `data` and `operatorData`.\n See {IERC777Sender} and {IERC777Recipient}.\n Emits {Minted} and {IERC20-Transfer} events.\n Requirements\n - `account` cannot be the zero address.\n - if `account` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"id": 1350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "34194:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "34218:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "34210:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "34244:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "34236:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "34274:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "34261:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1276,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34261:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "34306:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "34293:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1278,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34293:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "requireReceptionAck",
												"nameLocation": "34334:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "34329:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1280,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34329:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34199:161:0"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34378:0:0"
									},
									"scope": 1784,
									"src": "34185:747:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "35630:465:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1367,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "35649:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "35665:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "35657:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1368,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "35657:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35657:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "35649:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35669:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a",
																"typeString": "literal_string \"ERC777: transfer from the zero address\""
															},
															"value": "ERC777: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a",
																"typeString": "literal_string \"ERC777: transfer from the zero address\""
															}
														],
														"id": 1366,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "35641:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35641:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1375,
												"nodeType": "ExpressionStatement",
												"src": "35641:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1377,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "35729:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "35743:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "35735:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1378,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "35735:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35735:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "35729:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35747:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
																"typeString": "literal_string \"ERC777: transfer to the zero address\""
															},
															"value": "ERC777: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
																"typeString": "literal_string \"ERC777: transfer to the zero address\""
															}
														],
														"id": 1376,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "35721:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35721:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "35721:65:0"
											},
											{
												"assignments": [
													1387
												],
												"declarations": [
													{
														"constant": false,
														"id": 1387,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "35807:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1419,
														"src": "35799:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1386,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35799:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1390,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1388,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "35818:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35818:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35799:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1392,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "35861:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1393,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "35871:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1394,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "35877:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1395,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "35881:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1396,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "35889:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1397,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "35899:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1391,
														"name": "_callTokensToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "35843:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35843:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "35843:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1401,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "35931:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1402,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "35941:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1403,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "35947:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1404,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "35951:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1405,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "35959:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1406,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "35969:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1400,
														"name": "_move",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1579,
														"src": "35925:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35925:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "35925:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1410,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "36015:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1411,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "36025:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1412,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "36031:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1413,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "36035:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1414,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "36043:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1415,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "36053:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1416,
															"name": "requireReceptionAck",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "36067:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1409,
														"name": "_callTokensReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "35995:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35995:92:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "35995:92:0"
											}
										]
									},
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "34940:473:0",
										"text": " @dev Send tokens\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)\n @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient"
									},
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_send",
									"nameLocation": "35428:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "35452:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "35444:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35444:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35475:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "35467:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35467:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "35496:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "35488:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "35526:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "35513:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "35513:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "35558:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "35545:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "35545:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "requireReceptionAck",
												"nameLocation": "35586:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "35581:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35581:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35433:179:0"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35630:0:0"
									},
									"scope": 1784,
									"src": "35419:676:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1512,
										"nodeType": "Block",
										"src": "36517:684:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1433,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "36536:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "36552:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "36544:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1434,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "36544:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36544:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "36536:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36556:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c",
																"typeString": "literal_string \"ERC777: burn from the zero address\""
															},
															"value": "ERC777: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c",
																"typeString": "literal_string \"ERC777: burn from the zero address\""
															}
														],
														"id": 1432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "36528:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36528:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "36528:65:0"
											},
											{
												"assignments": [
													1443
												],
												"declarations": [
													{
														"constant": false,
														"id": 1443,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "36614:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1512,
														"src": "36606:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1442,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "36606:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1446,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1444,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "36625:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36625:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36606:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1448,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "36668:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1449,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "36678:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36692:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36684:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1450,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36684:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36684:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1454,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "36696:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1455,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "36704:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1456,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "36710:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1447,
														"name": "_callTokensToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "36650:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36650:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "36650:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1460,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "36757:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1461,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "36767:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36781:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36773:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1462,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36773:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36773:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1466,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "36785:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1459,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "36736:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36736:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "36736:56:0"
											},
											{
												"assignments": [
													1470
												],
												"declarations": [
													{
														"constant": false,
														"id": 1470,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "36848:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1512,
														"src": "36840:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1469,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "36840:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1474,
												"initialValue": {
													"baseExpression": {
														"id": 1471,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "36862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1473,
													"indexExpression": {
														"id": 1472,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "36872:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "36862:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36840:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1476,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "36896:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1477,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1425,
																"src": "36911:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36896:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36919:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe",
																"typeString": "literal_string \"ERC777: burn amount exceeds balance\""
															},
															"value": "ERC777: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe",
																"typeString": "literal_string \"ERC777: burn amount exceeds balance\""
															}
														],
														"id": 1475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "36888:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36888:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1481,
												"nodeType": "ExpressionStatement",
												"src": "36888:69:0"
											},
											{
												"id": 1490,
												"nodeType": "UncheckedBlock",
												"src": "36968:75:0",
												"statements": [
													{
														"expression": {
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1482,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "36993:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1484,
																"indexExpression": {
																	"id": 1483,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "37003:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "36993:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1485,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1470,
																	"src": "37011:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1486,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1425,
																	"src": "37025:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37011:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36993:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1489,
														"nodeType": "ExpressionStatement",
														"src": "36993:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1491,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "37053:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1492,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "37069:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37053:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1494,
												"nodeType": "ExpressionStatement",
												"src": "37053:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1496,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "37100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1497,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "37110:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1498,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "37116:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1499,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "37124:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1500,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "37130:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1495,
														"name": "Burned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "37093:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37093:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1502,
												"nodeType": "EmitStatement",
												"src": "37088:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1504,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "37168:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37182:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37174:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1505,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37174:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37174:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1509,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "37186:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1503,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "37159:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37159:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1511,
												"nodeType": "EmitStatement",
												"src": "37154:39:0"
											}
										]
									},
									"documentation": {
										"id": 1421,
										"nodeType": "StructuredDocumentation",
										"src": "36103:300:0",
										"text": " @dev Burn tokens\n @param from address token holder address\n @param amount uint256 amount of tokens to burn\n @param data bytes extra information provided by the token holder\n @param operatorData bytes extra information provided by the operator (if any)"
									},
									"id": 1513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "36418:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "36432:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "36424:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "36446:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "36438:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "36467:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "36454:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1426,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "36454:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "36486:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "36473:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "36473:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36423:76:0"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36517:0:0"
									},
									"scope": 1784,
									"src": "36409:792:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "37403:436:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1529,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "37435:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1530,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "37445:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1531,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "37451:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1532,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "37455:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1528,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "37414:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37414:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1534,
												"nodeType": "ExpressionStatement",
												"src": "37414:48:0"
											},
											{
												"assignments": [
													1536
												],
												"declarations": [
													{
														"constant": false,
														"id": 1536,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "37483:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1578,
														"src": "37475:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1535,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37475:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1540,
												"initialValue": {
													"baseExpression": {
														"id": 1537,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "37497:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1539,
													"indexExpression": {
														"id": 1538,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1517,
														"src": "37507:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37497:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37475:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1542,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1536,
																"src": "37531:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1543,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1521,
																"src": "37546:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37531:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37554:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b",
																"typeString": "literal_string \"ERC777: transfer amount exceeds balance\""
															},
															"value": "ERC777: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b",
																"typeString": "literal_string \"ERC777: transfer amount exceeds balance\""
															}
														],
														"id": 1541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "37523:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37523:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "37523:73:0"
											},
											{
												"id": 1556,
												"nodeType": "UncheckedBlock",
												"src": "37607:75:0",
												"statements": [
													{
														"expression": {
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1548,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "37632:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1550,
																"indexExpression": {
																	"id": 1549,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1517,
																	"src": "37642:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "37632:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1551,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1536,
																	"src": "37650:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1552,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1521,
																	"src": "37664:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37650:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37632:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1555,
														"nodeType": "ExpressionStatement",
														"src": "37632:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1557,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "37692:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1559,
														"indexExpression": {
															"id": 1558,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "37702:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "37692:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1560,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "37709:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37692:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "37692:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1564,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "37738:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1565,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "37748:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1566,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "37754:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1567,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "37758:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1568,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "37766:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1569,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "37776:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1563,
														"name": "Sent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "37733:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37733:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1571,
												"nodeType": "EmitStatement",
												"src": "37728:61:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1573,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "37814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1574,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "37820:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1575,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "37824:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1572,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "37805:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37805:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1577,
												"nodeType": "EmitStatement",
												"src": "37800:31:0"
											}
										]
									},
									"id": 1579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_move",
									"nameLocation": "37218:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37242:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "37234:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37234:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "37269:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "37261:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "37292:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "37284:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "37313:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "37305:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "37343:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "37330:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1522,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "37330:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "37375:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "37362:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "37362:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37223:171:0"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37403:0:0"
									},
									"scope": 1784,
									"src": "37209:630:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1623,
										"nodeType": "Block",
										"src": "38067:266:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1590,
																"name": "holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "38086:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38104:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "38096:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1591,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "38096:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38096:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "38086:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38108:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7",
																"typeString": "literal_string \"ERC777: approve from the zero address\""
															},
															"value": "ERC777: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7",
																"typeString": "literal_string \"ERC777: approve from the zero address\""
															}
														],
														"id": 1589,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "38078:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38078:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1598,
												"nodeType": "ExpressionStatement",
												"src": "38078:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1600,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1584,
																"src": "38167:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38186:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "38178:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1601,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "38178:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38178:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "38167:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38190:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d",
																"typeString": "literal_string \"ERC777: approve to the zero address\""
															},
															"value": "ERC777: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d",
																"typeString": "literal_string \"ERC777: approve to the zero address\""
															}
														],
														"id": 1599,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "38159:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38159:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1608,
												"nodeType": "ExpressionStatement",
												"src": "38159:69:0"
											},
											{
												"expression": {
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1609,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "38241:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1612,
															"indexExpression": {
																"id": 1610,
																"name": "holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "38253:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "38241:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1613,
														"indexExpression": {
															"id": 1611,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "38261:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "38241:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1614,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "38272:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38241:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "38241:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1618,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "38302:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1619,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "38310:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1620,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "38319:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1617,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "38293:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38293:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1622,
												"nodeType": "EmitStatement",
												"src": "38288:37:0"
											}
										]
									},
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "37847:131:0",
										"text": " @dev See {ERC20-_approve}.\n Note that accounts cannot have allowance issued by their operators."
									},
									"id": 1624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "37993:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "38010:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "38002:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38002:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "38026:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "38018:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "38043:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "38035:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38001:48:0"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38067:0:0"
									},
									"scope": 1784,
									"src": "37984:349:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "39023:278:0",
										"statements": [
											{
												"assignments": [
													1641
												],
												"declarations": [
													{
														"constant": false,
														"id": 1641,
														"mutability": "mutable",
														"name": "implementer",
														"nameLocation": "39042:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1668,
														"src": "39034:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1640,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "39034:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1647,
												"initialValue": {
													"arguments": [
														{
															"id": 1644,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1629,
															"src": "39098:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1645,
															"name": "_TOKENS_SENDER_INTERFACE_HASH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "39104:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1642,
															"name": "_ERC1820_REGISTRY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "39056:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1820Registry_$703",
																"typeString": "contract IERC1820Registry"
															}
														},
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "39074:23:0",
														"memberName": "getInterfaceImplementer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 666,
														"src": "39056:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (address,bytes32) view external returns (address)"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39056:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39034:100:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1648,
														"name": "implementer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1641,
														"src": "39149:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "39172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "39164:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1649,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "39164:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1652,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39164:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "39149:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1667,
												"nodeType": "IfStatement",
												"src": "39145:149:0",
												"trueBody": {
													"id": 1666,
													"nodeType": "Block",
													"src": "39176:118:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1658,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1627,
																		"src": "39231:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1659,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1629,
																		"src": "39241:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1660,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1631,
																		"src": "39247:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1661,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1633,
																		"src": "39251:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1662,
																		"name": "userData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1635,
																		"src": "39259:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1663,
																		"name": "operatorData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1637,
																		"src": "39269:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1655,
																				"name": "implementer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1641,
																				"src": "39205:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1654,
																			"name": "IERC777Sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 195,
																			"src": "39191:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC777Sender_$195_$",
																				"typeString": "type(contract IERC777Sender)"
																			}
																		},
																		"id": 1656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "39191:26:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC777Sender_$195",
																			"typeString": "contract IERC777Sender"
																		}
																	},
																	"id": 1657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "39218:12:0",
																	"memberName": "tokensToSend",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 194,
																	"src": "39191:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256,bytes memory,bytes memory) external"
																	}
																},
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39191:91:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1665,
															"nodeType": "ExpressionStatement",
															"src": "39191:91:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "38341:470:0",
										"text": " @dev Call from.tokensToSend() if the interface is registered\n @param operator address operator requesting the transfer\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)"
									},
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callTokensToSend",
									"nameLocation": "38826:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "38862:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "38854:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "38889:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "38881:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "38912:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "38904:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38904:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "38933:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "38925:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "38963:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "38950:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38950:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "38995:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "38982:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1636,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38982:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38843:171:0"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39023:0:0"
									},
									"scope": 1784,
									"src": "38817:484:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1726,
										"nodeType": "Block",
										"src": "40246:448:0",
										"statements": [
											{
												"assignments": [
													1688
												],
												"declarations": [
													{
														"constant": false,
														"id": 1688,
														"mutability": "mutable",
														"name": "implementer",
														"nameLocation": "40265:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1726,
														"src": "40257:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1687,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "40257:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1694,
												"initialValue": {
													"arguments": [
														{
															"id": 1691,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "40321:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1692,
															"name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "40325:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1689,
															"name": "_ERC1820_REGISTRY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "40279:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1820Registry_$703",
																"typeString": "contract IERC1820Registry"
															}
														},
														"id": 1690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "40297:23:0",
														"memberName": "getInterfaceImplementer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 666,
														"src": "40279:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (address,bytes32) view external returns (address)"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40279:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40257:101:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1695,
														"name": "implementer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1688,
														"src": "40373:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "40396:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "40388:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1696,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "40388:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1699,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40388:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "40373:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1714,
														"name": "requireReceptionAck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "40533:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1724,
													"nodeType": "IfStatement",
													"src": "40529:158:0",
													"trueBody": {
														"id": 1723,
														"nodeType": "Block",
														"src": "40554:133:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "40577:16:0",
																			"subExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 1716,
																						"name": "to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1676,
																						"src": "40578:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 1717,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "40581:10:0",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 285,
																					"src": "40578:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 1718,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "40578:15:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "4552433737373a20746f6b656e20726563697069656e7420636f6e747261637420686173206e6f20696d706c656d656e74657220666f7220455243373737546f6b656e73526563697069656e74",
																			"id": 1720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "40595:79:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80",
																				"typeString": "literal_string \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\""
																			},
																			"value": "ERC777: token recipient contract has no implementer for ERC777TokensRecipient"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80",
																				"typeString": "literal_string \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\""
																			}
																		],
																		"id": 1715,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "40569:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "40569:106:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1722,
																"nodeType": "ExpressionStatement",
																"src": "40569:106:0"
															}
														]
													}
												},
												"id": 1725,
												"nodeType": "IfStatement",
												"src": "40369:318:0",
												"trueBody": {
													"id": 1713,
													"nodeType": "Block",
													"src": "40400:123:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1705,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "40460:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1706,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "40470:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1707,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1676,
																		"src": "40476:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1708,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1678,
																		"src": "40480:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1709,
																		"name": "userData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1680,
																		"src": "40488:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1710,
																		"name": "operatorData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1682,
																		"src": "40498:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1702,
																				"name": "implementer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1688,
																				"src": "40432:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1701,
																			"name": "IERC777Recipient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 178,
																			"src": "40415:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC777Recipient_$178_$",
																				"typeString": "type(contract IERC777Recipient)"
																			}
																		},
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "40415:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC777Recipient_$178",
																			"typeString": "contract IERC777Recipient"
																		}
																	},
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "40445:14:0",
																	"memberName": "tokensReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 177,
																	"src": "40415:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256,bytes memory,bytes memory) external"
																	}
																},
																"id": 1711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40415:96:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1712,
															"nodeType": "ExpressionStatement",
															"src": "40415:96:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1670,
										"nodeType": "StructuredDocumentation",
										"src": "39309:688:0",
										"text": " @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\n tokensReceived() was not registered for the recipient\n @param operator address operator requesting the transfer\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)\n @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient"
									},
									"id": 1727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callTokensReceived",
									"nameLocation": "40012:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "40050:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "40042:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "40077:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "40069:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40100:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "40092:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "40121:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "40113:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "40151:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "40138:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1679,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "40138:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "40183:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "40170:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1681,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "40170:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "requireReceptionAck",
												"nameLocation": "40211:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "40206:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1683,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40206:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40031:206:0"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40246:0:0"
									},
									"scope": 1784,
									"src": "40003:691:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "41082:330:0",
										"statements": [
											{
												"assignments": [
													1738
												],
												"declarations": [
													{
														"constant": false,
														"id": 1738,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "41101:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1769,
														"src": "41093:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1737,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "41093:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1743,
												"initialValue": {
													"arguments": [
														{
															"id": 1740,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "41130:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1741,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "41137:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1739,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "41120:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41120:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41093:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1744,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1738,
														"src": "41160:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "41185:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1746,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "41185:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1745,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "41180:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41180:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1749,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "41194:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "41180:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41160:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1768,
												"nodeType": "IfStatement",
												"src": "41156:249:0",
												"trueBody": {
													"id": 1767,
													"nodeType": "Block",
													"src": "41199:206:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1752,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1738,
																			"src": "41222:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1753,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1734,
																			"src": "41242:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "41222:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4552433737373a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 1755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "41250:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_43a72b1be6b1964d60860b54d1c331016464b9d17c1d10dbea6a002344132abb",
																			"typeString": "literal_string \"ERC777: insufficient allowance\""
																		},
																		"value": "ERC777: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_43a72b1be6b1964d60860b54d1c331016464b9d17c1d10dbea6a002344132abb",
																			"typeString": "literal_string \"ERC777: insufficient allowance\""
																		}
																	],
																	"id": 1751,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "41214:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41214:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1757,
															"nodeType": "ExpressionStatement",
															"src": "41214:69:0"
														},
														{
															"id": 1766,
															"nodeType": "UncheckedBlock",
															"src": "41298:96:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1759,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1730,
																				"src": "41336:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1760,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1732,
																				"src": "41343:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1761,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1738,
																					"src": "41352:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1762,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1734,
																					"src": "41371:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "41352:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1758,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1624,
																			"src": "41327:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "41327:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1765,
																	"nodeType": "ExpressionStatement",
																	"src": "41327:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1728,
										"nodeType": "StructuredDocumentation",
										"src": "40702:284:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {IERC20-Approval} event."
									},
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "41001:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "41025:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "41017:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41017:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "41040:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "41032:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41032:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "41057:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "41049:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41016:48:0"
									},
									"returnParameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41082:0:0"
									},
									"scope": 1784,
									"src": "40992:420:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "42179:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "41420:646:0",
										"text": " @dev Hook that is called before any token transfer. This includes\n calls to {send}, {transfer}, {operatorSend}, {transferFrom}, minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "42081:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "42110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "42102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "42128:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "42120:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42120:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42142:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "42134:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42134:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "42154:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "42146:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42101:60:0"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42179:0:0"
									},
									"scope": 1784,
									"src": "42072:109:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1785,
							"src": "24363:17821:0",
							"usedErrors": []
						}
					],
					"src": "35:42149:0"
				},
				"id": 0
			}
		}
	}
}